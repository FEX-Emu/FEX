{
  "Features": {
    "Bitness": 64,
    "EnabledHostFeatures": [],
    "DisabledHostFeatures": [
      "SVE128",
      "SVE256",
      "RPRES",
      "AFP",
      "FLAGM",
      "FLAGM2"
    ]
  },
  "Comment": [
    "MMX instructions are defined as optimal without SRA being used for these instructions.",
    "Could remove a bunch of instructions if those are under SRA",
    "Vector shifts by vector elements can be optimized with SVE wide element shifts",
    "Vector multiply returning high can be optimized with SVE"
  ],
  "Instructions": {
    "femms": {
      "ExpectedInstructionCount": 2,
      "Comment": "0x0f 0x0b",
      "ExpectedArm64ASM": [
        "mov w20, #0x0",
        "strb w20, [x28, #1026]"
      ]
    },
    "movups xmm0, xmm0": {
      "ExpectedInstructionCount": 0,
      "Comment": "0x0f 0x10",
      "ExpectedArm64ASM": []
    },
    "movups xmm0, xmm1": {
      "ExpectedInstructionCount": 2,
      "Comment": "0x0f 0x10",
      "ExpectedArm64ASM": [
        "mov v2.16b, v17.16b",
        "mov v16.16b, v2.16b"
      ]
    },
    "movups xmm0, [rax]": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0x10",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldr q2, [x20]",
        "mov v16.16b, v2.16b"
      ]
    },
    "movups [rax], xmm0": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0x11",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov x20, x4",
        "str q2, [x20]"
      ]
    },
    "movlps xmm0, [rax]": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x12",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov v2.16b, v16.16b",
        "mov v3.16b, v2.16b",
        "ld1 {v3.d}[0], [x20]",
        "mov v16.16b, v3.16b"
      ]
    },
    "movlps [rax], xmm0": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0x13",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov x20, x4",
        "str d2, [x20]"
      ]
    },
    "movhlps xmm0, xmm1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x12",
      "ExpectedArm64ASM": [
        "mov v2.16b, v17.16b",
        "mov v3.16b, v16.16b",
        "mov v4.16b, v3.16b",
        "mov v4.d[0], v2.d[1]",
        "mov v16.16b, v4.16b"
      ]
    },
    "unpcklps xmm0, xmm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x14",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "zip1 v4.4s, v2.4s, v3.4s",
        "mov v16.16b, v4.16b"
      ]
    },
    "unpckhps xmm0, xmm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x15",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "zip2 v4.4s, v2.4s, v3.4s",
        "mov v16.16b, v4.16b"
      ]
    },
    "movhps xmm0, [rax]": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x16",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov v2.16b, v16.16b",
        "mov v3.16b, v2.16b",
        "ld1 {v3.d}[1], [x20]",
        "mov v16.16b, v3.16b"
      ]
    },
    "movlhps xmm0, xmm1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x16",
      "ExpectedArm64ASM": [
        "mov v2.16b, v17.16b",
        "mov v3.16b, v16.16b",
        "mov v4.16b, v3.16b",
        "mov v4.d[1], v2.d[0]",
        "mov v16.16b, v4.16b"
      ]
    },
    "movhps [rax], xmm0": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0x17",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov x20, x4",
        "st1 {v2.d}[1], [x20]"
      ]
    },
    "nop": {
      "ExpectedInstructionCount": 0,
      "Comment": "0x0f 0x19",
      "ExpectedArm64ASM": []
    },
    "movaps xmm0, xmm0": {
      "ExpectedInstructionCount": 0,
      "Comment": "0x0f 0x28",
      "ExpectedArm64ASM": []
    },
    "movaps xmm0, xmm1": {
      "ExpectedInstructionCount": 2,
      "Comment": "0x0f 0x28",
      "ExpectedArm64ASM": [
        "mov v2.16b, v17.16b",
        "mov v16.16b, v2.16b"
      ]
    },
    "movaps xmm0, [rax]": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0x28",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldr q2, [x20]",
        "mov v16.16b, v2.16b"
      ]
    },
    "movaps [rax], xmm0": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0x29",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov x20, x4",
        "str q2, [x20]"
      ]
    },
    "cvtpi2ps xmm0, [rax]": {
      "ExpectedInstructionCount": 7,
      "Comment": [
        "0x0f 0x2a"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov x20, x4",
        "ldr d3, [x20]",
        "mov v4.16b, v2.16b",
        "scvtf v0.2s, v3.2s",
        "mov v4.d[0], v0.d[0]",
        "mov v16.16b, v4.16b"
      ]
    },
    "cvtpi2ps xmm0, mm0": {
      "ExpectedInstructionCount": 6,
      "Comment": [
        "0x0f 0x2a"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "ldr d3, [x28, #768]",
        "mov v4.16b, v2.16b",
        "scvtf v0.2s, v3.2s",
        "mov v4.d[0], v0.d[0]",
        "mov v16.16b, v4.16b"
      ]
    },
    "movntps [rax], xmm0": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0x2b",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov x20, x4",
        "str q2, [x20]"
      ]
    },
    "cvttps2pi mm0, [rax]": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x2c",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldr d2, [x20]",
        "fcvtzs v3.2s, v2.2s",
        "str d3, [x28, #768]"
      ]
    },
    "cvttps2pi mm0, xmm0": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0x2c",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "fcvtzs v3.2s, v2.2s",
        "str d3, [x28, #768]"
      ]
    },
    "cvtps2pi mm0, [rax]": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x2d",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldr d2, [x20]",
        "frinti v3.2s, v2.2s",
        "fcvtzs v3.2s, v3.2s",
        "str d3, [x28, #768]"
      ]
    },
    "cvtps2pi mm0, xmm0": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x2d",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "frinti v3.2s, v2.2s",
        "fcvtzs v3.2s, v3.2s",
        "str d3, [x28, #768]"
      ]
    },
    "ucomiss xmm0, xmm1": {
      "ExpectedInstructionCount": 15,
      "Comment": "0x0f 0x2e",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "fcmp s2, s3",
        "mov w20, #0x0",
        "cset w21, eq",
        "cset w22, lo",
        "cset w23, vs",
        "orr w24, w22, w23",
        "lsl x22, x24, #29",
        "orr w24, w21, w23",
        "orr w21, w22, w24, lsl #30",
        "eor w22, w23, #0x1",
        "mov x26, x22",
        "mov x27, x20",
        "msr nzcv, x21"
      ]
    },
    "comiss xmm0, xmm1": {
      "ExpectedInstructionCount": 15,
      "Comment": "0x0f 0x2f",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "fcmp s2, s3",
        "mov w20, #0x0",
        "cset w21, eq",
        "cset w22, lo",
        "cset w23, vs",
        "orr w24, w22, w23",
        "lsl x22, x24, #29",
        "orr w24, w21, w23",
        "orr w21, w22, w24, lsl #30",
        "eor w22, w23, #0x1",
        "mov x26, x22",
        "mov x27, x20",
        "msr nzcv, x21"
      ]
    },
    "rdtsc": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x31",
      "ExpectedArm64ASM": [
        "mrs x20, S3_3_c14_c0_2",
        "lsl w21, w20, #7",
        "lsr x22, x20, #25",
        "mov x4, x21",
        "mov x6, x22"
      ]
    },
    "cmovo ax, bx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x0f 0x40",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel w22, w21, w20, vs",
        "mov x21, x20",
        "bfxil x21, x22, #0, #16",
        "mov x4, x21"
      ]
    },
    "cmovo eax, ebx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x40",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel w22, w21, w20, vs",
        "mov x4, x22"
      ]
    },
    "cmovo rax, rbx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x40",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel x22, x21, x20, vs",
        "mov x4, x22"
      ]
    },
    "cmovno ax, bx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x0f 0x41",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel w22, w21, w20, vc",
        "mov x21, x20",
        "bfxil x21, x22, #0, #16",
        "mov x4, x21"
      ]
    },
    "cmovno eax, ebx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x41",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel w22, w21, w20, vc",
        "mov x4, x22"
      ]
    },
    "cmovno rax, rbx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x41",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel x22, x21, x20, vc",
        "mov x4, x22"
      ]
    },
    "cmovb ax, bx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x0f 0x42",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel w22, w21, w20, hs",
        "mov x21, x20",
        "bfxil x21, x22, #0, #16",
        "mov x4, x21"
      ]
    },
    "cmovb eax, ebx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x42",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel w22, w21, w20, hs",
        "mov x4, x22"
      ]
    },
    "cmovb rax, rbx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x42",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel x22, x21, x20, hs",
        "mov x4, x22"
      ]
    },
    "cmovnb ax, bx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x0f 0x43",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel w22, w21, w20, lo",
        "mov x21, x20",
        "bfxil x21, x22, #0, #16",
        "mov x4, x21"
      ]
    },
    "cmovnb eax, ebx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x43",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel w22, w21, w20, lo",
        "mov x4, x22"
      ]
    },
    "cmovnb rax, rbx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x43",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel x22, x21, x20, lo",
        "mov x4, x22"
      ]
    },
    "cmovz ax, bx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x0f 0x44",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel w22, w21, w20, eq",
        "mov x21, x20",
        "bfxil x21, x22, #0, #16",
        "mov x4, x21"
      ]
    },
    "cmovz eax, ebx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x44",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel w22, w21, w20, eq",
        "mov x4, x22"
      ]
    },
    "cmovz rax, rbx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x44",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel x22, x21, x20, eq",
        "mov x4, x22"
      ]
    },
    "cmovnz ax, bx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x0f 0x45",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel w22, w21, w20, ne",
        "mov x21, x20",
        "bfxil x21, x22, #0, #16",
        "mov x4, x21"
      ]
    },
    "cmovnz eax, ebx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x45",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel w22, w21, w20, ne",
        "mov x4, x22"
      ]
    },
    "cmovnz rax, rbx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x45",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel x22, x21, x20, ne",
        "mov x4, x22"
      ]
    },
    "cmovbe ax, bx": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x0f 0x46",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel w22, w21, w20, hs",
        "csel w23, w21, w22, eq",
        "mov x21, x20",
        "bfxil x21, x23, #0, #16",
        "mov x4, x21"
      ]
    },
    "cmovbe eax, ebx": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x46",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel w22, w21, w20, hs",
        "csel w20, w21, w22, eq",
        "mov x4, x20"
      ]
    },
    "cmovbe rax, rbx": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x46",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel x22, x21, x20, hs",
        "csel x20, x21, x22, eq",
        "mov x4, x20"
      ]
    },
    "cmovnbe ax, bx": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x0f 0x47",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel w22, w21, w20, lo",
        "csel w21, w22, w20, ne",
        "mov x22, x20",
        "bfxil x22, x21, #0, #16",
        "mov x4, x22"
      ]
    },
    "cmovnbe eax, ebx": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x47",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel w22, w21, w20, lo",
        "csel w21, w22, w20, ne",
        "mov x4, x21"
      ]
    },
    "cmovnbe rax, rbx": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x47",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel x22, x21, x20, lo",
        "csel x21, x22, x20, ne",
        "mov x4, x21"
      ]
    },
    "cmovs ax, bx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x0f 0x48",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel w22, w21, w20, mi",
        "mov x21, x20",
        "bfxil x21, x22, #0, #16",
        "mov x4, x21"
      ]
    },
    "cmovs eax, ebx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x48",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel w22, w21, w20, mi",
        "mov x4, x22"
      ]
    },
    "cmovs rax, rbx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x48",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel x22, x21, x20, mi",
        "mov x4, x22"
      ]
    },
    "cmovns ax, bx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x0f 0x49",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel w22, w21, w20, pl",
        "mov x21, x20",
        "bfxil x21, x22, #0, #16",
        "mov x4, x21"
      ]
    },
    "cmovns eax, ebx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x49",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel w22, w21, w20, pl",
        "mov x4, x22"
      ]
    },
    "cmovns rax, rbx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x49",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel x22, x21, x20, pl",
        "mov x4, x22"
      ]
    },
    "cmovpe ax, bx": {
      "ExpectedInstructionCount": 13,
      "Comment": "0x0f 0x4a",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "mov x22, x26",
        "eor w23, w22, w22, lsr #4",
        "eor w22, w23, w23, lsr #2",
        "eon w23, w22, w22, lsr #1",
        "mrs x22, nzcv",
        "tst w23, #0x1",
        "csel w23, w21, w20, ne",
        "mov x21, x20",
        "bfxil x21, x23, #0, #16",
        "mov x4, x21",
        "msr nzcv, x22"
      ]
    },
    "cmovpe eax, ebx": {
      "ExpectedInstructionCount": 11,
      "Comment": "0x0f 0x4a",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "mov x22, x26",
        "eor w23, w22, w22, lsr #4",
        "eor w22, w23, w23, lsr #2",
        "eon w23, w22, w22, lsr #1",
        "mrs x22, nzcv",
        "tst w23, #0x1",
        "csel w23, w21, w20, ne",
        "mov x4, x23",
        "msr nzcv, x22"
      ]
    },
    "cmovpe rax, rbx": {
      "ExpectedInstructionCount": 11,
      "Comment": "0x0f 0x4a",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "mov x22, x26",
        "eor w23, w22, w22, lsr #4",
        "eor w22, w23, w23, lsr #2",
        "eon w23, w22, w22, lsr #1",
        "mrs x22, nzcv",
        "tst w23, #0x1",
        "csel x23, x21, x20, ne",
        "mov x4, x23",
        "msr nzcv, x22"
      ]
    },
    "cmovnp ax, bx": {
      "ExpectedInstructionCount": 13,
      "Comment": "0x0f 0x4b",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "mov x22, x26",
        "eor w23, w22, w22, lsr #4",
        "eor w22, w23, w23, lsr #2",
        "eor w23, w22, w22, lsr #1",
        "mrs x22, nzcv",
        "tst w23, #0x1",
        "csel w23, w21, w20, ne",
        "mov x21, x20",
        "bfxil x21, x23, #0, #16",
        "mov x4, x21",
        "msr nzcv, x22"
      ]
    },
    "cmovnp eax, ebx": {
      "ExpectedInstructionCount": 11,
      "Comment": "0x0f 0x4b",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "mov x22, x26",
        "eor w23, w22, w22, lsr #4",
        "eor w22, w23, w23, lsr #2",
        "eor w23, w22, w22, lsr #1",
        "mrs x22, nzcv",
        "tst w23, #0x1",
        "csel w23, w21, w20, ne",
        "mov x4, x23",
        "msr nzcv, x22"
      ]
    },
    "cmovnp rax, rbx": {
      "ExpectedInstructionCount": 11,
      "Comment": "0x0f 0x4b",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "mov x22, x26",
        "eor w23, w22, w22, lsr #4",
        "eor w22, w23, w23, lsr #2",
        "eor w23, w22, w22, lsr #1",
        "mrs x22, nzcv",
        "tst w23, #0x1",
        "csel x23, x21, x20, ne",
        "mov x4, x23",
        "msr nzcv, x22"
      ]
    },
    "cmovl ax, bx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x0f 0x4c",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel w22, w21, w20, lt",
        "mov x21, x20",
        "bfxil x21, x22, #0, #16",
        "mov x4, x21"
      ]
    },
    "cmovl eax, ebx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x4c",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel w22, w21, w20, lt",
        "mov x4, x22"
      ]
    },
    "cmovl rax, rbx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x4c",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel x22, x21, x20, lt",
        "mov x4, x22"
      ]
    },
    "cmovnl ax, bx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x0f 0x4d",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel w22, w21, w20, ge",
        "mov x21, x20",
        "bfxil x21, x22, #0, #16",
        "mov x4, x21"
      ]
    },
    "cmovnl eax, ebx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x4d",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel w22, w21, w20, ge",
        "mov x4, x22"
      ]
    },
    "cmovnl rax, rbx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x4d",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel x22, x21, x20, ge",
        "mov x4, x22"
      ]
    },
    "cmovle ax, bx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x0f 0x4e",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel w22, w21, w20, le",
        "mov x21, x20",
        "bfxil x21, x22, #0, #16",
        "mov x4, x21"
      ]
    },
    "cmovle eax, ebx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x4e",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel w22, w21, w20, le",
        "mov x4, x22"
      ]
    },
    "cmovle rax, rbx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x4e",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel x22, x21, x20, le",
        "mov x4, x22"
      ]
    },
    "cmovnle ax, bx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x0f 0x4f",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel w22, w21, w20, gt",
        "mov x21, x20",
        "bfxil x21, x22, #0, #16",
        "mov x4, x21"
      ]
    },
    "cmovnle eax, ebx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x4f",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel w22, w21, w20, gt",
        "mov x4, x22"
      ]
    },
    "cmovnle rax, rbx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x4f",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "csel x22, x21, x20, gt",
        "mov x4, x22"
      ]
    },
    "movmskps eax, xmm0": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x0f 0x50",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "ushr v3.4s, v2.4s, #31",
        "ldr q2, [x28, #2144]",
        "ushl v4.4s, v3.4s, v2.4s",
        "addv s2, v4.4s",
        "mov w20, v2.s[0]",
        "mov x4, x20"
      ]
    },
    "movmskps rax, xmm0": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x0f 0x50",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "ushr v3.4s, v2.4s, #31",
        "ldr q2, [x28, #2144]",
        "ushl v4.4s, v3.4s, v2.4s",
        "addv s2, v4.4s",
        "mov w20, v2.s[0]",
        "mov x4, x20"
      ]
    },
    "sqrtps xmm0, xmm1": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0x51",
      "ExpectedArm64ASM": [
        "mov v2.16b, v17.16b",
        "fsqrt v3.4s, v2.4s",
        "mov v16.16b, v3.16b"
      ]
    },
    "rsqrtps xmm0, xmm1": {
      "ExpectedInstructionCount": 5,
      "Comment": [
        "0x0f 0x52"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v17.16b",
        "fmov v0.4s, #0x70 (1.0000)",
        "fsqrt v1.4s, v2.4s",
        "fdiv v3.4s, v0.4s, v1.4s",
        "mov v16.16b, v3.16b"
      ]
    },
    "rcpps xmm0, xmm1": {
      "ExpectedInstructionCount": 4,
      "Comment": [
        "0x0f 0x53"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v17.16b",
        "fmov v0.4s, #0x70 (1.0000)",
        "fdiv v3.4s, v0.4s, v2.4s",
        "mov v16.16b, v3.16b"
      ]
    },
    "andps xmm0, xmm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x54",
      "ExpectedArm64ASM": [
        "mov v2.16b, v17.16b",
        "mov v3.16b, v16.16b",
        "and v4.16b, v3.16b, v2.16b",
        "mov v16.16b, v4.16b"
      ]
    },
    "andnps xmm0, xmm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x55",
      "ExpectedArm64ASM": [
        "mov v2.16b, v17.16b",
        "mov v3.16b, v16.16b",
        "bic v4.16b, v2.16b, v3.16b",
        "mov v16.16b, v4.16b"
      ]
    },
    "orps xmm0, xmm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x56",
      "ExpectedArm64ASM": [
        "mov v2.16b, v17.16b",
        "mov v3.16b, v16.16b",
        "orr v4.16b, v3.16b, v2.16b",
        "mov v16.16b, v4.16b"
      ]
    },
    "xorps xmm0, xmm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x57",
      "ExpectedArm64ASM": [
        "mov v2.16b, v17.16b",
        "mov v3.16b, v16.16b",
        "eor v4.16b, v3.16b, v2.16b",
        "mov v16.16b, v4.16b"
      ]
    },
    "addps xmm0, xmm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x58",
      "ExpectedArm64ASM": [
        "mov v2.16b, v17.16b",
        "mov v3.16b, v16.16b",
        "fadd v4.4s, v3.4s, v2.4s",
        "mov v16.16b, v4.16b"
      ]
    },
    "mulps xmm0, xmm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x59",
      "ExpectedArm64ASM": [
        "mov v2.16b, v17.16b",
        "mov v3.16b, v16.16b",
        "fmul v4.4s, v3.4s, v2.4s",
        "mov v16.16b, v4.16b"
      ]
    },
    "cvtps2pd xmm0, xmm1": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0x5a",
      "ExpectedArm64ASM": [
        "mov v2.16b, v17.16b",
        "fcvtl v3.2d, v2.2s",
        "mov v16.16b, v3.16b"
      ]
    },
    "cvtps2pd xmm0, [rax]": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x5a",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldr d2, [x20]",
        "fcvtl v3.2d, v2.2s",
        "mov v16.16b, v3.16b"
      ]
    },
    "cvtdq2ps xmm0, xmm1": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0x5b",
      "ExpectedArm64ASM": [
        "mov v2.16b, v17.16b",
        "scvtf v3.4s, v2.4s",
        "mov v16.16b, v3.16b"
      ]
    },
    "subps xmm0, xmm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x5c",
      "ExpectedArm64ASM": [
        "mov v2.16b, v17.16b",
        "mov v3.16b, v16.16b",
        "fsub v4.4s, v3.4s, v2.4s",
        "mov v16.16b, v4.16b"
      ]
    },
    "minps xmm0, xmm1": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x0f 0x5d",
      "ExpectedArm64ASM": [
        "mov v2.16b, v17.16b",
        "mov v3.16b, v16.16b",
        "fcmgt v0.4s, v2.4s, v3.4s",
        "mov v4.16b, v3.16b",
        "bif v4.16b, v2.16b, v0.16b",
        "mov v16.16b, v4.16b"
      ]
    },
    "divps xmm0, xmm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x5e",
      "ExpectedArm64ASM": [
        "mov v2.16b, v17.16b",
        "mov v3.16b, v16.16b",
        "fdiv v4.4s, v3.4s, v2.4s",
        "mov v16.16b, v4.16b"
      ]
    },
    "maxps xmm0, xmm1": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x0f 0x5f",
      "ExpectedArm64ASM": [
        "mov v2.16b, v17.16b",
        "mov v3.16b, v16.16b",
        "fcmgt v0.4s, v2.4s, v3.4s",
        "mov v4.16b, v3.16b",
        "bit v4.16b, v2.16b, v0.16b",
        "mov v16.16b, v4.16b"
      ]
    },
    "punpcklbw mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x60",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "ldr d3, [x28, #784]",
        "zip1 v4.8b, v2.8b, v3.8b",
        "str d4, [x28, #768]"
      ]
    },
    "punpcklbw mm0, [rax]": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x60",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "mov x20, x4",
        "ldr d3, [x20]",
        "zip1 v4.8b, v2.8b, v3.8b",
        "str d4, [x28, #768]"
      ]
    },
    "punpcklwd mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x61",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "ldr d3, [x28, #784]",
        "zip1 v4.4h, v2.4h, v3.4h",
        "str d4, [x28, #768]"
      ]
    },
    "punpcklwd mm0, [rax]": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x61",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "mov x20, x4",
        "ldr d3, [x20]",
        "zip1 v4.4h, v2.4h, v3.4h",
        "str d4, [x28, #768]"
      ]
    },
    "punpckldq mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x62",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "ldr d3, [x28, #784]",
        "zip1 v4.2s, v2.2s, v3.2s",
        "str d4, [x28, #768]"
      ]
    },
    "punpckldq mm0, [rax]": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x62",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "mov x20, x4",
        "ldr d3, [x20]",
        "zip1 v4.2s, v2.2s, v3.2s",
        "str d4, [x28, #768]"
      ]
    },
    "packsswb mm0, mm1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x63",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "ldr d3, [x28, #784]",
        "zip1 v4.2d, v2.2d, v3.2d",
        "sqxtn v4.8b, v4.8h",
        "str d4, [x28, #768]"
      ]
    },
    "packsswb mm0, [rax]": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x0f 0x63",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "mov x20, x4",
        "ldr d3, [x20]",
        "zip1 v4.2d, v2.2d, v3.2d",
        "sqxtn v4.8b, v4.8h",
        "str d4, [x28, #768]"
      ]
    },
    "packsswb mm0, mm0": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x63",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "zip1 v3.2d, v2.2d, v2.2d",
        "sqxtn v3.8b, v3.8h",
        "str d3, [x28, #768]"
      ]
    },
    "pcmpgtb mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x64",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "cmgt v4.16b, v3.16b, v2.16b",
        "str d4, [x28, #768]"
      ]
    },
    "pcmpgtw mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x65",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "cmgt v4.8h, v3.8h, v2.8h",
        "str d4, [x28, #768]"
      ]
    },
    "pcmpgtd mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x66",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "cmgt v4.4s, v3.4s, v2.4s",
        "str d4, [x28, #768]"
      ]
    },
    "punpckhbw mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x68",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "ldr d3, [x28, #784]",
        "zip2 v4.8b, v2.8b, v3.8b",
        "str d4, [x28, #768]"
      ]
    },
    "punpckhbw mm0, [rax]": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x68",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "mov x20, x4",
        "ldr d3, [x20]",
        "zip2 v4.8b, v2.8b, v3.8b",
        "str d4, [x28, #768]"
      ]
    },
    "punpckhwd mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x69",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "ldr d3, [x28, #784]",
        "zip2 v4.4h, v2.4h, v3.4h",
        "str d4, [x28, #768]"
      ]
    },
    "punpckhwd mm0, [rax]": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x69",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "mov x20, x4",
        "ldr d3, [x20]",
        "zip2 v4.4h, v2.4h, v3.4h",
        "str d4, [x28, #768]"
      ]
    },
    "punpckhdq mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x6a",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "ldr d3, [x28, #784]",
        "zip2 v4.2s, v2.2s, v3.2s",
        "str d4, [x28, #768]"
      ]
    },
    "punpckhdq mm0, [rax]": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x6a",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "mov x20, x4",
        "ldr d3, [x20]",
        "zip2 v4.2s, v2.2s, v3.2s",
        "str d4, [x28, #768]"
      ]
    },
    "packssdw mm0, mm1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x6b",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "ldr d3, [x28, #784]",
        "zip1 v4.2d, v2.2d, v3.2d",
        "sqxtn v4.4h, v4.4s",
        "str d4, [x28, #768]"
      ]
    },
    "movd mm0, eax": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0x6e",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "fmov s2, w20",
        "str d2, [x28, #768]"
      ]
    },
    "movd mm0, [rax]": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0x6e",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldr s2, [x20]",
        "str d2, [x28, #768]"
      ]
    },
    "movq mm0, mm0": {
      "ExpectedInstructionCount": 2,
      "Comment": "0x0f 0x6f",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "str d2, [x28, #768]"
      ]
    },
    "movq mm0, mm1": {
      "ExpectedInstructionCount": 2,
      "Comment": "0x0f 0x6f",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "str d2, [x28, #768]"
      ]
    },
    "movq mm0, [rax]": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0x6f",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldr d2, [x20]",
        "str d2, [x28, #768]"
      ]
    },
    "pshufw mm0, mm1, 0": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0x70",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "dup v3.4h, v2.h[0]",
        "str d3, [x28, #768]"
      ]
    },
    "pshufw mm0, [rax], 0": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x70",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldr d2, [x20]",
        "dup v3.4h, v2.h[0]",
        "str d3, [x28, #768]"
      ]
    },
    "pshufw mm0, mm1, 1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x70",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr x0, [x28, #1744]",
        "ldr d3, [x0, #16]",
        "tbl v4.8b, {v2.16b}, v3.8b",
        "str d4, [x28, #768]"
      ]
    },
    "pshufw mm0, [rax], 1": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x0f 0x70",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldr d2, [x20]",
        "ldr x0, [x28, #1744]",
        "ldr d3, [x0, #16]",
        "tbl v4.8b, {v2.16b}, v3.8b",
        "str d4, [x28, #768]"
      ]
    },
    "pshufw mm0, mm1, 0xff": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0x70",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "dup v3.4h, v2.h[3]",
        "str d3, [x28, #768]"
      ]
    },
    "pshufw mm0, [rax], 0xff": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x70",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldr d2, [x20]",
        "dup v3.4h, v2.h[3]",
        "str d3, [x28, #768]"
      ]
    },
    "pcmpeqb mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x74",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "cmeq v4.16b, v3.16b, v2.16b",
        "str d4, [x28, #768]"
      ]
    },
    "pcmpeqw mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x75",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "cmeq v4.8h, v3.8h, v2.8h",
        "str d4, [x28, #768]"
      ]
    },
    "pcmpeqd mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0x76",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "cmeq v4.4s, v3.4s, v2.4s",
        "str d4, [x28, #768]"
      ]
    },
    "emms": {
      "ExpectedInstructionCount": 2,
      "Comment": "0x0f 0x77",
      "ExpectedArm64ASM": [
        "mov w20, #0x0",
        "strb w20, [x28, #1026]"
      ]
    },
    "movd eax, mm0": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0x7e",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "mov w20, v2.s[0]",
        "mov x4, x20"
      ]
    },
    "movd [rax], mm0": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0x7e",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "mov x20, x4",
        "str s2, [x20]"
      ]
    },
    "db 0x0f, 0x7f, 0xc1": {
      "ExpectedInstructionCount": 2,
      "Comment": [
        "movq mm0, mm1",
        "Manual encoded since nasm would encode 0x6f version",
        "0x0f 0x7f"
      ],
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "str d2, [x28, #784]"
      ]
    },
    "movq [rax], mm0": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0x7f",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "mov x20, x4",
        "str d2, [x20]"
      ]
    },
    "seto al": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x90",
      "ExpectedArm64ASM": [
        "cset x20, vs",
        "mov x21, x4",
        "mov x22, x21",
        "bfxil x22, x20, #0, #8",
        "mov x4, x22"
      ]
    },
    "setno al": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x91",
      "ExpectedArm64ASM": [
        "cset x20, vc",
        "mov x21, x4",
        "mov x22, x21",
        "bfxil x22, x20, #0, #8",
        "mov x4, x22"
      ]
    },
    "setb al": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x92",
      "ExpectedArm64ASM": [
        "cset x20, hs",
        "mov x21, x4",
        "mov x22, x21",
        "bfxil x22, x20, #0, #8",
        "mov x4, x22"
      ]
    },
    "setnb al": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x93",
      "ExpectedArm64ASM": [
        "cset x20, lo",
        "mov x21, x4",
        "mov x22, x21",
        "bfxil x22, x20, #0, #8",
        "mov x4, x22"
      ]
    },
    "setz al": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x94",
      "ExpectedArm64ASM": [
        "cset x20, eq",
        "mov x21, x4",
        "mov x22, x21",
        "bfxil x22, x20, #0, #8",
        "mov x4, x22"
      ]
    },
    "setnz al": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x95",
      "ExpectedArm64ASM": [
        "cset x20, ne",
        "mov x21, x4",
        "mov x22, x21",
        "bfxil x22, x20, #0, #8",
        "mov x4, x22"
      ]
    },
    "setbe al": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x0f 0x96",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "cset x21, hs",
        "csel x22, x20, x21, eq",
        "mov x20, x4",
        "mov x21, x20",
        "bfxil x21, x22, #0, #8",
        "mov x4, x21"
      ]
    },
    "setnbe al": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x0f 0x97",
      "ExpectedArm64ASM": [
        "cset x20, lo",
        "csel x21, x20, xzr, ne",
        "mov x20, x4",
        "mov x22, x20",
        "bfxil x22, x21, #0, #8",
        "mov x4, x22"
      ]
    },
    "sets al": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x98",
      "ExpectedArm64ASM": [
        "cset x20, mi",
        "mov x21, x4",
        "mov x22, x21",
        "bfxil x22, x20, #0, #8",
        "mov x4, x22"
      ]
    },
    "setns al": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x99",
      "ExpectedArm64ASM": [
        "cset x20, pl",
        "mov x21, x4",
        "mov x22, x21",
        "bfxil x22, x20, #0, #8",
        "mov x4, x22"
      ]
    },
    "setpe al": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x0f 0x9a",
      "ExpectedArm64ASM": [
        "mov x20, x26",
        "eor w21, w20, w20, lsr #4",
        "eor w20, w21, w21, lsr #2",
        "eon w21, w20, w20, lsr #1",
        "and x20, x21, #0x1",
        "mov x21, x4",
        "mov x22, x21",
        "bfxil x22, x20, #0, #8",
        "mov x4, x22"
      ]
    },
    "setnp al": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x0f 0x9b",
      "ExpectedArm64ASM": [
        "mov x20, x26",
        "eor w21, w20, w20, lsr #4",
        "eor w20, w21, w21, lsr #2",
        "eor w21, w20, w20, lsr #1",
        "and x20, x21, #0x1",
        "mov x21, x4",
        "mov x22, x21",
        "bfxil x22, x20, #0, #8",
        "mov x4, x22"
      ]
    },
    "setl al": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x9c",
      "ExpectedArm64ASM": [
        "cset x20, lt",
        "mov x21, x4",
        "mov x22, x21",
        "bfxil x22, x20, #0, #8",
        "mov x4, x22"
      ]
    },
    "setnl al": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x9d",
      "ExpectedArm64ASM": [
        "cset x20, ge",
        "mov x21, x4",
        "mov x22, x21",
        "bfxil x22, x20, #0, #8",
        "mov x4, x22"
      ]
    },
    "setle al": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x9e",
      "ExpectedArm64ASM": [
        "cset x20, le",
        "mov x21, x4",
        "mov x22, x21",
        "bfxil x22, x20, #0, #8",
        "mov x4, x22"
      ]
    },
    "setnle al": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0x9f",
      "ExpectedArm64ASM": [
        "cset x20, gt",
        "mov x21, x4",
        "mov x22, x21",
        "bfxil x22, x20, #0, #8",
        "mov x4, x22"
      ]
    },
    "push fs": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0xa0",
      "ExpectedArm64ASM": [
        "mov x20, x8",
        "ldr x21, [x28, #176]",
        "mov x22, x20",
        "str x21, [x22, #-8]!",
        "mov x8, x22"
      ]
    },
    "pop fs": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x0f 0xa1",
      "ExpectedArm64ASM": [
        "mov x20, x8",
        "ldr x21, [x20]",
        "add x22, x20, #0x8 (8)",
        "mov x8, x22",
        "strh w21, [x28, #146]",
        "ubfx w20, w21, #3, #13",
        "add x0, x28, x20, lsl #2",
        "ldr w21, [x0, #896]",
        "str w21, [x28, #176]"
      ]
    },
    "bt ax, bx": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x0f 0xa3",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "and x22, x20, #0xf",
        "lsr w20, w21, w22",
        "ubfx x21, x20, #0, #1",
        "lsl x20, x21, #29",
        "msr nzcv, x20"
      ]
    },
    "bt [rax], bx": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x0f 0xa3",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "ubfx x22, x20, #0, #3",
        "sbfx x23, x20, #3, #13",
        "ldrb w20, [x21, x23, sxtx]",
        "lsr w21, w20, w22",
        "ubfx x20, x21, #0, #1",
        "lsl x21, x20, #29",
        "msr nzcv, x21"
      ]
    },
    "bt eax, ebx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x0f 0xa3",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "lsr w22, w21, w20",
        "ubfx x20, x22, #0, #1",
        "lsl x21, x20, #29",
        "msr nzcv, x21"
      ]
    },
    "bt [rax], ebx": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x0f 0xa3",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "ubfx x22, x20, #0, #3",
        "sbfx x23, x20, #3, #29",
        "ldrb w20, [x21, x23, sxtx]",
        "lsr w21, w20, w22",
        "ubfx x20, x21, #0, #1",
        "lsl x21, x20, #29",
        "msr nzcv, x21"
      ]
    },
    "bt rax, rbx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x0f 0xa3",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "lsr x22, x21, x20",
        "ubfx x20, x22, #0, #1",
        "lsl x21, x20, #29",
        "msr nzcv, x21"
      ]
    },
    "bt [rax], rbx": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x0f 0xa3",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "ubfx x22, x20, #0, #3",
        "asr x23, x20, #3",
        "ldrb w20, [x21, x23, sxtx]",
        "lsr w21, w20, w22",
        "ubfx x20, x21, #0, #1",
        "lsl x21, x20, #29",
        "msr nzcv, x21"
      ]
    },
    "shld ax, bx, 0": {
      "ExpectedInstructionCount": 0,
      "Comment": "0x0f 0xac",
      "ExpectedArm64ASM": []
    },
    "shld ax, bx, 1": {
      "ExpectedInstructionCount": 19,
      "Comment": "0x0f 0xac",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "uxth w21, w20",
        "mov x20, x4",
        "uxth w22, w20",
        "lsl x23, x22, #1",
        "lsr w24, w21, #15",
        "orr x21, x23, x24",
        "mov x23, x20",
        "bfxil x23, x21, #0, #16",
        "mov x4, x23",
        "cmn wzr, w21, lsl #16",
        "ubfx x20, x22, #15, #1",
        "mrs x23, nzcv",
        "orr w24, w23, w20, lsl #29",
        "mov x26, x21",
        "eor w20, w21, w22",
        "ubfx x21, x20, #15, #1",
        "orr w20, w24, w21, lsl #28",
        "msr nzcv, x20"
      ]
    },
    "shld ax, bx, 15": {
      "ExpectedInstructionCount": 16,
      "Comment": "0x0f 0xac",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "uxth w21, w20",
        "mov x20, x4",
        "uxth w22, w20",
        "lsl x23, x22, #15",
        "lsr w24, w21, #1",
        "orr x21, x23, x24",
        "mov x23, x20",
        "bfxil x23, x21, #0, #16",
        "mov x4, x23",
        "cmn wzr, w21, lsl #16",
        "ubfx x20, x22, #1, #1",
        "mrs x22, nzcv",
        "orr w23, w22, w20, lsl #29",
        "mov x26, x21",
        "msr nzcv, x23"
      ]
    },
    "shld ax, bx, 16": {
      "ExpectedInstructionCount": 15,
      "Comment": "0x0f 0xac",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "uxth w21, w20",
        "mov x20, x4",
        "uxth w22, w20",
        "lsl x23, x22, #16",
        "orr x24, x23, x21",
        "mov x21, x20",
        "bfxil x21, x24, #0, #16",
        "mov x4, x21",
        "cmn wzr, w24, lsl #16",
        "ubfx x20, x22, #0, #1",
        "mrs x21, nzcv",
        "orr w22, w21, w20, lsl #29",
        "mov x26, x24",
        "msr nzcv, x22"
      ]
    },
    "shld ax, bx, 31": {
      "ExpectedInstructionCount": 16,
      "Comment": "0x0f 0xac",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "uxth w21, w20",
        "mov x20, x4",
        "uxth w22, w20",
        "lsl x23, x22, #31",
        "lsr w24, w21, #17",
        "orr x21, x23, x24",
        "mov x23, x20",
        "bfxil x23, x21, #0, #16",
        "mov x4, x23",
        "cmn wzr, w21, lsl #16",
        "ubfx x20, x22, #1, #1",
        "mrs x22, nzcv",
        "orr w23, w22, w20, lsl #29",
        "mov x26, x21",
        "msr nzcv, x23"
      ]
    },
    "shld eax, ebx, 0": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0xac",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov w21, w20",
        "mov x4, x21"
      ]
    },
    "shld eax, ebx, 1": {
      "ExpectedInstructionCount": 15,
      "Comment": "0x0f 0xac",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov w21, w20",
        "mov x20, x4",
        "mov w22, w20",
        "extr w20, w22, w21, #31",
        "mov x4, x20",
        "tst w20, w20",
        "ubfx x21, x22, #31, #1",
        "mrs x23, nzcv",
        "orr w24, w23, w21, lsl #29",
        "mov x26, x20",
        "eor w21, w20, w22",
        "ubfx x20, x21, #31, #1",
        "orr w21, w24, w20, lsl #28",
        "msr nzcv, x21"
      ]
    },
    "shld eax, ebx, 15": {
      "ExpectedInstructionCount": 12,
      "Comment": "0x0f 0xac",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov w21, w20",
        "mov x20, x4",
        "mov w22, w20",
        "extr w20, w22, w21, #17",
        "mov x4, x20",
        "tst w20, w20",
        "ubfx x21, x22, #17, #1",
        "mrs x22, nzcv",
        "orr w23, w22, w21, lsl #29",
        "mov x26, x20",
        "msr nzcv, x23"
      ]
    },
    "shld eax, ebx, 16": {
      "ExpectedInstructionCount": 12,
      "Comment": "0x0f 0xac",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov w21, w20",
        "mov x20, x4",
        "mov w22, w20",
        "extr w20, w22, w21, #16",
        "mov x4, x20",
        "tst w20, w20",
        "ubfx x21, x22, #16, #1",
        "mrs x22, nzcv",
        "orr w23, w22, w21, lsl #29",
        "mov x26, x20",
        "msr nzcv, x23"
      ]
    },
    "shld eax, ebx, 31": {
      "ExpectedInstructionCount": 12,
      "Comment": "0x0f 0xac",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov w21, w20",
        "mov x20, x4",
        "mov w22, w20",
        "extr w20, w22, w21, #1",
        "mov x4, x20",
        "tst w20, w20",
        "ubfx x21, x22, #1, #1",
        "mrs x22, nzcv",
        "orr w23, w22, w21, lsl #29",
        "mov x26, x20",
        "msr nzcv, x23"
      ]
    },
    "shld rax, rbx, 0": {
      "ExpectedInstructionCount": 0,
      "Comment": "0x0f 0xac",
      "ExpectedArm64ASM": []
    },
    "shld rax, rbx, 1": {
      "ExpectedInstructionCount": 13,
      "Comment": "0x0f 0xac",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "extr x22, x21, x20, #63",
        "mov x4, x22",
        "tst x22, x22",
        "lsr x20, x21, #63",
        "mrs x23, nzcv",
        "orr w24, w23, w20, lsl #29",
        "mov x26, x22",
        "eor x20, x22, x21",
        "lsr x21, x20, #63",
        "orr w20, w24, w21, lsl #28",
        "msr nzcv, x20"
      ]
    },
    "shld rax, rbx, 15": {
      "ExpectedInstructionCount": 10,
      "Comment": "0x0f 0xac",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "extr x22, x21, x20, #49",
        "mov x4, x22",
        "tst x22, x22",
        "ubfx x20, x21, #49, #1",
        "mrs x21, nzcv",
        "orr w23, w21, w20, lsl #29",
        "mov x26, x22",
        "msr nzcv, x23"
      ]
    },
    "shld rax, rbx, 32": {
      "ExpectedInstructionCount": 10,
      "Comment": "0x0f 0xac",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "extr x22, x21, x20, #32",
        "mov x4, x22",
        "tst x22, x22",
        "ubfx x20, x21, #32, #1",
        "mrs x21, nzcv",
        "orr w23, w21, w20, lsl #29",
        "mov x26, x22",
        "msr nzcv, x23"
      ]
    },
    "shld rax, rbx, 63": {
      "ExpectedInstructionCount": 10,
      "Comment": "0x0f 0xac",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "extr x22, x21, x20, #1",
        "mov x4, x22",
        "tst x22, x22",
        "ubfx x20, x21, #1, #1",
        "mrs x21, nzcv",
        "orr w23, w21, w20, lsl #29",
        "mov x26, x22",
        "msr nzcv, x23"
      ]
    },
    "shld ax, bx, cl": {
      "ExpectedInstructionCount": 33,
      "Comment": "0x0f 0xad",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "uxth w21, w20",
        "mov x20, x4",
        "uxth w22, w20",
        "mov x23, x5",
        "and x24, x23, #0x1f",
        "mov w23, #0x10",
        "sub x25, x23, x24",
        "lsl x23, x22, x24",
        "lsr w30, w21, w25",
        "orr x21, x23, x30",
        "mrs x23, nzcv",
        "cmp x24, #0x0 (0)",
        "csel x25, x22, x21, eq",
        "mov x21, x20",
        "bfxil x21, x25, #0, #16",
        "mov x4, x21",
        "mov x20, x26",
        "msr nzcv, x23",
        "mov x21, x20",
        "cbz w24, #+0x30",
        "cmn wzr, w25, lsl #16",
        "mov x21, x25",
        "mov w0, #0x10",
        "sub w0, w0, w24",
        "lsr w0, w22, w0",
        "eor w2, w22, w25",
        "mrs x1, nzcv",
        "bfi w1, w0, #29, #1",
        "lsr w2, w2, #15",
        "bfi w1, w2, #28, #1",
        "msr nzcv, x1",
        "mov x26, x21"
      ]
    },
    "shld eax, ebx, cl": {
      "ExpectedInstructionCount": 29,
      "Comment": "0x0f 0xad",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov w21, w20",
        "mov x20, x4",
        "mov w22, w20",
        "mov x20, x5",
        "and x23, x20, #0x1f",
        "neg x20, x23",
        "lsl x24, x22, x23",
        "lsr w25, w21, w20",
        "orr x20, x24, x25",
        "mrs x21, nzcv",
        "cmp x23, #0x0 (0)",
        "csel x24, x22, x20, eq",
        "mov w20, w24",
        "mov x4, x20",
        "mov x20, x26",
        "msr nzcv, x21",
        "mov x21, x20",
        "cbz w23, #+0x28",
        "ands w21, w24, w24",
        "neg w0, w23",
        "lsr w0, w22, w0",
        "eor w2, w22, w24",
        "mrs x1, nzcv",
        "bfi w1, w0, #29, #1",
        "lsr w2, w2, #31",
        "bfi w1, w2, #28, #1",
        "msr nzcv, x1",
        "mov x26, x21"
      ]
    },
    "shld rax, rbx, cl": {
      "ExpectedInstructionCount": 26,
      "Comment": "0x0f 0xad",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "mov x22, x5",
        "and x23, x22, #0x3f",
        "neg x22, x23",
        "lsl x24, x21, x23",
        "lsr x25, x20, x22",
        "orr x20, x24, x25",
        "mrs x22, nzcv",
        "cmp x23, #0x0 (0)",
        "csel x24, x21, x20, eq",
        "mov x4, x24",
        "mov x20, x26",
        "msr nzcv, x22",
        "mov x22, x20",
        "cbz x23, #+0x28",
        "ands x22, x24, x24",
        "neg x0, x23",
        "lsr x0, x21, x0",
        "eor x2, x21, x24",
        "mrs x1, nzcv",
        "bfi w1, w0, #29, #1",
        "lsr x2, x2, #63",
        "bfi w1, w2, #28, #1",
        "msr nzcv, x1",
        "mov x26, x22"
      ]
    },
    "push gs": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0xa8",
      "ExpectedArm64ASM": [
        "mov x20, x8",
        "ldr x21, [x28, #168]",
        "mov x22, x20",
        "str x21, [x22, #-8]!",
        "mov x8, x22"
      ]
    },
    "pop gs": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x0f 0xa9",
      "ExpectedArm64ASM": [
        "mov x20, x8",
        "ldr x21, [x20]",
        "add x22, x20, #0x8 (8)",
        "mov x8, x22",
        "strh w21, [x28, #144]",
        "ubfx w20, w21, #3, #13",
        "add x0, x28, x20, lsl #2",
        "ldr w21, [x0, #896]",
        "str w21, [x28, #168]"
      ]
    },
    "bts ax, bx": {
      "ExpectedInstructionCount": 13,
      "Comment": "0x0f 0xab",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "and x22, x20, #0xf",
        "lsr w20, w21, w22",
        "ubfx x23, x20, #0, #1",
        "lsl x20, x23, #29",
        "mov w23, #0x1",
        "lsl w24, w23, w22",
        "orr w22, w21, w24",
        "mov x23, x21",
        "bfxil x23, x22, #0, #16",
        "mov x4, x23",
        "msr nzcv, x20"
      ]
    },
    "bts [rax], bx": {
      "ExpectedInstructionCount": 13,
      "Comment": "0x0f 0xab",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "ubfx x22, x20, #0, #3",
        "sbfx x23, x20, #3, #13",
        "mov w20, #0x1",
        "lsl x24, x20, x22",
        "ldrb w20, [x21, x23, sxtx]",
        "orr x25, x20, x24",
        "strb w25, [x21, x23, sxtx]",
        "lsr w21, w20, w22",
        "ubfx x20, x21, #0, #1",
        "lsl x21, x20, #29",
        "msr nzcv, x21"
      ]
    },
    "bts eax, ebx": {
      "ExpectedInstructionCount": 10,
      "Comment": "0x0f 0xab",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "lsr w22, w21, w20",
        "ubfx x23, x22, #0, #1",
        "lsl x22, x23, #29",
        "mov w23, #0x1",
        "lsl w24, w23, w20",
        "orr w20, w21, w24",
        "mov x4, x20",
        "msr nzcv, x22"
      ]
    },
    "bts [rax], ebx": {
      "ExpectedInstructionCount": 13,
      "Comment": "0x0f 0xab",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "ubfx x22, x20, #0, #3",
        "sbfx x23, x20, #3, #29",
        "mov w20, #0x1",
        "lsl x24, x20, x22",
        "ldrb w20, [x21, x23, sxtx]",
        "orr x25, x20, x24",
        "strb w25, [x21, x23, sxtx]",
        "lsr w21, w20, w22",
        "ubfx x20, x21, #0, #1",
        "lsl x21, x20, #29",
        "msr nzcv, x21"
      ]
    },
    "bts rax, rbx": {
      "ExpectedInstructionCount": 10,
      "Comment": "0x0f 0xab",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "lsr x22, x21, x20",
        "ubfx x23, x22, #0, #1",
        "lsl x22, x23, #29",
        "mov w23, #0x1",
        "lsl x24, x23, x20",
        "orr x20, x21, x24",
        "mov x4, x20",
        "msr nzcv, x22"
      ]
    },
    "bts [rax], rbx": {
      "ExpectedInstructionCount": 13,
      "Comment": "0x0f 0xab",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "ubfx x22, x20, #0, #3",
        "asr x23, x20, #3",
        "mov w20, #0x1",
        "lsl x24, x20, x22",
        "ldrb w20, [x21, x23, sxtx]",
        "orr x25, x20, x24",
        "strb w25, [x21, x23, sxtx]",
        "lsr w21, w20, w22",
        "ubfx x20, x21, #0, #1",
        "lsl x21, x20, #29",
        "msr nzcv, x21"
      ]
    },
    "lock bts [rax], bx": {
      "ExpectedInstructionCount": 12,
      "Comment": "0x0f 0xb3",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "ubfx x22, x20, #0, #3",
        "sbfx x23, x20, #3, #13",
        "add x20, x21, x23",
        "mov w21, #0x1",
        "lsl x23, x21, x22",
        "ldsetalb w23, w21, [x20]",
        "lsr w20, w21, w22",
        "ubfx x21, x20, #0, #1",
        "lsl x20, x21, #29",
        "msr nzcv, x20"
      ]
    },
    "lock bts [rax], ebx": {
      "ExpectedInstructionCount": 12,
      "Comment": "0x0f 0xb3",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "ubfx x22, x20, #0, #3",
        "sbfx x23, x20, #3, #29",
        "add x20, x21, x23",
        "mov w21, #0x1",
        "lsl x23, x21, x22",
        "ldsetalb w23, w21, [x20]",
        "lsr w20, w21, w22",
        "ubfx x21, x20, #0, #1",
        "lsl x20, x21, #29",
        "msr nzcv, x20"
      ]
    },
    "lock bts [rax], rbx": {
      "ExpectedInstructionCount": 12,
      "Comment": "0x0f 0xb3",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "ubfx x22, x20, #0, #3",
        "asr x23, x20, #3",
        "add x20, x21, x23",
        "mov w21, #0x1",
        "lsl x23, x21, x22",
        "ldsetalb w23, w21, [x20]",
        "lsr w20, w21, w22",
        "ubfx x21, x20, #0, #1",
        "lsl x20, x21, #29",
        "msr nzcv, x20"
      ]
    },
    "imul ax, bx": {
      "ExpectedInstructionCount": 12,
      "Comment": "0x0f 0xaf",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "sxth x22, w20",
        "sxth x23, w21",
        "mul x21, x22, x23",
        "sbfx x22, x21, #16, #16",
        "mov x23, x20",
        "bfxil x23, x21, #0, #16",
        "mov x4, x23",
        "sbfx x20, x21, #15, #1",
        "cmp x22, x20",
        "ccmn xzr, #0, #nzCV, eq"
      ]
    },
    "imul eax, ebx": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x0f 0xaf",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "smull x22, w20, w21",
        "asr x23, x22, #32",
        "mul w22, w20, w21",
        "mov x4, x22",
        "sbfx x20, x22, #31, #1",
        "cmp x23, x20",
        "ccmn xzr, #0, #nzCV, eq"
      ]
    },
    "imul rax, rbx": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x0f 0xaf",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "smulh x22, x20, x21",
        "mul x23, x20, x21",
        "mov x4, x23",
        "asr x20, x23, #63",
        "cmp x22, x20",
        "ccmn xzr, #0, #nzCV, eq"
      ]
    },
    "cmpxchg al, bl": {
      "ExpectedInstructionCount": 17,
      "Comment": "0x0f 0xb0",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "uxtb w21, w20",
        "mov x20, x4",
        "uxtb w22, w20",
        "uxtb x23, w20",
        "eor w24, w23, w22",
        "mov x27, x24",
        "lsl w0, w23, #24",
        "cmp w0, w22, lsl #24",
        "sub w24, w23, w22",
        "mov x26, x24",
        "mrs x22, nzcv",
        "eor w23, w22, #0x20000000",
        "msr nzcv, x23",
        "mov x22, x20",
        "bfxil x22, x21, #0, #8",
        "mov x4, x22"
      ]
    },
    "cmpxchg [rax], bl": {
      "ExpectedInstructionCount": 19,
      "Comment": "0x0f 0xb0",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "uxtb w21, w20",
        "mov x20, x4",
        "uxtb w22, w20",
        "mov w1, w22",
        "casalb w1, w21, [x20]",
        "mov w23, w1",
        "mov x21, x20",
        "bfxil x21, x23, #0, #8",
        "mov x4, x21",
        "eor w20, w22, w23",
        "mov x27, x20",
        "lsl w0, w22, #24",
        "cmp w0, w23, lsl #24",
        "sub w20, w22, w23",
        "mov x26, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "cmpxchg ax, bx": {
      "ExpectedInstructionCount": 17,
      "Comment": "0x0f 0xb1",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "uxth w21, w20",
        "mov x20, x4",
        "uxth w22, w20",
        "uxth x23, w20",
        "eor w24, w23, w22",
        "mov x27, x24",
        "lsl w0, w23, #16",
        "cmp w0, w22, lsl #16",
        "sub w24, w23, w22",
        "mov x26, x24",
        "mrs x22, nzcv",
        "eor w23, w22, #0x20000000",
        "msr nzcv, x23",
        "mov x22, x20",
        "bfxil x22, x21, #0, #16",
        "mov x4, x22"
      ]
    },
    "cmpxchg [rax], bx": {
      "ExpectedInstructionCount": 19,
      "Comment": "0x0f 0xb1",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "uxth w21, w20",
        "mov x20, x4",
        "uxth w22, w20",
        "mov w1, w22",
        "casalh w1, w21, [x20]",
        "mov w23, w1",
        "mov x21, x20",
        "bfxil x21, x23, #0, #16",
        "mov x4, x21",
        "eor w20, w22, w23",
        "mov x27, x20",
        "lsl w0, w22, #16",
        "cmp w0, w23, lsl #16",
        "sub w20, w22, w23",
        "mov x26, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "cmpxchg eax, ebx": {
      "ExpectedInstructionCount": 13,
      "Comment": "0x0f 0xb1",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov w21, w20",
        "mov x20, x4",
        "mov w22, w20",
        "mov w23, w20",
        "eor w20, w23, w22",
        "mov x27, x20",
        "subs w20, w23, w22",
        "mov x26, x20",
        "mrs x20, nzcv",
        "eor w22, w20, #0x20000000",
        "msr nzcv, x22",
        "mov x4, x21"
      ]
    },
    "cmpxchg [rax], ebx": {
      "ExpectedInstructionCount": 17,
      "Comment": "0x0f 0xb1",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov w21, w20",
        "mov x20, x4",
        "mov w22, w20",
        "mov w1, w22",
        "casal w1, w21, [x20]",
        "mov w23, w1",
        "cmp w23, w22",
        "csel x21, x20, x23, eq",
        "mov x4, x21",
        "eor w20, w22, w23",
        "mov x27, x20",
        "subs w20, w22, w23",
        "mov x26, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "cmpxchg rax, rbx": {
      "ExpectedInstructionCount": 10,
      "Comment": "0x0f 0xb1",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "mov w22, #0x0",
        "mov x27, x22",
        "subs x22, x21, x21",
        "mov x26, x22",
        "mrs x21, nzcv",
        "eor w22, w21, #0x20000000",
        "msr nzcv, x22",
        "mov x4, x20"
      ]
    },
    "cmpxchg [rax], rbx": {
      "ExpectedInstructionCount": 13,
      "Comment": "0x0f 0xb1",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "mov x1, x21",
        "casal x1, x20, [x21]",
        "mov x22, x1",
        "mov x4, x22",
        "eor w20, w21, w22",
        "mov x27, x20",
        "subs x20, x21, x22",
        "mov x26, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "btr ax, bx": {
      "ExpectedInstructionCount": 13,
      "Comment": "0x0f 0xb3",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "and x22, x20, #0xf",
        "lsr w20, w21, w22",
        "ubfx x23, x20, #0, #1",
        "lsl x20, x23, #29",
        "mov w23, #0x1",
        "lsl w24, w23, w22",
        "bic w22, w21, w24",
        "mov x23, x21",
        "bfxil x23, x22, #0, #16",
        "mov x4, x23",
        "msr nzcv, x20"
      ]
    },
    "btr [rax], bx": {
      "ExpectedInstructionCount": 13,
      "Comment": "0x0f 0xb3",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "ubfx x22, x20, #0, #3",
        "sbfx x23, x20, #3, #13",
        "mov w20, #0x1",
        "lsl x24, x20, x22",
        "ldrb w20, [x21, x23, sxtx]",
        "bic x25, x20, x24",
        "strb w25, [x21, x23, sxtx]",
        "lsr w21, w20, w22",
        "ubfx x20, x21, #0, #1",
        "lsl x21, x20, #29",
        "msr nzcv, x21"
      ]
    },
    "btr eax, ebx": {
      "ExpectedInstructionCount": 10,
      "Comment": "0x0f 0xb3",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "lsr w22, w21, w20",
        "ubfx x23, x22, #0, #1",
        "lsl x22, x23, #29",
        "mov w23, #0x1",
        "lsl w24, w23, w20",
        "bic w20, w21, w24",
        "mov x4, x20",
        "msr nzcv, x22"
      ]
    },
    "btr [rax], ebx": {
      "ExpectedInstructionCount": 13,
      "Comment": "0x0f 0xb3",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "ubfx x22, x20, #0, #3",
        "sbfx x23, x20, #3, #29",
        "mov w20, #0x1",
        "lsl x24, x20, x22",
        "ldrb w20, [x21, x23, sxtx]",
        "bic x25, x20, x24",
        "strb w25, [x21, x23, sxtx]",
        "lsr w21, w20, w22",
        "ubfx x20, x21, #0, #1",
        "lsl x21, x20, #29",
        "msr nzcv, x21"
      ]
    },
    "btr rax, rbx": {
      "ExpectedInstructionCount": 10,
      "Comment": "0x0f 0xb3",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "lsr x22, x21, x20",
        "ubfx x23, x22, #0, #1",
        "lsl x22, x23, #29",
        "mov w23, #0x1",
        "lsl x24, x23, x20",
        "bic x20, x21, x24",
        "mov x4, x20",
        "msr nzcv, x22"
      ]
    },
    "btr [rax], rbx": {
      "ExpectedInstructionCount": 13,
      "Comment": "0x0f 0xb3",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "ubfx x22, x20, #0, #3",
        "asr x23, x20, #3",
        "mov w20, #0x1",
        "lsl x24, x20, x22",
        "ldrb w20, [x21, x23, sxtx]",
        "bic x25, x20, x24",
        "strb w25, [x21, x23, sxtx]",
        "lsr w21, w20, w22",
        "ubfx x20, x21, #0, #1",
        "lsl x21, x20, #29",
        "msr nzcv, x21"
      ]
    },
    "movzx ax, bl": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x0f 0xb6",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "uxtb w21, w20",
        "mov x20, x4",
        "mov x22, x20",
        "bfxil x22, x21, #0, #16",
        "mov x4, x22"
      ]
    },
    "lock btr [rax], bx": {
      "ExpectedInstructionCount": 12,
      "Comment": "0x0f 0xb3",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "ubfx x22, x20, #0, #3",
        "sbfx x23, x20, #3, #13",
        "add x20, x21, x23",
        "mov w21, #0x1",
        "lsl x23, x21, x22",
        "ldclralb w23, w21, [x20]",
        "lsr w20, w21, w22",
        "ubfx x21, x20, #0, #1",
        "lsl x20, x21, #29",
        "msr nzcv, x20"
      ]
    },
    "lock btr [rax], ebx": {
      "ExpectedInstructionCount": 12,
      "Comment": "0x0f 0xb3",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "ubfx x22, x20, #0, #3",
        "sbfx x23, x20, #3, #29",
        "add x20, x21, x23",
        "mov w21, #0x1",
        "lsl x23, x21, x22",
        "ldclralb w23, w21, [x20]",
        "lsr w20, w21, w22",
        "ubfx x21, x20, #0, #1",
        "lsl x20, x21, #29",
        "msr nzcv, x20"
      ]
    },
    "lock btr [rax], rbx": {
      "ExpectedInstructionCount": 12,
      "Comment": "0x0f 0xb3",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "ubfx x22, x20, #0, #3",
        "asr x23, x20, #3",
        "add x20, x21, x23",
        "mov w21, #0x1",
        "lsl x23, x21, x22",
        "ldclralb w23, w21, [x20]",
        "lsr w20, w21, w22",
        "ubfx x21, x20, #0, #1",
        "lsl x20, x21, #29",
        "msr nzcv, x20"
      ]
    },
    "movzx ax, byte [rax]": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0xb6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20]",
        "mov x22, x20",
        "bfxil x22, x21, #0, #16",
        "mov x4, x22"
      ]
    },
    "movzx eax, bl": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0xb6",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "uxtb w21, w20",
        "mov x4, x21"
      ]
    },
    "movzx eax, byte [rax]": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0xb6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20]",
        "mov x4, x21"
      ]
    },
    "movzx rax, bl": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0xb6",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "uxtb w21, w20",
        "mov x4, x21"
      ]
    },
    "movzx rax, byte [rax]": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0xb6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20]",
        "mov x4, x21"
      ]
    },
    "movzx eax, bx": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0xb7",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "uxth w21, w20",
        "mov x4, x21"
      ]
    },
    "movzx eax, word [rax]": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0xb7",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrh w21, [x20]",
        "mov x4, x21"
      ]
    },
    "movzx rax, bx": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0xb7",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "uxth w21, w20",
        "mov x4, x21"
      ]
    },
    "movzx rax, word [rax]": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0xb7",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrh w21, [x20]",
        "mov x4, x21"
      ]
    },
    "btc ax, bx": {
      "ExpectedInstructionCount": 13,
      "Comment": "0x0f 0xbb",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "and x22, x20, #0xf",
        "lsr w20, w21, w22",
        "ubfx x23, x20, #0, #1",
        "lsl x20, x23, #29",
        "mov w23, #0x1",
        "lsl w24, w23, w22",
        "eor w22, w21, w24",
        "mov x23, x21",
        "bfxil x23, x22, #0, #16",
        "mov x4, x23",
        "msr nzcv, x20"
      ]
    },
    "btc [rax], bx": {
      "ExpectedInstructionCount": 13,
      "Comment": "0x0f 0xbb",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "ubfx x22, x20, #0, #3",
        "sbfx x23, x20, #3, #13",
        "mov w20, #0x1",
        "lsl x24, x20, x22",
        "ldrb w20, [x21, x23, sxtx]",
        "eor x25, x20, x24",
        "strb w25, [x21, x23, sxtx]",
        "lsr w21, w20, w22",
        "ubfx x20, x21, #0, #1",
        "lsl x21, x20, #29",
        "msr nzcv, x21"
      ]
    },
    "btc eax, ebx": {
      "ExpectedInstructionCount": 10,
      "Comment": "0x0f 0xbb",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "lsr w22, w21, w20",
        "ubfx x23, x22, #0, #1",
        "lsl x22, x23, #29",
        "mov w23, #0x1",
        "lsl w24, w23, w20",
        "eor w20, w21, w24",
        "mov x4, x20",
        "msr nzcv, x22"
      ]
    },
    "btc [rax], ebx": {
      "ExpectedInstructionCount": 13,
      "Comment": "0x0f 0xbb",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "ubfx x22, x20, #0, #3",
        "sbfx x23, x20, #3, #29",
        "mov w20, #0x1",
        "lsl x24, x20, x22",
        "ldrb w20, [x21, x23, sxtx]",
        "eor x25, x20, x24",
        "strb w25, [x21, x23, sxtx]",
        "lsr w21, w20, w22",
        "ubfx x20, x21, #0, #1",
        "lsl x21, x20, #29",
        "msr nzcv, x21"
      ]
    },
    "btc rax, rbx": {
      "ExpectedInstructionCount": 10,
      "Comment": "0x0f 0xbb",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "lsr x22, x21, x20",
        "ubfx x23, x22, #0, #1",
        "lsl x22, x23, #29",
        "mov w23, #0x1",
        "lsl x24, x23, x20",
        "eor x20, x21, x24",
        "mov x4, x20",
        "msr nzcv, x22"
      ]
    },
    "btc [rax], rbx": {
      "ExpectedInstructionCount": 13,
      "Comment": "0x0f 0xbb",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "ubfx x22, x20, #0, #3",
        "asr x23, x20, #3",
        "mov w20, #0x1",
        "lsl x24, x20, x22",
        "ldrb w20, [x21, x23, sxtx]",
        "eor x25, x20, x24",
        "strb w25, [x21, x23, sxtx]",
        "lsr w21, w20, w22",
        "ubfx x20, x21, #0, #1",
        "lsl x21, x20, #29",
        "msr nzcv, x21"
      ]
    },
    "lock btc [rax], bx": {
      "ExpectedInstructionCount": 12,
      "Comment": "0x0f 0xb3",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "ubfx x22, x20, #0, #3",
        "sbfx x23, x20, #3, #13",
        "add x20, x21, x23",
        "mov w21, #0x1",
        "lsl x23, x21, x22",
        "ldeoralb w23, w21, [x20]",
        "lsr w20, w21, w22",
        "ubfx x21, x20, #0, #1",
        "lsl x20, x21, #29",
        "msr nzcv, x20"
      ]
    },
    "lock btc [rax], ebx": {
      "ExpectedInstructionCount": 12,
      "Comment": "0x0f 0xb3",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "ubfx x22, x20, #0, #3",
        "sbfx x23, x20, #3, #29",
        "add x20, x21, x23",
        "mov w21, #0x1",
        "lsl x23, x21, x22",
        "ldeoralb w23, w21, [x20]",
        "lsr w20, w21, w22",
        "ubfx x21, x20, #0, #1",
        "lsl x20, x21, #29",
        "msr nzcv, x20"
      ]
    },
    "lock btc [rax], rbx": {
      "ExpectedInstructionCount": 12,
      "Comment": "0x0f 0xb3",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "ubfx x22, x20, #0, #3",
        "asr x23, x20, #3",
        "add x20, x21, x23",
        "mov w21, #0x1",
        "lsl x23, x21, x22",
        "ldeoralb w23, w21, [x20]",
        "lsr w20, w21, w22",
        "ubfx x21, x20, #0, #1",
        "lsl x20, x21, #29",
        "msr nzcv, x20"
      ]
    },
    "bsf ax, bx": {
      "ExpectedInstructionCount": 14,
      "Comment": "0x0f 0xbc",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "uxth w21, w20",
        "mov x22, x7",
        "uxth w23, w22",
        "uxth w0, w23",
        "cmp w0, #0x0 (0)",
        "rbit w0, w0",
        "clz w22, w0",
        "csinv w22, w22, wzr, ne",
        "cmn wzr, w23, lsl #16",
        "csel x23, x21, x22, eq",
        "mov x21, x20",
        "bfxil x21, x23, #0, #16",
        "mov x4, x21"
      ]
    },
    "bsf eax, ebx": {
      "ExpectedInstructionCount": 11,
      "Comment": "0x0f 0xbc",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "mov w22, w21",
        "lsr w0, w22, #0",
        "cmp w0, #0x0 (0)",
        "rbit w0, w0",
        "clz w21, w0",
        "csinv w21, w21, wzr, ne",
        "tst w22, w22",
        "csel x22, x20, x21, eq",
        "mov x4, x22"
      ]
    },
    "bsf rax, rbx": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x0f 0xbc",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "rbit x0, x21",
        "cmp x21, #0x0 (0)",
        "clz x22, x0",
        "csinv x22, x22, xzr, ne",
        "tst x21, x21",
        "csel x21, x20, x22, eq",
        "mov x4, x21"
      ]
    },
    "bsr ax, bx": {
      "ExpectedInstructionCount": 14,
      "Comment": "0x0f 0xbd",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "uxth w21, w20",
        "mov x22, x7",
        "uxth w23, w22",
        "mov x0, #0xf",
        "lsl w22, w23, #16",
        "orr w22, w22, #0x8000",
        "clz w22, w22",
        "sub x22, x0, x22",
        "cmn wzr, w23, lsl #16",
        "csel x23, x21, x22, eq",
        "mov x21, x20",
        "bfxil x21, x23, #0, #16",
        "mov x4, x21"
      ]
    },
    "bsr eax, ebx": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x0f 0xbd",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "mov w22, w21",
        "mov x0, #0x1f",
        "clz w21, w22",
        "sub x21, x0, x21",
        "tst w22, w22",
        "csel x22, x20, x21, eq",
        "mov x4, x22"
      ]
    },
    "bsr rax, rbx": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x0f 0xbd",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "mov x0, #0x3f",
        "clz x22, x21",
        "sub x22, x0, x22",
        "tst x21, x21",
        "csel x21, x20, x22, eq",
        "mov x4, x21"
      ]
    },
    "movsx ax, bl": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x0f 0xbe",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "uxtb w21, w20",
        "sxtb x20, w21",
        "mov x21, x4",
        "mov x22, x21",
        "bfxil x22, x20, #0, #16",
        "mov x4, x22"
      ]
    },
    "movsx ax, byte [rax]": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x0f 0xbe",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20]",
        "sxtb x22, w21",
        "mov x21, x20",
        "bfxil x21, x22, #0, #16",
        "mov x4, x21"
      ]
    },
    "movsx eax, bl": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0xbe",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "uxtb w21, w20",
        "sxtb x20, w21",
        "mov w21, w20",
        "mov x4, x21"
      ]
    },
    "movsx eax, byte [rax]": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0xbe",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20]",
        "sxtb x20, w21",
        "mov w21, w20",
        "mov x4, x21"
      ]
    },
    "movsx rax, bl": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xbe",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "uxtb w21, w20",
        "sxtb x20, w21",
        "mov x4, x20"
      ]
    },
    "movsx rax, byte [rax]": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xbe",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20]",
        "sxtb x20, w21",
        "mov x4, x20"
      ]
    },
    "movsx eax, bx": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0xbf",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "uxth w21, w20",
        "sxth x20, w21",
        "mov w21, w20",
        "mov x4, x21"
      ]
    },
    "movsx eax, word [rax]": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0xbf",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrh w21, [x20]",
        "sxth x20, w21",
        "mov w21, w20",
        "mov x4, x21"
      ]
    },
    "movsx rax, bx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xbf",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "uxth w21, w20",
        "sxth x20, w21",
        "mov x4, x20"
      ]
    },
    "movsx rax, word [rax]": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xbf",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrh w21, [x20]",
        "sxth x20, w21",
        "mov x4, x20"
      ]
    },
    "xadd al, bl": {
      "ExpectedInstructionCount": 16,
      "Comment": "0x0f 0xc0",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "uxtb w21, w20",
        "mov x22, x7",
        "uxtb w23, w22",
        "eor w24, w21, w23",
        "mov x27, x24",
        "lsl w0, w21, #24",
        "cmn w0, w23, lsl #24",
        "add w24, w21, w23",
        "mov x26, x24",
        "mov x23, x22",
        "bfxil x23, x21, #0, #8",
        "mov x7, x23",
        "mov x21, x20",
        "bfxil x21, x24, #0, #8",
        "mov x4, x21"
      ]
    },
    "xadd [rax], bl": {
      "ExpectedInstructionCount": 13,
      "Comment": "0x0f 0xc0",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "uxtb w22, w21",
        "ldaddalb w22, w23, [x20]",
        "mov x20, x21",
        "bfxil x20, x23, #0, #8",
        "mov x7, x20",
        "eor w20, w23, w22",
        "mov x27, x20",
        "lsl w0, w23, #24",
        "cmn w0, w22, lsl #24",
        "add w20, w23, w22",
        "mov x26, x20"
      ]
    },
    "xadd ax, bx": {
      "ExpectedInstructionCount": 16,
      "Comment": "0x0f 0xc1",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "uxth w21, w20",
        "mov x22, x7",
        "uxth w23, w22",
        "eor w24, w21, w23",
        "mov x27, x24",
        "lsl w0, w21, #16",
        "cmn w0, w23, lsl #16",
        "add w24, w21, w23",
        "mov x26, x24",
        "mov x23, x22",
        "bfxil x23, x21, #0, #16",
        "mov x7, x23",
        "mov x21, x20",
        "bfxil x21, x24, #0, #16",
        "mov x4, x21"
      ]
    },
    "xadd [rax], bx": {
      "ExpectedInstructionCount": 13,
      "Comment": "0x0f 0xc1",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "uxth w22, w21",
        "ldaddalh w22, w23, [x20]",
        "mov x20, x21",
        "bfxil x20, x23, #0, #16",
        "mov x7, x20",
        "eor w20, w23, w22",
        "mov x27, x20",
        "lsl w0, w23, #16",
        "cmn w0, w22, lsl #16",
        "add w20, w23, w22",
        "mov x26, x20"
      ]
    },
    "xadd eax, ebx": {
      "ExpectedInstructionCount": 10,
      "Comment": "0x0f 0xc1",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov w21, w20",
        "mov x20, x7",
        "mov w22, w20",
        "eor w20, w21, w22",
        "mov x27, x20",
        "adds w20, w21, w22",
        "mov x26, x20",
        "mov x7, x21",
        "mov x4, x20"
      ]
    },
    "xadd [rax], ebx": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x0f 0xc1",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "mov w22, w21",
        "ldaddal w22, w21, [x20]",
        "mov x7, x21",
        "eor w20, w21, w22",
        "mov x27, x20",
        "adds w20, w21, w22",
        "mov x26, x20"
      ]
    },
    "xadd rax, rbx": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x0f 0xc1",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "eor w22, w20, w21",
        "mov x27, x22",
        "adds x22, x20, x21",
        "mov x26, x22",
        "mov x7, x20",
        "mov x4, x22"
      ]
    },
    "xadd [rax], rbx": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x0f 0xc1",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "ldaddal x21, x22, [x20]",
        "mov x7, x22",
        "eor w20, w22, w21",
        "mov x27, x20",
        "adds x20, x22, x21",
        "mov x26, x20"
      ]
    },
    "cmpps xmm0, xmm1, 0": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xc2",
      "ExpectedArm64ASM": [
        "mov v2.16b, v17.16b",
        "mov v3.16b, v16.16b",
        "fcmeq v4.4s, v3.4s, v2.4s",
        "mov v16.16b, v4.16b"
      ]
    },
    "cmpps xmm0, xmm1, 1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xc2",
      "ExpectedArm64ASM": [
        "mov v2.16b, v17.16b",
        "mov v3.16b, v16.16b",
        "fcmgt v4.4s, v2.4s, v3.4s",
        "mov v16.16b, v4.16b"
      ]
    },
    "cmpps xmm0, xmm1, 2": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xc2",
      "ExpectedArm64ASM": [
        "mov v2.16b, v17.16b",
        "mov v3.16b, v16.16b",
        "fcmge v4.4s, v2.4s, v3.4s",
        "mov v16.16b, v4.16b"
      ]
    },
    "cmpps xmm0, xmm1, 3": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x0f 0xc2",
      "ExpectedArm64ASM": [
        "mov v2.16b, v17.16b",
        "mov v3.16b, v16.16b",
        "fcmge v0.4s, v3.4s, v2.4s",
        "fcmgt v1.4s, v2.4s, v3.4s",
        "orr v4.16b, v0.16b, v1.16b",
        "mvn v4.16b, v4.16b",
        "mov v16.16b, v4.16b"
      ]
    },
    "cmpps xmm0, xmm1, 4": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0xc2",
      "ExpectedArm64ASM": [
        "mov v2.16b, v17.16b",
        "mov v3.16b, v16.16b",
        "fcmeq v4.4s, v3.4s, v2.4s",
        "mvn v4.16b, v4.16b",
        "mov v16.16b, v4.16b"
      ]
    },
    "cmpps xmm0, xmm1, 5": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0xc2",
      "ExpectedArm64ASM": [
        "mov v2.16b, v17.16b",
        "mov v3.16b, v16.16b",
        "fcmgt v4.4s, v2.4s, v3.4s",
        "mvn v2.16b, v4.16b",
        "mov v16.16b, v2.16b"
      ]
    },
    "cmpps xmm0, xmm1, 6": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0xc2",
      "ExpectedArm64ASM": [
        "mov v2.16b, v17.16b",
        "mov v3.16b, v16.16b",
        "fcmge v4.4s, v2.4s, v3.4s",
        "mvn v2.16b, v4.16b",
        "mov v16.16b, v2.16b"
      ]
    },
    "cmpps xmm0, xmm1, 7": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x0f 0xc2",
      "ExpectedArm64ASM": [
        "mov v2.16b, v17.16b",
        "mov v3.16b, v16.16b",
        "fcmge v0.4s, v3.4s, v2.4s",
        "fcmgt v1.4s, v2.4s, v3.4s",
        "orr v4.16b, v0.16b, v1.16b",
        "mov v16.16b, v4.16b"
      ]
    },
    "movnti [rax], ebx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xc3",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov w21, w20",
        "mov x20, x4",
        "str w21, [x20]"
      ]
    },
    "movnti [rax], rbx": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0xc3",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "str x20, [x21]"
      ]
    },
    "pinsrw mm0, eax, 0": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0xc4",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "mov x20, x4",
        "mov v3.16b, v2.16b",
        "mov v3.h[0], w20",
        "str d3, [x28, #768]"
      ]
    },
    "pinsrw mm0, eax, 1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0xc4",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "mov x20, x4",
        "mov v3.16b, v2.16b",
        "mov v3.h[1], w20",
        "str d3, [x28, #768]"
      ]
    },
    "pinsrw mm0, eax, 2": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0xc4",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "mov x20, x4",
        "mov v3.16b, v2.16b",
        "mov v3.h[2], w20",
        "str d3, [x28, #768]"
      ]
    },
    "pinsrw mm0, eax, 3": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0xc4",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "mov x20, x4",
        "mov v3.16b, v2.16b",
        "mov v3.h[3], w20",
        "str d3, [x28, #768]"
      ]
    },
    "pinsrw mm0, eax, 4": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0xc4",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "mov x20, x4",
        "mov v3.16b, v2.16b",
        "mov v3.h[0], w20",
        "str d3, [x28, #768]"
      ]
    },
    "pinsrw mm0, [rax], 0": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0xc4",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "mov x20, x4",
        "mov v3.16b, v2.16b",
        "ld1 {v3.h}[0], [x20]",
        "str d3, [x28, #768]"
      ]
    },
    "pinsrw mm0, [rax], 1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0xc4",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "mov x20, x4",
        "mov v3.16b, v2.16b",
        "ld1 {v3.h}[1], [x20]",
        "str d3, [x28, #768]"
      ]
    },
    "pinsrw mm0, [rax], 2": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0xc4",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "mov x20, x4",
        "mov v3.16b, v2.16b",
        "ld1 {v3.h}[2], [x20]",
        "str d3, [x28, #768]"
      ]
    },
    "pinsrw mm0, [rax], 3": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0xc4",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "mov x20, x4",
        "mov v3.16b, v2.16b",
        "ld1 {v3.h}[3], [x20]",
        "str d3, [x28, #768]"
      ]
    },
    "pinsrw mm0, [rax], 4": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0xc4",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "mov x20, x4",
        "mov v3.16b, v2.16b",
        "ld1 {v3.h}[0], [x20]",
        "str d3, [x28, #768]"
      ]
    },
    "pextrw eax, mm0, 0": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0xc5",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "umov w20, v2.h[0]",
        "mov x4, x20"
      ]
    },
    "pextrw eax, mm0, 1": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0xc5",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "umov w20, v2.h[1]",
        "mov x4, x20"
      ]
    },
    "pextrw eax, mm0, 2": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0xc5",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "umov w20, v2.h[2]",
        "mov x4, x20"
      ]
    },
    "pextrw eax, mm0, 3": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0xc5",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "umov w20, v2.h[3]",
        "mov x4, x20"
      ]
    },
    "pextrw eax, mm0, 4": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0xc5",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "umov w20, v2.h[0]",
        "mov x4, x20"
      ]
    },
    "shufps xmm0, xmm1, 01000100b": {
      "ExpectedInstructionCount": 4,
      "Comment": [
        "Dst[63:0]    = Src1[63:0]",
        "Dest[127:64] = Src2[63:0]",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "zip1 v4.2d, v2.2d, v3.2d",
        "mov v16.16b, v4.16b"
      ]
    },
    "shufps xmm0, xmm1, 11101110b": {
      "ExpectedInstructionCount": 4,
      "Comment": [
        "Dst[63:0]    = Src1[127:64]",
        "Dest[127:64] = Src2[127:64]",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "zip2 v4.2d, v2.2d, v3.2d",
        "mov v16.16b, v4.16b"
      ]
    },
    "shufps xmm0, xmm1, 11100100b": {
      "ExpectedInstructionCount": 5,
      "Comment": [
        "Dst[63:0]    = Src1[63:0]",
        "Dest[127:64] = Src2[127:64]",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "mov v4.16b, v2.16b",
        "mov v4.d[1], v3.d[1]",
        "mov v16.16b, v4.16b"
      ]
    },
    "shufps xmm0, xmm1, 01001110b": {
      "ExpectedInstructionCount": 4,
      "Comment": [
        "Dst[63:0]    = Src1[63:0]",
        "Dest[127:64] = Src2[127:64]",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "ext v4.16b, v2.16b, v3.16b, #8",
        "mov v16.16b, v4.16b"
      ]
    },
    "shufps xmm0, xmm1, 00000000b": {
      "ExpectedInstructionCount": 6,
      "Comment": [
        "Duplicate selected element between each 64-bit segment",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v2.s[0]",
        "dup v2.4s, v3.s[0]",
        "zip1 v3.2d, v4.2d, v2.2d",
        "mov v16.16b, v3.16b"
      ]
    },
    "shufps xmm0, xmm1, 00000101b": {
      "ExpectedInstructionCount": 6,
      "Comment": [
        "Duplicate selected element between each 64-bit segment",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v2.s[1]",
        "dup v2.4s, v3.s[0]",
        "zip1 v3.2d, v4.2d, v2.2d",
        "mov v16.16b, v3.16b"
      ]
    },
    "shufps xmm0, xmm1, 00001010b": {
      "ExpectedInstructionCount": 6,
      "Comment": [
        "Duplicate selected element between each 64-bit segment",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v2.s[2]",
        "dup v2.4s, v3.s[0]",
        "zip1 v3.2d, v4.2d, v2.2d",
        "mov v16.16b, v3.16b"
      ]
    },
    "shufps xmm0, xmm1, 00001111b": {
      "ExpectedInstructionCount": 6,
      "Comment": [
        "Duplicate selected element between each 64-bit segment",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v2.s[3]",
        "dup v2.4s, v3.s[0]",
        "zip1 v3.2d, v4.2d, v2.2d",
        "mov v16.16b, v3.16b"
      ]
    },
    "shufps xmm0, xmm1, 01010000b": {
      "ExpectedInstructionCount": 6,
      "Comment": [
        "Duplicate selected element between each 64-bit segment",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v2.s[0]",
        "dup v2.4s, v3.s[1]",
        "zip1 v3.2d, v4.2d, v2.2d",
        "mov v16.16b, v3.16b"
      ]
    },
    "shufps xmm0, xmm1, 01010101b": {
      "ExpectedInstructionCount": 6,
      "Comment": [
        "Duplicate selected element between each 64-bit segment",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v2.s[1]",
        "dup v2.4s, v3.s[1]",
        "zip1 v3.2d, v4.2d, v2.2d",
        "mov v16.16b, v3.16b"
      ]
    },
    "shufps xmm0, xmm1, 01011010b": {
      "ExpectedInstructionCount": 6,
      "Comment": [
        "Duplicate selected element between each 64-bit segment",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v2.s[2]",
        "dup v2.4s, v3.s[1]",
        "zip1 v3.2d, v4.2d, v2.2d",
        "mov v16.16b, v3.16b"
      ]
    },
    "shufps xmm0, xmm1, 01011111b": {
      "ExpectedInstructionCount": 6,
      "Comment": [
        "Duplicate selected element between each 64-bit segment",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v2.s[3]",
        "dup v2.4s, v3.s[1]",
        "zip1 v3.2d, v4.2d, v2.2d",
        "mov v16.16b, v3.16b"
      ]
    },
    "shufps xmm0, xmm1, 10100000b": {
      "ExpectedInstructionCount": 6,
      "Comment": [
        "Duplicate selected element between each 64-bit segment",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v2.s[0]",
        "dup v2.4s, v3.s[2]",
        "zip1 v3.2d, v4.2d, v2.2d",
        "mov v16.16b, v3.16b"
      ]
    },
    "shufps xmm0, xmm1, 10100101b": {
      "ExpectedInstructionCount": 6,
      "Comment": [
        "Duplicate selected element between each 64-bit segment",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v2.s[1]",
        "dup v2.4s, v3.s[2]",
        "zip1 v3.2d, v4.2d, v2.2d",
        "mov v16.16b, v3.16b"
      ]
    },
    "shufps xmm0, xmm1, 10101010b": {
      "ExpectedInstructionCount": 6,
      "Comment": [
        "Duplicate selected element between each 64-bit segment",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v2.s[2]",
        "dup v2.4s, v3.s[2]",
        "zip1 v3.2d, v4.2d, v2.2d",
        "mov v16.16b, v3.16b"
      ]
    },
    "shufps xmm0, xmm1, 10101111b": {
      "ExpectedInstructionCount": 6,
      "Comment": [
        "Duplicate selected element between each 64-bit segment",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v2.s[3]",
        "dup v2.4s, v3.s[2]",
        "zip1 v3.2d, v4.2d, v2.2d",
        "mov v16.16b, v3.16b"
      ]
    },
    "shufps xmm0, xmm1, 11110000b": {
      "ExpectedInstructionCount": 6,
      "Comment": [
        "Duplicate selected element between each 64-bit segment",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v2.s[0]",
        "dup v2.4s, v3.s[3]",
        "zip1 v3.2d, v4.2d, v2.2d",
        "mov v16.16b, v3.16b"
      ]
    },
    "shufps xmm0, xmm1, 11110101b": {
      "ExpectedInstructionCount": 6,
      "Comment": [
        "Duplicate selected element between each 64-bit segment",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v2.s[1]",
        "dup v2.4s, v3.s[3]",
        "zip1 v3.2d, v4.2d, v2.2d",
        "mov v16.16b, v3.16b"
      ]
    },
    "shufps xmm0, xmm1, 11111010b": {
      "ExpectedInstructionCount": 6,
      "Comment": [
        "Duplicate selected element between each 64-bit segment",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v2.s[2]",
        "dup v2.4s, v3.s[3]",
        "zip1 v3.2d, v4.2d, v2.2d",
        "mov v16.16b, v3.16b"
      ]
    },
    "shufps xmm0, xmm1, 11100000b": {
      "ExpectedInstructionCount": 5,
      "Comment": [
        "Bottom elements duplicated, Top 64-bits inserted",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v2.s[0]",
        "zip2 v2.2d, v4.2d, v3.2d",
        "mov v16.16b, v2.16b"
      ]
    },
    "shufps xmm0, xmm1, 11100101b": {
      "ExpectedInstructionCount": 5,
      "Comment": [
        "Bottom elements duplicated, Top 64-bits inserted",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v2.s[1]",
        "zip2 v2.2d, v4.2d, v3.2d",
        "mov v16.16b, v2.16b"
      ]
    },
    "shufps xmm0, xmm1, 11101010b": {
      "ExpectedInstructionCount": 5,
      "Comment": [
        "Bottom elements duplicated, Top 64-bits inserted",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v2.s[2]",
        "zip2 v2.2d, v4.2d, v3.2d",
        "mov v16.16b, v2.16b"
      ]
    },
    "shufps xmm0, xmm1, 11101111b": {
      "ExpectedInstructionCount": 5,
      "Comment": [
        "Bottom elements duplicated, Top 64-bits inserted",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v2.s[3]",
        "zip2 v2.2d, v4.2d, v3.2d",
        "mov v16.16b, v2.16b"
      ]
    },
    "shufps xmm0, xmm1, 01000000b": {
      "ExpectedInstructionCount": 5,
      "Comment": [
        "Bottom elements duplicated, Top 64-bits inserted",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v2.s[0]",
        "zip1 v2.2d, v4.2d, v3.2d",
        "mov v16.16b, v2.16b"
      ]
    },
    "shufps xmm0, xmm1, 01000101b": {
      "ExpectedInstructionCount": 5,
      "Comment": [
        "Bottom elements duplicated, Top 64-bits inserted",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v2.s[1]",
        "zip1 v2.2d, v4.2d, v3.2d",
        "mov v16.16b, v2.16b"
      ]
    },
    "shufps xmm0, xmm1, 01001010b": {
      "ExpectedInstructionCount": 5,
      "Comment": [
        "Bottom elements duplicated, Top 64-bits inserted",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v2.s[2]",
        "zip1 v2.2d, v4.2d, v3.2d",
        "mov v16.16b, v2.16b"
      ]
    },
    "shufps xmm0, xmm1, 01001111b": {
      "ExpectedInstructionCount": 5,
      "Comment": [
        "Bottom elements duplicated, Top 64-bits inserted",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v2.s[3]",
        "zip1 v2.2d, v4.2d, v3.2d",
        "mov v16.16b, v2.16b"
      ]
    },
    "shufps xmm0, xmm1, 00000100b": {
      "ExpectedInstructionCount": 5,
      "Comment": [
        "Top elements duplicated, Bottom 64-bits inserted",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v3.s[0]",
        "zip1 v3.2d, v2.2d, v4.2d",
        "mov v16.16b, v3.16b"
      ]
    },
    "shufps xmm0, xmm1, 01010100b": {
      "ExpectedInstructionCount": 5,
      "Comment": [
        "Top elements duplicated, Bottom 64-bits inserted",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v3.s[1]",
        "zip1 v3.2d, v2.2d, v4.2d",
        "mov v16.16b, v3.16b"
      ]
    },
    "shufps xmm0, xmm1, 10100100b": {
      "ExpectedInstructionCount": 5,
      "Comment": [
        "Top elements duplicated, Bottom 64-bits inserted",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v3.s[2]",
        "zip1 v3.2d, v2.2d, v4.2d",
        "mov v16.16b, v3.16b"
      ]
    },
    "shufps xmm0, xmm1, 11110100b": {
      "ExpectedInstructionCount": 5,
      "Comment": [
        "Top elements duplicated, Bottom 64-bits inserted",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v3.s[3]",
        "zip1 v3.2d, v2.2d, v4.2d",
        "mov v16.16b, v3.16b"
      ]
    },
    "shufps xmm0, xmm1, 00001110b": {
      "ExpectedInstructionCount": 5,
      "Comment": [
        "Top elements duplicated, Top 64-bits inserted",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v3.s[0]",
        "zip2 v3.2d, v2.2d, v4.2d",
        "mov v16.16b, v3.16b"
      ]
    },
    "shufps xmm0, xmm1, 01011110b": {
      "ExpectedInstructionCount": 5,
      "Comment": [
        "Top elements duplicated, Top 64-bits inserted",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v3.s[1]",
        "zip2 v3.2d, v2.2d, v4.2d",
        "mov v16.16b, v3.16b"
      ]
    },
    "shufps xmm0, xmm1, 10101110b": {
      "ExpectedInstructionCount": 5,
      "Comment": [
        "Top elements duplicated, Top 64-bits inserted",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v3.s[2]",
        "zip2 v3.2d, v2.2d, v4.2d",
        "mov v16.16b, v3.16b"
      ]
    },
    "shufps xmm0, xmm1, 11111110b": {
      "ExpectedInstructionCount": 5,
      "Comment": [
        "Top elements duplicated, Top 64-bits inserted",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v3.s[3]",
        "zip2 v3.2d, v2.2d, v4.2d",
        "mov v16.16b, v3.16b"
      ]
    },
    "shufps xmm0, xmm1, 01000111b": {
      "ExpectedInstructionCount": 6,
      "Comment": [
        "odd elements inverted, Low 64-bits inserted",
        "SRA quirks with RA fail to understand that v16 is dead",
        "Could InsElement directly in to v16 but it does two moves instead",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "mov v4.16b, v2.16b",
        "mov v4.s[0], v2.s[3]",
        "zip1 v2.2d, v4.2d, v3.2d",
        "mov v16.16b, v2.16b"
      ]
    },
    "shufps xmm0, xmm1, 11100111b": {
      "ExpectedInstructionCount": 7,
      "Comment": [
        "odd elements inverted, Top 64-bits inserted",
        "SRA quirks with RA fail to understand that v16 is dead",
        "Could InsElement directly in to v16 but it does two moves instead",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "mov v4.16b, v2.16b",
        "mov v4.s[0], v2.s[3]",
        "mov v2.16b, v4.16b",
        "mov v2.d[1], v3.d[1]",
        "mov v16.16b, v2.16b"
      ]
    },
    "shufps xmm0, xmm1, 11100001b": {
      "ExpectedInstructionCount": 6,
      "Comment": [
        "Lower 32-bit elements inverted, Top 64-bits inserted",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "rev64 v4.4s, v2.4s",
        "mov v2.16b, v4.16b",
        "mov v2.d[1], v3.d[1]",
        "mov v16.16b, v2.16b"
      ]
    },
    "shufps xmm0, xmm1, 01000001b": {
      "ExpectedInstructionCount": 5,
      "Comment": [
        "Lower 32-bit elements inverted, Low 64-bits inserted",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "rev64 v4.4s, v2.4s",
        "zip1 v2.2d, v4.2d, v3.2d",
        "mov v16.16b, v2.16b"
      ]
    },
    "shufps xmm0, xmm1, 11111111b": {
      "ExpectedInstructionCount": 6,
      "Comment": [
        "Duplicate selected element between each 64-bit segment",
        "0x0f 0xc6"
      ],
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "dup v4.4s, v2.s[3]",
        "dup v2.4s, v3.s[3]",
        "zip1 v3.2d, v4.2d, v2.2d",
        "mov v16.16b, v3.16b"
      ]
    },
    "shufps xmm0, [rax], 0": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x0f 0xc6",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov x20, x4",
        "ldr q3, [x20]",
        "dup v4.4s, v2.s[0]",
        "dup v2.4s, v3.s[0]",
        "zip1 v3.2d, v4.2d, v2.2d",
        "mov v16.16b, v3.16b"
      ]
    },
    "shufps xmm0, xmm1, 1": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x0f 0xc6",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov v3.16b, v17.16b",
        "ldr x0, [x28, #1768]",
        "ldr q4, [x0, #16]",
        "tbl v5.16b, {v2.16b, v3.16b}, v4.16b",
        "mov v16.16b, v5.16b"
      ]
    },
    "shufps xmm1, xmm0, 1": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x0f 0xc6",
      "ExpectedArm64ASM": [
        "mov v2.16b, v17.16b",
        "mov v3.16b, v16.16b",
        "ldr x0, [x28, #1768]",
        "ldr q4, [x0, #16]",
        "tbl v5.16b, {v2.16b, v3.16b}, v4.16b",
        "mov v17.16b, v5.16b"
      ]
    },
    "shufps xmm0, [rax], 1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x0f 0xc6",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov x20, x4",
        "ldr q3, [x20]",
        "ldr x0, [x28, #1768]",
        "ldr q4, [x0, #16]",
        "tbl v5.16b, {v2.16b, v3.16b}, v4.16b",
        "mov v16.16b, v5.16b"
      ]
    },
    "shufps xmm0, [rax], 0xFF": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x0f 0xc6",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "mov x20, x4",
        "ldr q3, [x20]",
        "dup v4.4s, v2.s[3]",
        "dup v2.4s, v3.s[3]",
        "zip1 v3.2d, v4.2d, v2.2d",
        "mov v16.16b, v3.16b"
      ]
    },
    "bswap eax": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0xc8",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "rev w21, w20",
        "mov x4, x21"
      ]
    },
    "bswap rax": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0xc8",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "rev x21, x20",
        "mov x4, x21"
      ]
    },
    "psrlw mm0, mm1": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x0f 0xd1",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "ldr d3, [x28, #784]",
        "uqshl d0, d3, #57",
        "ushr d0, d0, #57",
        "dup v0.8h, v0.h[0]",
        "neg v0.8h, v0.8h",
        "ushl v4.8h, v2.8h, v0.8h",
        "str d4, [x28, #768]"
      ]
    },
    "psrld mm0, mm1": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x0f 0xd2",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "ldr d3, [x28, #784]",
        "uqshl d0, d3, #57",
        "ushr d0, d0, #57",
        "dup v0.4s, v0.s[0]",
        "neg v0.4s, v0.4s",
        "ushl v4.4s, v2.4s, v0.4s",
        "str d4, [x28, #768]"
      ]
    },
    "psrlq mm0, mm1": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x0f 0xd3",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "ldr d3, [x28, #784]",
        "uqshl d0, d3, #57",
        "ushr d0, d0, #57",
        "dup v0.2d, v0.d[0]",
        "neg v0.2d, v0.2d",
        "ushl v4.2d, v2.2d, v0.2d",
        "str d4, [x28, #768]"
      ]
    },
    "paddq mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xd4",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "add v4.2d, v3.2d, v2.2d",
        "str d4, [x28, #768]"
      ]
    },
    "pmullw mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xd5",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "mul v4.8h, v3.8h, v2.8h",
        "str d4, [x28, #768]"
      ]
    },
    "pmovmskb eax, mm0": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x0f 0xd7",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "ldr d3, [x28, #2272]",
        "cmlt v4.16b, v2.16b, #0",
        "and v2.16b, v4.16b, v3.16b",
        "addp v3.16b, v2.16b, v2.16b",
        "addp v2.8b, v3.8b, v3.8b",
        "addp v3.8b, v2.8b, v2.8b",
        "umov w20, v3.h[0]",
        "mov x4, x20"
      ]
    },
    "psubusb mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xd8",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "uqsub v4.16b, v3.16b, v2.16b",
        "str d4, [x28, #768]"
      ]
    },
    "psubusw mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xd9",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "uqsub v4.8h, v3.8h, v2.8h",
        "str d4, [x28, #768]"
      ]
    },
    "pminub mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xda",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "umin v4.16b, v3.16b, v2.16b",
        "str d4, [x28, #768]"
      ]
    },
    "pand mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xdb",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "and v4.16b, v3.16b, v2.16b",
        "str d4, [x28, #768]"
      ]
    },
    "paddusb mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xdc",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "uqadd v4.16b, v3.16b, v2.16b",
        "str d4, [x28, #768]"
      ]
    },
    "paddusw mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xdd",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "uqadd v4.8h, v3.8h, v2.8h",
        "str d4, [x28, #768]"
      ]
    },
    "pmaxub mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xde",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "umax v4.16b, v3.16b, v2.16b",
        "str d4, [x28, #768]"
      ]
    },
    "pandn mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xdf",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "bic v4.16b, v2.16b, v3.16b",
        "str d4, [x28, #768]"
      ]
    },
    "pavgb mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xe0",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "urhadd v4.16b, v3.16b, v2.16b",
        "str d4, [x28, #768]"
      ]
    },
    "psraw mm0, mm1": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x0f 0xe1",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "ldr d3, [x28, #784]",
        "uqshl d0, d3, #57",
        "ushr d0, d0, #57",
        "dup v0.8h, v0.h[0]",
        "neg v0.8h, v0.8h",
        "sshl v4.8h, v2.8h, v0.8h",
        "str d4, [x28, #768]"
      ]
    },
    "psrad mm0, mm1": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x0f 0xe2",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "ldr d3, [x28, #784]",
        "uqshl d0, d3, #57",
        "ushr d0, d0, #57",
        "dup v0.4s, v0.s[0]",
        "neg v0.4s, v0.4s",
        "sshl v4.4s, v2.4s, v0.4s",
        "str d4, [x28, #768]"
      ]
    },
    "pavgw mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xe3",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "urhadd v4.8h, v3.8h, v2.8h",
        "str d4, [x28, #768]"
      ]
    },
    "pmulhuw mm0, mm1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0xe4",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "ldr d3, [x28, #784]",
        "umull v4.4s, v2.4h, v3.4h",
        "shrn v4.4h, v4.4s, #16",
        "str d4, [x28, #768]"
      ]
    },
    "pmulhw mm0, mm1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0xe5",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "ldr d3, [x28, #784]",
        "smull v4.4s, v2.4h, v3.4h",
        "shrn v4.4h, v4.4s, #16",
        "str d4, [x28, #768]"
      ]
    },
    "movntq [rax], mm0": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x0f 0xe7",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "mov x20, x4",
        "str d2, [x20]"
      ]
    },
    "psubsb mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xe8",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "sqsub v4.16b, v3.16b, v2.16b",
        "str d4, [x28, #768]"
      ]
    },
    "psubsw mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xe9",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "sqsub v4.8h, v3.8h, v2.8h",
        "str d4, [x28, #768]"
      ]
    },
    "pminsw mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xea",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "smin v4.8h, v3.8h, v2.8h",
        "str d4, [x28, #768]"
      ]
    },
    "por mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xeb",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "orr v4.16b, v3.16b, v2.16b",
        "str d4, [x28, #768]"
      ]
    },
    "paddsb mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xec",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "sqadd v4.16b, v3.16b, v2.16b",
        "str d4, [x28, #768]"
      ]
    },
    "paddsw mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xed",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "sqadd v4.8h, v3.8h, v2.8h",
        "str d4, [x28, #768]"
      ]
    },
    "pmaxsw mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xee",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "smax v4.8h, v3.8h, v2.8h",
        "str d4, [x28, #768]"
      ]
    },
    "pxor mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xef",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "eor v4.16b, v3.16b, v2.16b",
        "str d4, [x28, #768]"
      ]
    },
    "psllw mm0, mm1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x0f 0xf1",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "ldr d3, [x28, #784]",
        "uqshl d0, d3, #57",
        "ushr d0, d0, #57",
        "dup v0.8h, v0.h[0]",
        "ushl v4.8h, v2.8h, v0.8h",
        "str d4, [x28, #768]"
      ]
    },
    "pslld mm0, mm1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x0f 0xf2",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "ldr d3, [x28, #784]",
        "uqshl d0, d3, #57",
        "ushr d0, d0, #57",
        "dup v0.4s, v0.s[0]",
        "ushl v4.4s, v2.4s, v0.4s",
        "str d4, [x28, #768]"
      ]
    },
    "psllq mm0, mm1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x0f 0xf3",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "ldr d3, [x28, #784]",
        "uqshl d0, d3, #57",
        "ushr d0, d0, #57",
        "dup v0.2d, v0.d[0]",
        "ushl v4.2d, v2.2d, v0.2d",
        "str d4, [x28, #768]"
      ]
    },
    "pmuludq mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xf4",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "ldr d3, [x28, #784]",
        "umull v4.2d, v2.2s, v3.2s",
        "str d4, [x28, #768]"
      ]
    },
    "pmaddwd mm0, mm1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0xf5",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "ldr d3, [x28, #784]",
        "smull v4.4s, v2.4h, v3.4h",
        "addp v2.4s, v4.4s, v4.4s",
        "str d2, [x28, #768]"
      ]
    },
    "psadbw mm0, mm1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0f 0xf6",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "ldr d3, [x28, #784]",
        "uabdl v4.8h, v2.8b, v3.8b",
        "addv h2, v4.8h",
        "str d2, [x28, #768]"
      ]
    },
    "maskmovq mm0, mm1": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x0f 0xf7",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "cmlt v3.16b, v2.16b, #0",
        "ldr d2, [x28, #768]",
        "mov x20, x11",
        "ldr d4, [x20]",
        "mov v5.8b, v3.8b",
        "bsl v5.8b, v2.8b, v4.8b",
        "str d5, [x20]"
      ]
    },
    "psubb mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xf8",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "sub v4.16b, v3.16b, v2.16b",
        "str d4, [x28, #768]"
      ]
    },
    "psubw mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xf9",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "sub v4.8h, v3.8h, v2.8h",
        "str d4, [x28, #768]"
      ]
    },
    "psubd mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xfa",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "sub v4.4s, v3.4s, v2.4s",
        "str d4, [x28, #768]"
      ]
    },
    "psubq mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xfb",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "sub v4.2d, v3.2d, v2.2d",
        "str d4, [x28, #768]"
      ]
    },
    "paddb mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xfc",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "add v4.16b, v3.16b, v2.16b",
        "str d4, [x28, #768]"
      ]
    },
    "paddw mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xfd",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "add v4.8h, v3.8h, v2.8h",
        "str d4, [x28, #768]"
      ]
    },
    "paddd mm0, mm1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x0f 0xfe",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #784]",
        "ldr d3, [x28, #768]",
        "add v4.4s, v3.4s, v2.4s",
        "str d4, [x28, #768]"
      ]
    }
  }
}
