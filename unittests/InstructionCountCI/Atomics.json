{
  "Features": {
    "Bitness": 64,
    "EnabledHostFeatures": [],
    "DisabledHostFeatures": [
      "SVE128",
      "SVE256",
      "FLAGM",
      "FLAGM2"
    ]
  },
  "Instructions": {
    "lock add byte [rax], cl": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x00",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x4",
        "ldaddalb w20, w22, [x21]",
        "eor w21, w22, w20",
        "mov x27, x21",
        "lsl w0, w22, #24",
        "cmn w0, w20, lsl #24",
        "add w21, w22, w20",
        "mov x26, x21"
      ]
    },
    "lock add word [rax], cx": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x01",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x4",
        "ldaddalh w20, w22, [x21]",
        "eor w21, w22, w20",
        "mov x27, x21",
        "lsl w0, w22, #16",
        "cmn w0, w20, lsl #16",
        "add w21, w22, w20",
        "mov x26, x21"
      ]
    },
    "lock add dword [rax], ecx": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x01",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x4",
        "ldaddal w20, w22, [x21]",
        "eor w21, w22, w20",
        "mov x27, x21",
        "adds w21, w22, w20",
        "mov x26, x21"
      ]
    },
    "lock or byte [rax], cl": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x08",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x4",
        "ldsetalb w20, w22, [x21]",
        "orr w21, w22, w20",
        "mov x26, x21",
        "cmn wzr, w21, lsl #24"
      ]
    },
    "lock or word [rax], cx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x09",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x4",
        "ldsetalh w20, w22, [x21]",
        "orr w21, w22, w20",
        "mov x26, x21",
        "cmn wzr, w21, lsl #16"
      ]
    },
    "lock or dword [rax], ecx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x09",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x4",
        "ldsetal w20, w22, [x21]",
        "orr w21, w22, w20",
        "mov x26, x21",
        "tst w21, w21"
      ]
    },
    "lock adc byte [rax], cl": {
      "ExpectedInstructionCount": 25,
      "Comment": "0x10",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "adc w21, wzr, w20",
        "mov x22, x4",
        "ldaddalb w21, w23, [x22]",
        "eor w21, w23, w20",
        "mov x27, x21",
        "cset w21, hs",
        "adc w22, w23, w20",
        "uxtb w24, w22",
        "cmp x24, x20",
        "cset x22, lo",
        "cmp x24, x20",
        "cset x25, ls",
        "cmp x21, #0x1 (1)",
        "csel x30, x25, x22, eq",
        "cmn wzr, w24, lsl #24",
        "mrs x21, nzcv",
        "orr w22, w21, w30, lsl #29",
        "eor w21, w23, w20",
        "eor w20, w24, w23",
        "bic w23, w20, w21",
        "ubfx x20, x23, #7, #1",
        "orr w21, w22, w20, lsl #28",
        "mov x26, x24",
        "msr nzcv, x21"
      ]
    },
    "lock adc word [rax], cx": {
      "ExpectedInstructionCount": 25,
      "Comment": "0x11",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "adc w21, wzr, w20",
        "mov x22, x4",
        "ldaddalh w21, w23, [x22]",
        "eor w21, w23, w20",
        "mov x27, x21",
        "cset w21, hs",
        "adc w22, w23, w20",
        "uxth w24, w22",
        "cmp x24, x20",
        "cset x22, lo",
        "cmp x24, x20",
        "cset x25, ls",
        "cmp x21, #0x1 (1)",
        "csel x30, x25, x22, eq",
        "cmn wzr, w24, lsl #16",
        "mrs x21, nzcv",
        "orr w22, w21, w30, lsl #29",
        "eor w21, w23, w20",
        "eor w20, w24, w23",
        "bic w23, w20, w21",
        "ubfx x20, x23, #15, #1",
        "orr w21, w22, w20, lsl #28",
        "mov x26, x24",
        "msr nzcv, x21"
      ]
    },
    "lock adc dword [rax], ecx": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x11",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "adc w21, wzr, w20",
        "mov x22, x4",
        "ldaddal w21, w23, [x22]",
        "eor w21, w23, w20",
        "mov x27, x21",
        "adcs w21, w23, w20",
        "mov x26, x21"
      ]
    },
    "lock sbb byte [rax], cl": {
      "ExpectedInstructionCount": 27,
      "Comment": "0x18",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x4",
        "adc w22, wzr, w20",
        "neg w1, w22",
        "ldaddalb w1, w23, [x21]",
        "eor w21, w23, w20",
        "mov x27, x21",
        "cset w21, hs",
        "add w22, w20, w21",
        "sub w24, w23, w22",
        "uxtb w22, w24",
        "cmp w22, w23",
        "cset x24, hi",
        "cmp w22, w23",
        "cset x25, hs",
        "cmp x21, #0x1 (1)",
        "csel x30, x25, x24, eq",
        "cmn wzr, w22, lsl #24",
        "mrs x21, nzcv",
        "orr w24, w21, w30, lsl #29",
        "eor w21, w23, w20",
        "eor w20, w22, w23",
        "and w23, w20, w21",
        "ubfx x20, x23, #7, #1",
        "orr w21, w24, w20, lsl #28",
        "mov x26, x22",
        "msr nzcv, x21"
      ]
    },
    "lock sbb word [rax], cx": {
      "ExpectedInstructionCount": 27,
      "Comment": "0x19",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x4",
        "adc w22, wzr, w20",
        "neg w1, w22",
        "ldaddalh w1, w23, [x21]",
        "eor w21, w23, w20",
        "mov x27, x21",
        "cset w21, hs",
        "add w22, w20, w21",
        "sub w24, w23, w22",
        "uxth w22, w24",
        "cmp w22, w23",
        "cset x24, hi",
        "cmp w22, w23",
        "cset x25, hs",
        "cmp x21, #0x1 (1)",
        "csel x30, x25, x24, eq",
        "cmn wzr, w22, lsl #16",
        "mrs x21, nzcv",
        "orr w24, w21, w30, lsl #29",
        "eor w21, w23, w20",
        "eor w20, w22, w23",
        "and w23, w20, w21",
        "ubfx x20, x23, #15, #1",
        "orr w21, w24, w20, lsl #28",
        "mov x26, x22",
        "msr nzcv, x21"
      ]
    },
    "lock sbb dword [rax], ecx": {
      "ExpectedInstructionCount": 15,
      "Comment": "0x19",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x4",
        "adc w22, wzr, w20",
        "neg w1, w22",
        "ldaddal w1, w23, [x21]",
        "eor w21, w23, w20",
        "mov x27, x21",
        "mrs x21, nzcv",
        "eor w22, w21, #0x20000000",
        "msr nzcv, x22",
        "sbcs w21, w23, w20",
        "mrs x20, nzcv",
        "eor w22, w20, #0x20000000",
        "mov x26, x21",
        "msr nzcv, x22"
      ]
    },
    "lock and byte [rax], cl": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x20",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x4",
        "mvn w1, w20",
        "ldclralb w1, w22, [x21]",
        "and w21, w22, w20",
        "cmn wzr, w21, lsl #24",
        "mov x26, x21"
      ]
    },
    "lock and word [rax], cx": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x21",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x4",
        "mvn w1, w20",
        "ldclralh w1, w22, [x21]",
        "and w21, w22, w20",
        "cmn wzr, w21, lsl #16",
        "mov x26, x21"
      ]
    },
    "lock and dword [rax], ecx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x21",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x4",
        "mvn w1, w20",
        "ldclral w1, w22, [x21]",
        "ands w21, w22, w20",
        "mov x26, x21"
      ]
    },
    "lock sub byte [rax], cl": {
      "ExpectedInstructionCount": 13,
      "Comment": "0x28",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x4",
        "neg w1, w20",
        "ldaddalb w1, w22, [x21]",
        "eor w21, w22, w20",
        "mov x27, x21",
        "lsl w0, w22, #24",
        "cmp w0, w20, lsl #24",
        "sub w21, w22, w20",
        "mov x26, x21",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "lock sub word [rax], cx": {
      "ExpectedInstructionCount": 13,
      "Comment": "0x28",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x4",
        "neg w1, w20",
        "ldaddalh w1, w22, [x21]",
        "eor w21, w22, w20",
        "mov x27, x21",
        "lsl w0, w22, #16",
        "cmp w0, w20, lsl #16",
        "sub w21, w22, w20",
        "mov x26, x21",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "lock sub dword [rax], ecx": {
      "ExpectedInstructionCount": 11,
      "Comment": "0x29",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x4",
        "neg w1, w20",
        "ldaddal w1, w22, [x21]",
        "eor w21, w22, w20",
        "mov x27, x21",
        "subs w21, w22, w20",
        "mov x26, x21",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "lock xor byte [rax], cl": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x30",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x4",
        "ldeoralb w20, w22, [x21]",
        "eor w21, w22, w20",
        "mov x26, x21",
        "cmn wzr, w21, lsl #24"
      ]
    },
    "lock xor word [rax], cx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x31",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x4",
        "ldeoralh w20, w22, [x21]",
        "eor w21, w22, w20",
        "mov x26, x21",
        "cmn wzr, w21, lsl #16"
      ]
    },
    "lock xor dword [rax], ecx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x31",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x4",
        "ldeoral w20, w22, [x21]",
        "eor w21, w22, w20",
        "mov x26, x21",
        "tst w21, w21"
      ]
    },
    "lock add qword [rax], rcx": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x01",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x4",
        "ldaddal x20, x22, [x21]",
        "eor w21, w22, w20",
        "mov x27, x21",
        "adds x21, x22, x20",
        "mov x26, x21"
      ]
    },
    "xchg byte [rax], cl": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x86",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x4",
        "swpalb w20, w22, [x21]",
        "mov x21, x20",
        "bfxil x21, x22, #0, #8",
        "mov x5, x21"
      ]
    },
    "xchg word [rax], cx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x87",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x4",
        "swpalh w20, w22, [x21]",
        "mov x21, x20",
        "bfxil x21, x22, #0, #16",
        "mov x5, x21"
      ]
    },
    "xchg dword [rax], ecx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x87",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x4",
        "swpal w20, w22, [x21]",
        "mov x5, x22"
      ]
    },
    "xchg qword [rax], rcx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x87",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x4",
        "swpal x20, x22, [x21]",
        "mov x5, x22"
      ]
    },
    "xadd byte [rax], bl": {
      "ExpectedInstructionCount": 13,
      "Comment": "0x0f 0xc0",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "uxtb w22, w21",
        "ldaddalb w22, w23, [x20]",
        "mov x20, x21",
        "bfxil x20, x23, #0, #8",
        "mov x7, x20",
        "eor w20, w23, w22",
        "mov x27, x20",
        "lsl w0, w23, #24",
        "cmn w0, w22, lsl #24",
        "add w20, w23, w22",
        "mov x26, x20"
      ]
    },
    "xadd word [rax], bx": {
      "ExpectedInstructionCount": 13,
      "Comment": "0x0f 0xc1",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "uxth w22, w21",
        "ldaddalh w22, w23, [x20]",
        "mov x20, x21",
        "bfxil x20, x23, #0, #16",
        "mov x7, x20",
        "eor w20, w23, w22",
        "mov x27, x20",
        "lsl w0, w23, #16",
        "cmn w0, w22, lsl #16",
        "add w20, w23, w22",
        "mov x26, x20"
      ]
    },
    "xadd dword [rax], ebx": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x0f 0xc1",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "mov w22, w21",
        "ldaddal w22, w21, [x20]",
        "mov x7, x21",
        "eor w20, w21, w22",
        "mov x27, x20",
        "adds w20, w21, w22",
        "mov x26, x20"
      ]
    },
    "xadd qword [rax], rbx": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x0f 0xc1",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "ldaddal x21, x22, [x20]",
        "mov x7, x22",
        "eor w20, w22, w21",
        "mov x27, x20",
        "adds x20, x22, x21",
        "mov x26, x20"
      ]
    },
    "lock add byte [rax], 1": {
      "ExpectedInstructionCount": 8,
      "Comment": "GROUP1 0x80 /0",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "ldaddalb w20, w22, [x21]",
        "mov x27, x22",
        "lsl w0, w22, #24",
        "cmn w0, w20, lsl #24",
        "add w20, w22, #0x1 (1)",
        "mov x26, x20"
      ]
    },
    "lock add byte [rax], 0xFF": {
      "ExpectedInstructionCount": 9,
      "Comment": "GROUP1 0x80 /0",
      "ExpectedArm64ASM": [
        "mov w20, #0xff",
        "mov x21, x4",
        "ldaddalb w20, w22, [x21]",
        "mvn w21, w22",
        "mov x27, x21",
        "lsl w0, w22, #24",
        "cmn w0, w20, lsl #24",
        "add w20, w22, #0xff (255)",
        "mov x26, x20"
      ]
    },
    "lock add word [rax], 0x100": {
      "ExpectedInstructionCount": 8,
      "Comment": "GROUP1 0x81 /0",
      "ExpectedArm64ASM": [
        "mov w20, #0x100",
        "mov x21, x4",
        "ldaddalh w20, w22, [x21]",
        "mov x27, x22",
        "lsl w0, w22, #16",
        "cmn w0, w20, lsl #16",
        "add w20, w22, #0x100 (256)",
        "mov x26, x20"
      ]
    },
    "lock add word [rax], 0xFFFF": {
      "ExpectedInstructionCount": 9,
      "Comment": "GROUP1 0x81 /0",
      "ExpectedArm64ASM": [
        "mov w20, #0xffff",
        "mov x21, x4",
        "ldaddalh w20, w22, [x21]",
        "mvn w21, w22",
        "mov x27, x21",
        "lsl w0, w22, #16",
        "cmn w0, w20, lsl #16",
        "add w21, w22, w20",
        "mov x26, x21"
      ]
    },
    "lock add dword [rax], 0x100": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x81 /0",
      "ExpectedArm64ASM": [
        "mov w20, #0x100",
        "mov x21, x4",
        "ldaddal w20, w22, [x21]",
        "mov x27, x22",
        "adds w20, w22, #0x100 (256)",
        "mov x26, x20"
      ]
    },
    "lock add dword [rax], 0xFFFFFFFF": {
      "ExpectedInstructionCount": 7,
      "Comment": "GROUP1 0x81 /0",
      "ExpectedArm64ASM": [
        "mov w20, #0xffffffff",
        "mov x21, x4",
        "ldaddal w20, w22, [x21]",
        "mvn w21, w22",
        "mov x27, x21",
        "adds w21, w22, w20",
        "mov x26, x21"
      ]
    },
    "lock add qword [rax], 0x100": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x81 /0",
      "ExpectedArm64ASM": [
        "mov w20, #0x100",
        "mov x21, x4",
        "ldaddal x20, x22, [x21]",
        "mov x27, x22",
        "adds x20, x22, #0x100 (256)",
        "mov x26, x20"
      ]
    },
    "lock add qword [rax], -2147483647": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x81 /0",
      "ExpectedArm64ASM": [
        "mov x20, #0xffffffff80000001",
        "mov x21, x4",
        "ldaddal x20, x22, [x21]",
        "mov x27, x22",
        "adds x21, x22, x20",
        "mov x26, x21"
      ]
    },
    "lock add word [rax], 1": {
      "ExpectedInstructionCount": 8,
      "Comment": "GROUP1 0x83 /0",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "ldaddalh w20, w22, [x21]",
        "mov x27, x22",
        "lsl w0, w22, #16",
        "cmn w0, w20, lsl #16",
        "add w20, w22, #0x1 (1)",
        "mov x26, x20"
      ]
    },
    "lock add dword [rax], 1": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x83 /0",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "ldaddal w20, w22, [x21]",
        "mov x27, x22",
        "adds w20, w22, #0x1 (1)",
        "mov x26, x20"
      ]
    },
    "lock add qword [rax], 1": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x83 /0",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "ldaddal x20, x22, [x21]",
        "mov x27, x22",
        "adds x20, x22, #0x1 (1)",
        "mov x26, x20"
      ]
    },
    "lock or byte [rax], 1": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x80 /1",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "ldsetalb w20, w22, [x21]",
        "orr w20, w22, #0x1",
        "mov x26, x20",
        "cmn wzr, w20, lsl #24"
      ]
    },
    "lock or byte [rax], 0xFF": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x80 /1",
      "ExpectedArm64ASM": [
        "mov w20, #0xff",
        "mov x21, x4",
        "ldsetalb w20, w22, [x21]",
        "orr w20, w22, #0xff",
        "mov x26, x20",
        "cmn wzr, w20, lsl #24"
      ]
    },
    "lock or word [rax], 0x100": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x81 /1",
      "ExpectedArm64ASM": [
        "mov w20, #0x100",
        "mov x21, x4",
        "ldsetalh w20, w22, [x21]",
        "orr w20, w22, #0x100",
        "mov x26, x20",
        "cmn wzr, w20, lsl #16"
      ]
    },
    "lock or word [rax], 0xFFFF": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x81 /1",
      "ExpectedArm64ASM": [
        "mov w20, #0xffff",
        "mov x21, x4",
        "ldsetalh w20, w22, [x21]",
        "orr w20, w22, #0xffff",
        "mov x26, x20",
        "cmn wzr, w20, lsl #16"
      ]
    },
    "lock or dword [rax], 0x100": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x81 /1",
      "ExpectedArm64ASM": [
        "mov w20, #0x100",
        "mov x21, x4",
        "ldsetal w20, w22, [x21]",
        "orr w20, w22, #0x100",
        "mov x26, x20",
        "tst w20, w20"
      ]
    },
    "lock or dword [rax], 0xFFFFFFFF": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x81 /1",
      "ExpectedArm64ASM": [
        "mov w20, #0xffffffff",
        "mov x21, x4",
        "ldsetal w20, w22, [x21]",
        "orr w21, w22, w20",
        "mov x26, x21",
        "tst w21, w21"
      ]
    },
    "lock or qword [rax], 0x100": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x81 /1",
      "ExpectedArm64ASM": [
        "mov w20, #0x100",
        "mov x21, x4",
        "ldsetal x20, x22, [x21]",
        "orr x20, x22, #0x100",
        "mov x26, x20",
        "tst x20, x20"
      ]
    },
    "lock or qword [rax], -2147483647": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x81 /1",
      "ExpectedArm64ASM": [
        "mov x20, #0xffffffff80000001",
        "mov x21, x4",
        "ldsetal x20, x22, [x21]",
        "orr x20, x22, #0xffffffff80000001",
        "mov x26, x20",
        "tst x20, x20"
      ]
    },
    "lock or word [rax], 1": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x83 /1",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "ldsetalh w20, w22, [x21]",
        "orr w20, w22, #0x1",
        "mov x26, x20",
        "cmn wzr, w20, lsl #16"
      ]
    },
    "lock or dword [rax], 1": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x83 /1",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "ldsetal w20, w22, [x21]",
        "orr w20, w22, #0x1",
        "mov x26, x20",
        "tst w20, w20"
      ]
    },
    "lock or qword [rax], 1": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x83 /1",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "ldsetal x20, x22, [x21]",
        "orr x20, x22, #0x1",
        "mov x26, x20",
        "tst x20, x20"
      ]
    },
    "lock adc byte [rax], 1": {
      "ExpectedInstructionCount": 22,
      "Comment": "GROUP1 0x80 /2",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "adc w21, wzr, w20",
        "mov x22, x4",
        "ldaddalb w21, w23, [x22]",
        "mov x27, x23",
        "cset w21, hs",
        "adc w22, w23, w20",
        "uxtb w20, w22",
        "cmp w20, #0x1 (1)",
        "cset x22, lo",
        "cmp w20, #0x1 (1)",
        "cset x24, ls",
        "cmp x21, #0x1 (1)",
        "csel x25, x24, x22, eq",
        "cmn wzr, w20, lsl #24",
        "mrs x21, nzcv",
        "orr w22, w21, w25, lsl #29",
        "bic w21, w20, w23",
        "ubfx x23, x21, #7, #1",
        "orr w21, w22, w23, lsl #28",
        "mov x26, x20",
        "msr nzcv, x21"
      ]
    },
    "lock adc byte [rax], 0xFF": {
      "ExpectedInstructionCount": 23,
      "Comment": "GROUP1 0x80 /2",
      "ExpectedArm64ASM": [
        "mov w20, #0xff",
        "adc w21, wzr, w20",
        "mov x22, x4",
        "ldaddalb w21, w23, [x22]",
        "mvn w21, w23",
        "mov x27, x21",
        "cset w21, hs",
        "adc w22, w23, w20",
        "uxtb w20, w22",
        "cmp w20, #0xff (255)",
        "cset x22, lo",
        "cmp w20, #0xff (255)",
        "cset x24, ls",
        "cmp x21, #0x1 (1)",
        "csel x25, x24, x22, eq",
        "cmn wzr, w20, lsl #24",
        "mrs x21, nzcv",
        "orr w22, w21, w25, lsl #29",
        "bic w21, w23, w20",
        "ubfx x23, x21, #7, #1",
        "orr w21, w22, w23, lsl #28",
        "mov x26, x20",
        "msr nzcv, x21"
      ]
    },
    "lock adc word [rax], 0x100": {
      "ExpectedInstructionCount": 22,
      "Comment": "GROUP1 0x81 /2",
      "ExpectedArm64ASM": [
        "mov w20, #0x100",
        "adc w21, wzr, w20",
        "mov x22, x4",
        "ldaddalh w21, w23, [x22]",
        "mov x27, x23",
        "cset w21, hs",
        "adc w22, w23, w20",
        "uxth w20, w22",
        "cmp w20, #0x100 (256)",
        "cset x22, lo",
        "cmp w20, #0x100 (256)",
        "cset x24, ls",
        "cmp x21, #0x1 (1)",
        "csel x25, x24, x22, eq",
        "cmn wzr, w20, lsl #16",
        "mrs x21, nzcv",
        "orr w22, w21, w25, lsl #29",
        "bic w21, w20, w23",
        "ubfx x23, x21, #15, #1",
        "orr w21, w22, w23, lsl #28",
        "mov x26, x20",
        "msr nzcv, x21"
      ]
    },
    "lock adc word [rax], 0xFFFF": {
      "ExpectedInstructionCount": 23,
      "Comment": "GROUP1 0x81 /2",
      "ExpectedArm64ASM": [
        "mov w20, #0xffff",
        "adc w21, wzr, w20",
        "mov x22, x4",
        "ldaddalh w21, w23, [x22]",
        "mvn w21, w23",
        "mov x27, x21",
        "cset w21, hs",
        "adc w22, w23, w20",
        "uxth w24, w22",
        "cmp w24, w20",
        "cset x22, lo",
        "cmp w24, w20",
        "cset x25, ls",
        "cmp x21, #0x1 (1)",
        "csel x20, x25, x22, eq",
        "cmn wzr, w24, lsl #16",
        "mrs x21, nzcv",
        "orr w22, w21, w20, lsl #29",
        "bic w20, w23, w24",
        "ubfx x21, x20, #15, #1",
        "orr w20, w22, w21, lsl #28",
        "mov x26, x24",
        "msr nzcv, x20"
      ]
    },
    "lock adc dword [rax], 0x100": {
      "ExpectedInstructionCount": 7,
      "Comment": "GROUP1 0x81 /2",
      "ExpectedArm64ASM": [
        "mov w20, #0x100",
        "adc w21, wzr, w20",
        "mov x22, x4",
        "ldaddal w21, w23, [x22]",
        "mov x27, x23",
        "adcs w21, w23, w20",
        "mov x26, x21"
      ]
    },
    "lock adc dword [rax], 0xFFFFFFFF": {
      "ExpectedInstructionCount": 8,
      "Comment": "GROUP1 0x81 /2",
      "ExpectedArm64ASM": [
        "mov w20, #0xffffffff",
        "adc w21, wzr, w20",
        "mov x22, x4",
        "ldaddal w21, w23, [x22]",
        "mvn w21, w23",
        "mov x27, x21",
        "adcs w21, w23, w20",
        "mov x26, x21"
      ]
    },
    "lock adc qword [rax], 0x100": {
      "ExpectedInstructionCount": 7,
      "Comment": "GROUP1 0x81 /2",
      "ExpectedArm64ASM": [
        "mov w20, #0x100",
        "adc x21, xzr, x20",
        "mov x22, x4",
        "ldaddal x21, x23, [x22]",
        "mov x27, x23",
        "adcs x21, x23, x20",
        "mov x26, x21"
      ]
    },
    "lock adc qword [rax], -2147483647": {
      "ExpectedInstructionCount": 7,
      "Comment": "GROUP1 0x81 /2",
      "ExpectedArm64ASM": [
        "mov x20, #0xffffffff80000001",
        "adc x21, xzr, x20",
        "mov x22, x4",
        "ldaddal x21, x23, [x22]",
        "mov x27, x23",
        "adcs x21, x23, x20",
        "mov x26, x21"
      ]
    },
    "lock adc word [rax], 1": {
      "ExpectedInstructionCount": 22,
      "Comment": "GROUP1 0x83 /2",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "adc w21, wzr, w20",
        "mov x22, x4",
        "ldaddalh w21, w23, [x22]",
        "mov x27, x23",
        "cset w21, hs",
        "adc w22, w23, w20",
        "uxth w20, w22",
        "cmp w20, #0x1 (1)",
        "cset x22, lo",
        "cmp w20, #0x1 (1)",
        "cset x24, ls",
        "cmp x21, #0x1 (1)",
        "csel x25, x24, x22, eq",
        "cmn wzr, w20, lsl #16",
        "mrs x21, nzcv",
        "orr w22, w21, w25, lsl #29",
        "bic w21, w20, w23",
        "ubfx x23, x21, #15, #1",
        "orr w21, w22, w23, lsl #28",
        "mov x26, x20",
        "msr nzcv, x21"
      ]
    },
    "lock adc dword [rax], 1": {
      "ExpectedInstructionCount": 7,
      "Comment": "GROUP1 0x83 /2",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "adc w21, wzr, w20",
        "mov x22, x4",
        "ldaddal w21, w23, [x22]",
        "mov x27, x23",
        "adcs w21, w23, w20",
        "mov x26, x21"
      ]
    },
    "lock adc qword [rax], 1": {
      "ExpectedInstructionCount": 7,
      "Comment": "GROUP1 0x83 /2",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "adc x21, xzr, x20",
        "mov x22, x4",
        "ldaddal x21, x23, [x22]",
        "mov x27, x23",
        "adcs x21, x23, x20",
        "mov x26, x21"
      ]
    },
    "lock sbb byte [rax], 1": {
      "ExpectedInstructionCount": 24,
      "Comment": "GROUP1 0x80 /3",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "adc w22, wzr, w20",
        "neg w1, w22",
        "ldaddalb w1, w23, [x21]",
        "mov x27, x23",
        "cset w21, hs",
        "add w22, w20, w21",
        "sub w20, w23, w22",
        "uxtb w22, w20",
        "cmp w22, w23",
        "cset x20, hi",
        "cmp w22, w23",
        "cset x24, hs",
        "cmp x21, #0x1 (1)",
        "csel x25, x24, x20, eq",
        "cmn wzr, w22, lsl #24",
        "mrs x20, nzcv",
        "orr w21, w20, w25, lsl #29",
        "bic w20, w23, w22",
        "ubfx x23, x20, #7, #1",
        "orr w20, w21, w23, lsl #28",
        "mov x26, x22",
        "msr nzcv, x20"
      ]
    },
    "lock sbb byte [rax], 0xFF": {
      "ExpectedInstructionCount": 25,
      "Comment": "GROUP1 0x80 /3",
      "ExpectedArm64ASM": [
        "mov w20, #0xff",
        "mov x21, x4",
        "adc w22, wzr, w20",
        "neg w1, w22",
        "ldaddalb w1, w23, [x21]",
        "mvn w21, w23",
        "mov x27, x21",
        "cset w21, hs",
        "add w22, w20, w21",
        "sub w20, w23, w22",
        "uxtb w22, w20",
        "cmp w22, w23",
        "cset x20, hi",
        "cmp w22, w23",
        "cset x24, hs",
        "cmp x21, #0x1 (1)",
        "csel x25, x24, x20, eq",
        "cmn wzr, w22, lsl #24",
        "mrs x20, nzcv",
        "orr w21, w20, w25, lsl #29",
        "bic w20, w22, w23",
        "ubfx x23, x20, #7, #1",
        "orr w20, w21, w23, lsl #28",
        "mov x26, x22",
        "msr nzcv, x20"
      ]
    },
    "lock sbb word [rax], 0x100": {
      "ExpectedInstructionCount": 24,
      "Comment": "GROUP1 0x81 /3",
      "ExpectedArm64ASM": [
        "mov w20, #0x100",
        "mov x21, x4",
        "adc w22, wzr, w20",
        "neg w1, w22",
        "ldaddalh w1, w23, [x21]",
        "mov x27, x23",
        "cset w21, hs",
        "add w22, w20, w21",
        "sub w20, w23, w22",
        "uxth w22, w20",
        "cmp w22, w23",
        "cset x20, hi",
        "cmp w22, w23",
        "cset x24, hs",
        "cmp x21, #0x1 (1)",
        "csel x25, x24, x20, eq",
        "cmn wzr, w22, lsl #16",
        "mrs x20, nzcv",
        "orr w21, w20, w25, lsl #29",
        "bic w20, w23, w22",
        "ubfx x23, x20, #15, #1",
        "orr w20, w21, w23, lsl #28",
        "mov x26, x22",
        "msr nzcv, x20"
      ]
    },
    "lock sbb word [rax], 0xFFFF": {
      "ExpectedInstructionCount": 25,
      "Comment": "GROUP1 0x81 /3",
      "ExpectedArm64ASM": [
        "mov w20, #0xffff",
        "mov x21, x4",
        "adc w22, wzr, w20",
        "neg w1, w22",
        "ldaddalh w1, w23, [x21]",
        "mvn w21, w23",
        "mov x27, x21",
        "cset w21, hs",
        "add w22, w20, w21",
        "sub w20, w23, w22",
        "uxth w22, w20",
        "cmp w22, w23",
        "cset x20, hi",
        "cmp w22, w23",
        "cset x24, hs",
        "cmp x21, #0x1 (1)",
        "csel x25, x24, x20, eq",
        "cmn wzr, w22, lsl #16",
        "mrs x20, nzcv",
        "orr w21, w20, w25, lsl #29",
        "bic w20, w22, w23",
        "ubfx x23, x20, #15, #1",
        "orr w20, w21, w23, lsl #28",
        "mov x26, x22",
        "msr nzcv, x20"
      ]
    },
    "lock sbb dword [rax], 0x100": {
      "ExpectedInstructionCount": 14,
      "Comment": "GROUP1 0x81 /3",
      "ExpectedArm64ASM": [
        "mov w20, #0x100",
        "mov x21, x4",
        "adc w22, wzr, w20",
        "neg w1, w22",
        "ldaddal w1, w23, [x21]",
        "mov x27, x23",
        "mrs x21, nzcv",
        "eor w22, w21, #0x20000000",
        "msr nzcv, x22",
        "sbcs w21, w23, w20",
        "mrs x20, nzcv",
        "eor w22, w20, #0x20000000",
        "mov x26, x21",
        "msr nzcv, x22"
      ]
    },
    "lock sbb dword [rax], 0xFFFFFFFF": {
      "ExpectedInstructionCount": 15,
      "Comment": "GROUP1 0x81 /3",
      "ExpectedArm64ASM": [
        "mov w20, #0xffffffff",
        "mov x21, x4",
        "adc w22, wzr, w20",
        "neg w1, w22",
        "ldaddal w1, w23, [x21]",
        "mvn w21, w23",
        "mov x27, x21",
        "mrs x21, nzcv",
        "eor w22, w21, #0x20000000",
        "msr nzcv, x22",
        "sbcs w21, w23, w20",
        "mrs x20, nzcv",
        "eor w22, w20, #0x20000000",
        "mov x26, x21",
        "msr nzcv, x22"
      ]
    },
    "lock sbb qword [rax], 0x100": {
      "ExpectedInstructionCount": 14,
      "Comment": "GROUP1 0x81 /3",
      "ExpectedArm64ASM": [
        "mov w20, #0x100",
        "mov x21, x4",
        "adc x22, xzr, x20",
        "neg x1, x22",
        "ldaddal x1, x23, [x21]",
        "mov x27, x23",
        "mrs x21, nzcv",
        "eor w22, w21, #0x20000000",
        "msr nzcv, x22",
        "sbcs x21, x23, x20",
        "mrs x20, nzcv",
        "eor w22, w20, #0x20000000",
        "mov x26, x21",
        "msr nzcv, x22"
      ]
    },
    "lock sbb qword [rax], -2147483647": {
      "ExpectedInstructionCount": 14,
      "Comment": "GROUP1 0x81 /3",
      "ExpectedArm64ASM": [
        "mov x20, #0xffffffff80000001",
        "mov x21, x4",
        "adc x22, xzr, x20",
        "neg x1, x22",
        "ldaddal x1, x23, [x21]",
        "mov x27, x23",
        "mrs x21, nzcv",
        "eor w22, w21, #0x20000000",
        "msr nzcv, x22",
        "sbcs x21, x23, x20",
        "mrs x20, nzcv",
        "eor w22, w20, #0x20000000",
        "mov x26, x21",
        "msr nzcv, x22"
      ]
    },
    "lock sbb word [rax], 1": {
      "ExpectedInstructionCount": 24,
      "Comment": "GROUP1 0x83 /3",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "adc w22, wzr, w20",
        "neg w1, w22",
        "ldaddalh w1, w23, [x21]",
        "mov x27, x23",
        "cset w21, hs",
        "add w22, w20, w21",
        "sub w20, w23, w22",
        "uxth w22, w20",
        "cmp w22, w23",
        "cset x20, hi",
        "cmp w22, w23",
        "cset x24, hs",
        "cmp x21, #0x1 (1)",
        "csel x25, x24, x20, eq",
        "cmn wzr, w22, lsl #16",
        "mrs x20, nzcv",
        "orr w21, w20, w25, lsl #29",
        "bic w20, w23, w22",
        "ubfx x23, x20, #15, #1",
        "orr w20, w21, w23, lsl #28",
        "mov x26, x22",
        "msr nzcv, x20"
      ]
    },
    "lock sbb dword [rax], 1": {
      "ExpectedInstructionCount": 14,
      "Comment": "GROUP1 0x83 /3",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "adc w22, wzr, w20",
        "neg w1, w22",
        "ldaddal w1, w23, [x21]",
        "mov x27, x23",
        "mrs x21, nzcv",
        "eor w22, w21, #0x20000000",
        "msr nzcv, x22",
        "sbcs w21, w23, w20",
        "mrs x20, nzcv",
        "eor w22, w20, #0x20000000",
        "mov x26, x21",
        "msr nzcv, x22"
      ]
    },
    "lock sbb qword [rax], 1": {
      "ExpectedInstructionCount": 14,
      "Comment": "GROUP1 0x83 /3",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "adc x22, xzr, x20",
        "neg x1, x22",
        "ldaddal x1, x23, [x21]",
        "mov x27, x23",
        "mrs x21, nzcv",
        "eor w22, w21, #0x20000000",
        "msr nzcv, x22",
        "sbcs x21, x23, x20",
        "mrs x20, nzcv",
        "eor w22, w20, #0x20000000",
        "mov x26, x21",
        "msr nzcv, x22"
      ]
    },
    "lock and byte [rax], 1": {
      "ExpectedInstructionCount": 7,
      "Comment": "GROUP1 0x80 /4",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mvn w1, w20",
        "ldclralb w1, w22, [x21]",
        "and w20, w22, #0x1",
        "cmn wzr, w20, lsl #24",
        "mov x26, x20"
      ]
    },
    "lock and byte [rax], 0xFF": {
      "ExpectedInstructionCount": 7,
      "Comment": "GROUP1 0x80 /4",
      "ExpectedArm64ASM": [
        "mov w20, #0xff",
        "mov x21, x4",
        "mvn w1, w20",
        "ldclralb w1, w22, [x21]",
        "and w20, w22, #0xff",
        "cmn wzr, w20, lsl #24",
        "mov x26, x20"
      ]
    },
    "lock and word [rax], 0x100": {
      "ExpectedInstructionCount": 7,
      "Comment": "GROUP1 0x81 /4",
      "ExpectedArm64ASM": [
        "mov w20, #0x100",
        "mov x21, x4",
        "mvn w1, w20",
        "ldclralh w1, w22, [x21]",
        "and w20, w22, #0x100",
        "cmn wzr, w20, lsl #16",
        "mov x26, x20"
      ]
    },
    "lock and word [rax], 0xFFFF": {
      "ExpectedInstructionCount": 7,
      "Comment": "GROUP1 0x81 /4",
      "ExpectedArm64ASM": [
        "mov w20, #0xffff",
        "mov x21, x4",
        "mvn w1, w20",
        "ldclralh w1, w22, [x21]",
        "and w20, w22, #0xffff",
        "cmn wzr, w20, lsl #16",
        "mov x26, x20"
      ]
    },
    "lock and dword [rax], 0x100": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x81 /4",
      "ExpectedArm64ASM": [
        "mov w20, #0x100",
        "mov x21, x4",
        "mvn w1, w20",
        "ldclral w1, w22, [x21]",
        "ands w20, w22, #0x100",
        "mov x26, x20"
      ]
    },
    "lock and dword [rax], 0xFFFFFFFF": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x81 /4",
      "ExpectedArm64ASM": [
        "mov w20, #0xffffffff",
        "mov x21, x4",
        "mvn w1, w20",
        "ldclral w1, w22, [x21]",
        "ands w21, w22, w20",
        "mov x26, x21"
      ]
    },
    "lock and qword [rax], 0x100": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x81 /4",
      "ExpectedArm64ASM": [
        "mov w20, #0x100",
        "mov x21, x4",
        "mvn x1, x20",
        "ldclral x1, x22, [x21]",
        "ands x20, x22, #0x100",
        "mov x26, x20"
      ]
    },
    "lock and qword [rax], -2147483647": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x81 /4",
      "ExpectedArm64ASM": [
        "mov x20, #0xffffffff80000001",
        "mov x21, x4",
        "mvn x1, x20",
        "ldclral x1, x22, [x21]",
        "ands x20, x22, #0xffffffff80000001",
        "mov x26, x20"
      ]
    },
    "lock and word [rax], 1": {
      "ExpectedInstructionCount": 7,
      "Comment": "GROUP1 0x83 /4",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mvn w1, w20",
        "ldclralh w1, w22, [x21]",
        "and w20, w22, #0x1",
        "cmn wzr, w20, lsl #16",
        "mov x26, x20"
      ]
    },
    "lock and dword [rax], 1": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x83 /4",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mvn w1, w20",
        "ldclral w1, w22, [x21]",
        "ands w20, w22, #0x1",
        "mov x26, x20"
      ]
    },
    "lock and qword [rax], 1": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x83 /4",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mvn x1, x20",
        "ldclral x1, x22, [x21]",
        "ands x20, x22, #0x1",
        "mov x26, x20"
      ]
    },
    "lock sub byte [rax], 1": {
      "ExpectedInstructionCount": 12,
      "Comment": "GROUP1 0x80 /5",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "neg w1, w20",
        "ldaddalb w1, w22, [x21]",
        "mov x27, x22",
        "lsl w0, w22, #24",
        "cmp w0, w20, lsl #24",
        "sub w20, w22, #0x1 (1)",
        "mov x26, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "lock sub byte [rax], 0xFF": {
      "ExpectedInstructionCount": 13,
      "Comment": "GROUP1 0x80 /5",
      "ExpectedArm64ASM": [
        "mov w20, #0xff",
        "mov x21, x4",
        "neg w1, w20",
        "ldaddalb w1, w22, [x21]",
        "mvn w21, w22",
        "mov x27, x21",
        "lsl w0, w22, #24",
        "cmp w0, w20, lsl #24",
        "sub w20, w22, #0xff (255)",
        "mov x26, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "lock sub word [rax], 0x100": {
      "ExpectedInstructionCount": 12,
      "Comment": "GROUP1 0x81 /5",
      "ExpectedArm64ASM": [
        "mov w20, #0x100",
        "mov x21, x4",
        "neg w1, w20",
        "ldaddalh w1, w22, [x21]",
        "mov x27, x22",
        "lsl w0, w22, #16",
        "cmp w0, w20, lsl #16",
        "sub w20, w22, #0x100 (256)",
        "mov x26, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "lock sub word [rax], 0xFFFF": {
      "ExpectedInstructionCount": 13,
      "Comment": "GROUP1 0x81 /5",
      "ExpectedArm64ASM": [
        "mov w20, #0xffff",
        "mov x21, x4",
        "neg w1, w20",
        "ldaddalh w1, w22, [x21]",
        "mvn w21, w22",
        "mov x27, x21",
        "lsl w0, w22, #16",
        "cmp w0, w20, lsl #16",
        "sub w21, w22, w20",
        "mov x26, x21",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "lock sub dword [rax], 0x100": {
      "ExpectedInstructionCount": 10,
      "Comment": "GROUP1 0x81 /5",
      "ExpectedArm64ASM": [
        "mov w20, #0x100",
        "mov x21, x4",
        "neg w1, w20",
        "ldaddal w1, w22, [x21]",
        "mov x27, x22",
        "subs w20, w22, #0x100 (256)",
        "mov x26, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "lock sub dword [rax], 0xFFFFFFFF": {
      "ExpectedInstructionCount": 11,
      "Comment": "GROUP1 0x81 /5",
      "ExpectedArm64ASM": [
        "mov w20, #0xffffffff",
        "mov x21, x4",
        "neg w1, w20",
        "ldaddal w1, w22, [x21]",
        "mvn w21, w22",
        "mov x27, x21",
        "subs w21, w22, w20",
        "mov x26, x21",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "lock sub qword [rax], 0x100": {
      "ExpectedInstructionCount": 10,
      "Comment": "GROUP1 0x81 /5",
      "ExpectedArm64ASM": [
        "mov w20, #0x100",
        "mov x21, x4",
        "neg x1, x20",
        "ldaddal x1, x22, [x21]",
        "mov x27, x22",
        "subs x20, x22, #0x100 (256)",
        "mov x26, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "lock sub qword [rax], -2147483647": {
      "ExpectedInstructionCount": 10,
      "Comment": "GROUP1 0x81 /5",
      "ExpectedArm64ASM": [
        "mov x20, #0xffffffff80000001",
        "mov x21, x4",
        "neg x1, x20",
        "ldaddal x1, x22, [x21]",
        "mov x27, x22",
        "subs x21, x22, x20",
        "mov x26, x21",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "lock sub word [rax], 1": {
      "ExpectedInstructionCount": 12,
      "Comment": "GROUP1 0x83 /5",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "neg w1, w20",
        "ldaddalh w1, w22, [x21]",
        "mov x27, x22",
        "lsl w0, w22, #16",
        "cmp w0, w20, lsl #16",
        "sub w20, w22, #0x1 (1)",
        "mov x26, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "lock sub dword [rax], 1": {
      "ExpectedInstructionCount": 10,
      "Comment": "GROUP1 0x83 /5",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "neg w1, w20",
        "ldaddal w1, w22, [x21]",
        "mov x27, x22",
        "subs w20, w22, #0x1 (1)",
        "mov x26, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "lock sub qword [rax], 1": {
      "ExpectedInstructionCount": 10,
      "Comment": "GROUP1 0x83 /5",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "neg x1, x20",
        "ldaddal x1, x22, [x21]",
        "mov x27, x22",
        "subs x20, x22, #0x1 (1)",
        "mov x26, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "lock xor byte [rax], 1": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x80 /6",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "ldeoralb w20, w22, [x21]",
        "eor w20, w22, #0x1",
        "mov x26, x20",
        "cmn wzr, w20, lsl #24"
      ]
    },
    "lock xor byte [rax], 0xFF": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x80 /6",
      "ExpectedArm64ASM": [
        "mov w20, #0xff",
        "mov x21, x4",
        "ldeoralb w20, w22, [x21]",
        "eor w20, w22, #0xff",
        "mov x26, x20",
        "cmn wzr, w20, lsl #24"
      ]
    },
    "lock xor word [rax], 0x100": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x81 /6",
      "ExpectedArm64ASM": [
        "mov w20, #0x100",
        "mov x21, x4",
        "ldeoralh w20, w22, [x21]",
        "eor w20, w22, #0x100",
        "mov x26, x20",
        "cmn wzr, w20, lsl #16"
      ]
    },
    "lock xor word [rax], 0xFFFF": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x81 /6",
      "ExpectedArm64ASM": [
        "mov w20, #0xffff",
        "mov x21, x4",
        "ldeoralh w20, w22, [x21]",
        "eor w20, w22, #0xffff",
        "mov x26, x20",
        "cmn wzr, w20, lsl #16"
      ]
    },
    "lock xor dword [rax], 0x100": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x81 /6",
      "ExpectedArm64ASM": [
        "mov w20, #0x100",
        "mov x21, x4",
        "ldeoral w20, w22, [x21]",
        "eor w20, w22, #0x100",
        "mov x26, x20",
        "tst w20, w20"
      ]
    },
    "lock xor dword [rax], 0xFFFFFFFF": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x81 /6",
      "ExpectedArm64ASM": [
        "mov w20, #0xffffffff",
        "mov x21, x4",
        "ldeoral w20, w22, [x21]",
        "eor w21, w22, w20",
        "mov x26, x21",
        "tst w21, w21"
      ]
    },
    "lock xor qword [rax], 0x100": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x81 /6",
      "ExpectedArm64ASM": [
        "mov w20, #0x100",
        "mov x21, x4",
        "ldeoral x20, x22, [x21]",
        "eor x20, x22, #0x100",
        "mov x26, x20",
        "tst x20, x20"
      ]
    },
    "lock xor qword [rax], -2147483647": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x81 /6",
      "ExpectedArm64ASM": [
        "mov x20, #0xffffffff80000001",
        "mov x21, x4",
        "ldeoral x20, x22, [x21]",
        "eor x20, x22, #0xffffffff80000001",
        "mov x26, x20",
        "tst x20, x20"
      ]
    },
    "lock xor word [rax], 1": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x83 /6",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "ldeoralh w20, w22, [x21]",
        "eor w20, w22, #0x1",
        "mov x26, x20",
        "cmn wzr, w20, lsl #16"
      ]
    },
    "lock xor dword [rax], 1": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x83 /6",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "ldeoral w20, w22, [x21]",
        "eor w20, w22, #0x1",
        "mov x26, x20",
        "tst w20, w20"
      ]
    },
    "lock xor qword [rax], 1": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP1 0x83 /6",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "ldeoral x20, x22, [x21]",
        "eor x20, x22, #0x1",
        "mov x26, x20",
        "tst x20, x20"
      ]
    },
    "lock dec byte [rax]": {
      "ExpectedInstructionCount": 14,
      "Comment": "GROUP3 0xfe /1",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mov w22, #0xff",
        "ldaddalb w22, w23, [x21]",
        "cset w21, hs",
        "mov x27, x23",
        "lsl w0, w23, #24",
        "cmp w0, w20, lsl #24",
        "sub w20, w23, #0x1 (1)",
        "mov x26, x20",
        "mrs x20, nzcv",
        "mov w22, w20",
        "bfi w22, w21, #29, #1",
        "msr nzcv, x22"
      ]
    },
    "lock not byte [rax]": {
      "ExpectedInstructionCount": 3,
      "Comment": "GROUP2 0xf6 /2",
      "ExpectedArm64ASM": [
        "mov w20, #0xff",
        "mov x21, x4",
        "steorlb w20, [x21]"
      ]
    },
    "lock not word [rax]": {
      "ExpectedInstructionCount": 3,
      "Comment": "GROUP2 0xf7 /2",
      "ExpectedArm64ASM": [
        "mov w20, #0xffff",
        "mov x21, x4",
        "steorlh w20, [x21]"
      ]
    },
    "lock not dword [rax]": {
      "ExpectedInstructionCount": 3,
      "Comment": "GROUP2 0xf7 /2",
      "ExpectedArm64ASM": [
        "mov w20, #0xffffffff",
        "mov x21, x4",
        "steorl w20, [x21]"
      ]
    },
    "lock not qword [rax]": {
      "ExpectedInstructionCount": 3,
      "Comment": "GROUP2 0xf7 /2",
      "ExpectedArm64ASM": [
        "mov x20, #0xffffffffffffffff",
        "mov x21, x4",
        "steorl x20, [x21]"
      ]
    },
    "lock neg byte [rax]": {
      "ExpectedInstructionCount": 13,
      "Comment": "GROUP2 0xf6 /3",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldaxrb w1, [x20]",
        "neg w2, w1",
        "stlxrb w3, w2, [x20]",
        "cbnz w3, #-0xc",
        "mov w21, w1",
        "mov x27, x21",
        "cmp wzr, w21, lsl #24",
        "neg w20, w21",
        "mov x26, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "lock neg word [rax]": {
      "ExpectedInstructionCount": 13,
      "Comment": "GROUP2 0xf7 /3",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldaxrh w1, [x20]",
        "neg w2, w1",
        "stlxrh w3, w2, [x20]",
        "cbnz w3, #-0xc",
        "mov w21, w1",
        "mov x27, x21",
        "cmp wzr, w21, lsl #16",
        "neg w20, w21",
        "mov x26, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "lock neg dword [rax]": {
      "ExpectedInstructionCount": 12,
      "Comment": "GROUP2 0xf7 /3",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldaxr w1, [x20]",
        "neg w2, w1",
        "stlxr w3, w2, [x20]",
        "cbnz w3, #-0xc",
        "mov w21, w1",
        "mov x27, x21",
        "negs w20, w21",
        "mov x26, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "lock neg qword [rax]": {
      "ExpectedInstructionCount": 12,
      "Comment": "GROUP2 0xf7 /3",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldaxr x1, [x20]",
        "neg x2, x1",
        "stlxr w3, x2, [x20]",
        "cbnz x3, #-0xc",
        "mov x21, x1",
        "mov x27, x21",
        "negs x20, x21",
        "mov x26, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "lock dec word [rax]": {
      "ExpectedInstructionCount": 14,
      "Comment": "GROUP4 0xfe /1",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mov w22, #0xffff",
        "ldaddalh w22, w23, [x21]",
        "cset w21, hs",
        "mov x27, x23",
        "lsl w0, w23, #16",
        "cmp w0, w20, lsl #16",
        "sub w20, w23, #0x1 (1)",
        "mov x26, x20",
        "mrs x20, nzcv",
        "mov w22, w20",
        "bfi w22, w21, #29, #1",
        "msr nzcv, x22"
      ]
    },
    "lock dec dword [rax]": {
      "ExpectedInstructionCount": 11,
      "Comment": "GROUP4 0xfe /1",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov w21, #0xffffffff",
        "ldaddal w21, w22, [x20]",
        "cset w20, hs",
        "mov x27, x22",
        "subs w21, w22, #0x1 (1)",
        "mov x26, x21",
        "mrs x21, nzcv",
        "mov w22, w21",
        "bfi w22, w20, #29, #1",
        "msr nzcv, x22"
      ]
    },
    "lock dec qword [rax]": {
      "ExpectedInstructionCount": 11,
      "Comment": "GROUP4 0xfe /1",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, #0xffffffffffffffff",
        "ldaddal x21, x22, [x20]",
        "cset w20, hs",
        "mov x27, x22",
        "subs x21, x22, #0x1 (1)",
        "mov x26, x21",
        "mrs x21, nzcv",
        "mov w22, w21",
        "bfi w22, w20, #29, #1",
        "msr nzcv, x22"
      ]
    },
    "lock inc byte [rax]": {
      "ExpectedInstructionCount": 13,
      "Comment": "GROUP4 0xfe /0",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "ldaddalb w20, w22, [x21]",
        "cset w21, hs",
        "mov x27, x22",
        "lsl w0, w22, #24",
        "cmn w0, w20, lsl #24",
        "add w20, w22, #0x1 (1)",
        "mov x26, x20",
        "mrs x20, nzcv",
        "mov w22, w20",
        "bfi w22, w21, #29, #1",
        "msr nzcv, x22"
      ]
    },
    "lock inc word [rax]": {
      "ExpectedInstructionCount": 13,
      "Comment": "GROUP4 0xfe /0",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "ldaddalh w20, w22, [x21]",
        "cset w21, hs",
        "mov x27, x22",
        "lsl w0, w22, #16",
        "cmn w0, w20, lsl #16",
        "add w20, w22, #0x1 (1)",
        "mov x26, x20",
        "mrs x20, nzcv",
        "mov w22, w20",
        "bfi w22, w21, #29, #1",
        "msr nzcv, x22"
      ]
    },
    "lock inc dword [rax]": {
      "ExpectedInstructionCount": 11,
      "Comment": "GROUP4 0xfe /0",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "ldaddal w20, w22, [x21]",
        "cset w20, hs",
        "mov x27, x22",
        "adds w21, w22, #0x1 (1)",
        "mov x26, x21",
        "mrs x21, nzcv",
        "mov w22, w21",
        "bfi w22, w20, #29, #1",
        "msr nzcv, x22"
      ]
    },
    "lock inc qword [rax]": {
      "ExpectedInstructionCount": 11,
      "Comment": "GROUP4 0xfe /0",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "ldaddal x20, x22, [x21]",
        "cset w20, hs",
        "mov x27, x22",
        "adds x21, x22, #0x1 (1)",
        "mov x26, x21",
        "mrs x21, nzcv",
        "mov w22, w21",
        "bfi w22, w20, #29, #1",
        "msr nzcv, x22"
      ]
    }
  }
}
