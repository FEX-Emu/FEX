{
  "Features": {
    "Bitness": 64,
    "EnabledHostFeatures": [
      "SVE128",
      "SVE256"
    ],
    "DisabledHostFeatures": [
      "AFP",
      "FLAGM",
      "FLAGM2",
      "RPRES"
    ]
  },
  "Instructions": {
    "fstp tword [rax]": {
      "ExpectedInstructionCount": 12,
      "Comment": "Single 80-bit store.",
      "ExpectedArm64ASM": [
        "ldrb w20, [x28, #1019]",
        "add x0, x28, x20, lsl #4",
        "ldr q2, [x0, #1040]",
        "st1h {z2.h}, p2, [x4]",
        "ldrb w21, [x28, #1298]",
        "mov w22, #0x1",
        "lsl w23, w22, w20",
        "bic w24, w21, w23",
        "strb w24, [x28, #1298]",
        "add w25, w20, #0x1 (1)",
        "and w30, w25, #0x7",
        "strb w30, [x28, #1019]"
      ]
    },
    "2-store 80bit": {
      "x86InstructionCount": 2,
      "ExpectedInstructionCount": 23,
      "x86Insts": [
        "fstp tword [rax]",
        "fstp tword [rax+10]"
      ],
      "ExpectedArm64ASM": [
        "ldrb w20, [x28, #1019]",
        "add x0, x28, x20, lsl #4",
        "ldr q2, [x0, #1040]",
        "st1h {z2.h}, p2, [x4]",
        "ldrb w21, [x28, #1298]",
        "mov w22, #0x1",
        "lsl w23, w22, w20",
        "bic w24, w21, w23",
        "strb w24, [x28, #1298]",
        "add w25, w20, #0x1 (1)",
        "and w30, w25, #0x7",
        "strb w30, [x28, #1019]",
        "add x0, x28, x30, lsl #4",
        "ldr q3, [x0, #1040]",
        "add x18, x4, #0xa (10)",
        "st1h {z3.h}, p2, [x18]",
        "ldrb w20, [x28, #1298]",
        "lsl w21, w22, w30",
        "bic w22, w20, w21",
        "strb w22, [x28, #1298]",
        "add w23, w30, #0x1 (1)",
        "and w24, w23, #0x7",
        "strb w24, [x28, #1019]"
      ]
    },
    "8-store 80bit": {
      "x86InstructionCount": 8,
      "ExpectedInstructionCount": 89,
      "x86Insts": [
        "fstp tword [rax]",
        "fstp tword [rax+10]",
        "fstp tword [rax+20]",
        "fstp tword [rax+30]",
        "fstp tword [rax+40]",
        "fstp tword [rax+50]",
        "fstp tword [rax+60]",
        "fstp tword [rax+70]"
      ],
      "ExpectedArm64ASM": [
        "ldrb w20, [x28, #1019]",
        "add x0, x28, x20, lsl #4",
        "ldr q2, [x0, #1040]",
        "st1h {z2.h}, p2, [x4]",
        "ldrb w21, [x28, #1298]",
        "mov w22, #0x1",
        "lsl w23, w22, w20",
        "bic w24, w21, w23",
        "strb w24, [x28, #1298]",
        "add w25, w20, #0x1 (1)",
        "and w30, w25, #0x7",
        "strb w30, [x28, #1019]",
        "add x0, x28, x30, lsl #4",
        "ldr q3, [x0, #1040]",
        "add x18, x4, #0xa (10)",
        "st1h {z3.h}, p2, [x18]",
        "ldrb w20, [x28, #1298]",
        "lsl w21, w22, w30",
        "bic w23, w20, w21",
        "strb w23, [x28, #1298]",
        "add w24, w30, #0x1 (1)",
        "and w25, w24, #0x7",
        "strb w25, [x28, #1019]",
        "add x0, x28, x25, lsl #4",
        "ldr q4, [x0, #1040]",
        "add x30, x4, #0x14 (20)",
        "st1h {z4.h}, p2, [x30]",
        "ldrb w18, [x28, #1298]",
        "lsl w20, w22, w25",
        "bic w21, w18, w20",
        "strb w21, [x28, #1298]",
        "add w23, w25, #0x1 (1)",
        "and w24, w23, #0x7",
        "strb w24, [x28, #1019]",
        "add x0, x28, x24, lsl #4",
        "ldr q5, [x0, #1040]",
        "add x25, x4, #0x1e (30)",
        "st1h {z5.h}, p2, [x25]",
        "ldrb w30, [x28, #1298]",
        "lsl w18, w22, w24",
        "bic w20, w30, w18",
        "strb w20, [x28, #1298]",
        "add w21, w24, #0x1 (1)",
        "and w23, w21, #0x7",
        "strb w23, [x28, #1019]",
        "add x0, x28, x23, lsl #4",
        "ldr q6, [x0, #1040]",
        "add x24, x4, #0x28 (40)",
        "st1h {z6.h}, p2, [x24]",
        "ldrb w25, [x28, #1298]",
        "lsl w30, w22, w23",
        "bic w18, w25, w30",
        "strb w18, [x28, #1298]",
        "add w20, w23, #0x1 (1)",
        "and w21, w20, #0x7",
        "strb w21, [x28, #1019]",
        "add x0, x28, x21, lsl #4",
        "ldr q7, [x0, #1040]",
        "add x23, x4, #0x32 (50)",
        "st1h {z7.h}, p2, [x23]",
        "ldrb w24, [x28, #1298]",
        "lsl w25, w22, w21",
        "bic w30, w24, w25",
        "strb w30, [x28, #1298]",
        "add w18, w21, #0x1 (1)",
        "and w20, w18, #0x7",
        "strb w20, [x28, #1019]",
        "add x0, x28, x20, lsl #4",
        "ldr q8, [x0, #1040]",
        "add x21, x4, #0x3c (60)",
        "st1h {z8.h}, p2, [x21]",
        "ldrb w23, [x28, #1298]",
        "lsl w24, w22, w20",
        "bic w25, w23, w24",
        "strb w25, [x28, #1298]",
        "add w30, w20, #0x1 (1)",
        "and w18, w30, #0x7",
        "strb w18, [x28, #1019]",
        "add x0, x28, x18, lsl #4",
        "ldr q9, [x0, #1040]",
        "add x20, x4, #0x46 (70)",
        "st1h {z9.h}, p2, [x20]",
        "ldrb w21, [x28, #1298]",
        "lsl w22, w22, w18",
        "bic w23, w21, w22",
        "strb w23, [x28, #1298]",
        "add w24, w18, #0x1 (1)",
        "and w25, w24, #0x7",
        "strb w25, [x28, #1019]"
      ]
    },
    "fld tword [rax]": {
      "ExpectedInstructionCount": 12,
      "Comment": "Single 80-bit store.",
      "ExpectedArm64ASM": [
        "ld1h {z2.h}, p2/z, [x4]",
        "ldrb w20, [x28, #1019]",
        "mov w21, #0x1",
        "sub w22, w20, #0x1 (1)",
        "and w23, w22, #0x7",
        "strb w23, [x28, #1019]",
        "add x0, x28, x23, lsl #4",
        "str q2, [x0, #1040]",
        "ldrb w24, [x28, #1298]",
        "lsl w25, w21, w23",
        "orr w30, w24, w25",
        "strb w30, [x28, #1298]"
      ]
    },
    "2-load 80bit": {
      "x86InstructionCount": 2,
      "ExpectedInstructionCount": 20,
      "x86Insts": [
        "fld tword [rax]",
        "fld tword [rax+10]"
      ],
      "ExpectedArm64ASM": [
        "ld1h {z2.h}, p2/z, [x4]",
        "add x20, x4, #0xa (10)",
        "ld1h {z3.h}, p2/z, [x20]",
        "ldrb w21, [x28, #1019]",
        "sub w22, w21, #0x2 (2)",
        "and w23, w22, #0x7",
        "strb w23, [x28, #1019]",
        "add x0, x28, x23, lsl #4",
        "str q3, [x0, #1040]",
        "add w24, w23, #0x1 (1)",
        "and w25, w24, #0x7",
        "add x0, x28, x25, lsl #4",
        "str q2, [x0, #1040]",
        "mov w30, #0x8",
        "sub w18, w30, w23",
        "ldrb w20, [x28, #1298]",
        "mov w21, #0x303",
        "lsr w22, w21, w18",
        "orr w23, w20, w22",
        "strb w23, [x28, #1298]"
      ]
    },
    "8-load 80bit": {
      "x86InstructionCount": 8,
      "ExpectedInstructionCount": 51,
      "x86Insts": [
        "fld tword [rax]",
        "fld tword [rax+10]",
        "fld tword [rax+20]",
        "fld tword [rax+30]",
        "fld tword [rax+40]",
        "fld tword [rax+50]",
        "fld tword [rax+60]",
        "fld tword [rax+70]"
      ],
      "ExpectedArm64ASM": [
        "ld1h {z2.h}, p2/z, [x4]",
        "add x20, x4, #0xa (10)",
        "ld1h {z3.h}, p2/z, [x20]",
        "add x21, x4, #0x14 (20)",
        "ld1h {z4.h}, p2/z, [x21]",
        "add x22, x4, #0x1e (30)",
        "ld1h {z5.h}, p2/z, [x22]",
        "add x23, x4, #0x28 (40)",
        "ld1h {z6.h}, p2/z, [x23]",
        "add x24, x4, #0x32 (50)",
        "ld1h {z7.h}, p2/z, [x24]",
        "add x25, x4, #0x3c (60)",
        "ld1h {z8.h}, p2/z, [x25]",
        "add x30, x4, #0x46 (70)",
        "ld1h {z9.h}, p2/z, [x30]",
        "ldrb w18, [x28, #1019]",
        "sub w20, w18, #0x8 (8)",
        "and w21, w20, #0x7",
        "strb w21, [x28, #1019]",
        "add x0, x28, x21, lsl #4",
        "str q9, [x0, #1040]",
        "add w22, w21, #0x1 (1)",
        "and w23, w22, #0x7",
        "add x0, x28, x23, lsl #4",
        "str q8, [x0, #1040]",
        "add w24, w21, #0x2 (2)",
        "and w25, w24, #0x7",
        "add x0, x28, x25, lsl #4",
        "str q7, [x0, #1040]",
        "add w30, w21, #0x3 (3)",
        "and w18, w30, #0x7",
        "add x0, x28, x18, lsl #4",
        "str q6, [x0, #1040]",
        "add w20, w21, #0x4 (4)",
        "and w22, w20, #0x7",
        "add x0, x28, x22, lsl #4",
        "str q5, [x0, #1040]",
        "add w23, w21, #0x5 (5)",
        "and w24, w23, #0x7",
        "add x0, x28, x24, lsl #4",
        "str q4, [x0, #1040]",
        "add w25, w21, #0x6 (6)",
        "and w30, w25, #0x7",
        "add x0, x28, x30, lsl #4",
        "str q3, [x0, #1040]",
        "add w18, w21, #0x7 (7)",
        "and w20, w18, #0x7",
        "add x0, x28, x20, lsl #4",
        "str q2, [x0, #1040]",
        "mov w21, #0xff",
        "strb w21, [x28, #1298]"
      ]
    }
  }
}
