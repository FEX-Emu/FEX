{
  "Features": {
    "Bitness": 64,
    "EnabledHostFeatures": [],
    "DisabledHostFeatures": [
      "SVE128",
      "SVE256",
      "FLAGM",
      "FLAGM2"
    ]
  },
  "Instructions": {
    "add bl, cl": {
      "ExpectedInstructionCount": 11,
      "Comment": "0x00",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #24",
        "cmn w0, w20, lsl #24",
        "add w22, w21, w20",
        "mov x26, x22",
        "mov x20, x21",
        "bfxil x20, x22, #0, #8",
        "mov x7, x20"
      ]
    },
    "add bx, cx": {
      "ExpectedInstructionCount": 11,
      "Comment": "0x01",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #16",
        "cmn w0, w20, lsl #16",
        "add w22, w21, w20",
        "mov x26, x22",
        "mov x20, x21",
        "bfxil x20, x22, #0, #16",
        "mov x7, x20"
      ]
    },
    "add ebx, ecx": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x01",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "adds w22, w21, w20",
        "mov x26, x22",
        "mov x7, x22"
      ]
    },
    "add rbx, rcx": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x01",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "adds x22, x21, x20",
        "mov x26, x22",
        "mov x7, x22"
      ]
    },
    "db 0x02, 0xcb": {
      "ExpectedInstructionCount": 11,
      "Comment": [
        "0x02",
        "add bl, cl but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #24",
        "cmn w0, w20, lsl #24",
        "add w22, w21, w20",
        "mov x26, x22",
        "mov x20, x21",
        "bfxil x20, x22, #0, #8",
        "mov x5, x20"
      ]
    },
    "db 0x66, 0x03, 0xcb": {
      "ExpectedInstructionCount": 11,
      "Comment": [
        "0x03",
        "add bx, cx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #16",
        "cmn w0, w20, lsl #16",
        "add w22, w21, w20",
        "mov x26, x22",
        "mov x20, x21",
        "bfxil x20, x22, #0, #16",
        "mov x5, x20"
      ]
    },
    "db 0x03, 0xcb": {
      "ExpectedInstructionCount": 7,
      "Comment": [
        "0x03",
        "add ebx, ecx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "adds w22, w21, w20",
        "mov x26, x22",
        "mov x5, x22"
      ]
    },
    "db 0x48, 0x03, 0xcb": {
      "ExpectedInstructionCount": 7,
      "Comment": [
        "0x03",
        "add rbx, rcx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "adds x22, x21, x20",
        "mov x26, x22",
        "mov x5, x22"
      ]
    },
    "add al, 1": {
      "ExpectedInstructionCount": 10,
      "Comment": "0x04",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mov x27, x21",
        "lsl w0, w21, #24",
        "cmn w0, w20, lsl #24",
        "add w20, w21, #0x1 (1)",
        "mov x26, x20",
        "mov x22, x21",
        "bfxil x22, x20, #0, #8",
        "mov x4, x22"
      ]
    },
    "add ax, 1": {
      "ExpectedInstructionCount": 10,
      "Comment": "0x05",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mov x27, x21",
        "lsl w0, w21, #16",
        "cmn w0, w20, lsl #16",
        "add w20, w21, #0x1 (1)",
        "mov x26, x20",
        "mov x22, x21",
        "bfxil x22, x20, #0, #16",
        "mov x4, x22"
      ]
    },
    "add eax, 1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x05",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x27, x20",
        "adds w21, w20, #0x1 (1)",
        "mov x26, x21",
        "mov x4, x21"
      ]
    },
    "add rax, 1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x05",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x27, x20",
        "adds x21, x20, #0x1 (1)",
        "mov x26, x21",
        "mov x4, x21"
      ]
    },
    "add al, -1": {
      "ExpectedInstructionCount": 11,
      "Comment": "0x04",
      "ExpectedArm64ASM": [
        "mov w20, #0xff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "lsl w0, w21, #24",
        "cmn w0, w20, lsl #24",
        "add w20, w21, #0xff (255)",
        "mov x26, x20",
        "mov x22, x21",
        "bfxil x22, x20, #0, #8",
        "mov x4, x22"
      ]
    },
    "add ax, -1": {
      "ExpectedInstructionCount": 11,
      "Comment": "0x05",
      "ExpectedArm64ASM": [
        "mov w20, #0xffff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "lsl w0, w21, #16",
        "cmn w0, w20, lsl #16",
        "add w22, w21, w20",
        "mov x26, x22",
        "mov x20, x21",
        "bfxil x20, x22, #0, #16",
        "mov x4, x20"
      ]
    },
    "add eax, -1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x05",
      "ExpectedArm64ASM": [
        "mov w20, #0xffffffff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "adds w22, w21, w20",
        "mov x26, x22",
        "mov x4, x22"
      ]
    },
    "add rax, -1": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x05",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mvn w21, w20",
        "mov x27, x21",
        "subs x21, x20, #0x1 (1)",
        "mov x26, x21",
        "mov x4, x21"
      ]
    },
    "or bl, bh": {
      "ExpectedInstructionCount": 8,
      "Comment": "",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "lsr w21, w20, #8",
        "orr w22, w20, w21",
        "mov x21, x20",
        "bfxil x21, x22, #0, #8",
        "mov x7, x21",
        "mov x26, x22",
        "cmn wzr, w22, lsl #24"
      ]
    },
    "or bl, cl": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x08",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "orr w22, w21, w20",
        "mov x20, x21",
        "bfxil x20, x22, #0, #8",
        "mov x7, x20",
        "mov x26, x22",
        "cmn wzr, w22, lsl #24"
      ]
    },
    "or bx, cx": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x09",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "orr w22, w21, w20",
        "mov x20, x21",
        "bfxil x20, x22, #0, #16",
        "mov x7, x20",
        "mov x26, x22",
        "cmn wzr, w22, lsl #16"
      ]
    },
    "or ebx, ecx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x09",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "orr w22, w21, w20",
        "mov x7, x22",
        "mov x26, x22",
        "tst w22, w22"
      ]
    },
    "or rbx, rcx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x09",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "orr x22, x21, x20",
        "mov x7, x22",
        "mov x26, x22",
        "tst x22, x22"
      ]
    },
    "db 0x0A, 0xcb": {
      "ExpectedInstructionCount": 8,
      "Comment": [
        "0x0A",
        "or bl, cl but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "orr w22, w21, w20",
        "mov x20, x21",
        "bfxil x20, x22, #0, #8",
        "mov x5, x20",
        "mov x26, x22",
        "cmn wzr, w22, lsl #24"
      ]
    },
    "db 0x66, 0x0B, 0xcb": {
      "ExpectedInstructionCount": 8,
      "Comment": [
        "0x0B",
        "or bx, cx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "orr w22, w21, w20",
        "mov x20, x21",
        "bfxil x20, x22, #0, #16",
        "mov x5, x20",
        "mov x26, x22",
        "cmn wzr, w22, lsl #16"
      ]
    },
    "db 0x0B, 0xcb": {
      "ExpectedInstructionCount": 6,
      "Comment": [
        "0x0B",
        "or ebx, ecx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "orr w22, w21, w20",
        "mov x5, x22",
        "mov x26, x22",
        "tst w22, w22"
      ]
    },
    "db 0x48, 0x0B, 0xcb": {
      "ExpectedInstructionCount": 6,
      "Comment": [
        "0x0B",
        "or rbx, rcx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "orr x22, x21, x20",
        "mov x5, x22",
        "mov x26, x22",
        "tst x22, x22"
      ]
    },
    "or al, 1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x0C",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "orr w21, w20, #0x1",
        "mov x22, x20",
        "bfxil x22, x21, #0, #8",
        "mov x4, x22",
        "mov x26, x21",
        "cmn wzr, w21, lsl #24"
      ]
    },
    "or ax, 1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x0D",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "orr w21, w20, #0x1",
        "mov x22, x20",
        "bfxil x22, x21, #0, #16",
        "mov x4, x22",
        "mov x26, x21",
        "cmn wzr, w21, lsl #16"
      ]
    },
    "or eax, 1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0D",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "orr w21, w20, #0x1",
        "mov x4, x21",
        "mov x26, x21",
        "tst w21, w21"
      ]
    },
    "or rax, 1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0D",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "orr x21, x20, #0x1",
        "mov x4, x21",
        "mov x26, x21",
        "tst x21, x21"
      ]
    },
    "or al, -1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x0C",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "orr w21, w20, #0xff",
        "mov x22, x20",
        "bfxil x22, x21, #0, #8",
        "mov x4, x22",
        "mov x26, x21",
        "cmn wzr, w21, lsl #24"
      ]
    },
    "or ax, -1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x0D",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "orr w21, w20, #0xffff",
        "mov x22, x20",
        "bfxil x22, x21, #0, #16",
        "mov x4, x22",
        "mov x26, x21",
        "cmn wzr, w21, lsl #16"
      ]
    },
    "or eax, -1": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x0D",
      "ExpectedArm64ASM": [
        "mov w20, #0xffffffff",
        "mov x21, x4",
        "orr w22, w21, w20",
        "mov x4, x22",
        "mov x26, x22",
        "tst w22, w22"
      ]
    },
    "or rax, -1": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x0D",
      "ExpectedArm64ASM": [
        "mov x20, #0xffffffffffffffff",
        "mov x21, x4",
        "orr x22, x21, x20",
        "mov x4, x22",
        "mov x26, x22",
        "tst x22, x22"
      ]
    },
    "adc bl, cl": {
      "ExpectedInstructionCount": 26,
      "Comment": "0x10",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "cset w22, hs",
        "adc w23, w21, w20",
        "uxtb w24, w23",
        "cmp x24, x20",
        "cset x23, lo",
        "cmp x24, x20",
        "cset x25, ls",
        "cmp x22, #0x1 (1)",
        "csel x30, x25, x23, eq",
        "cmn wzr, w24, lsl #24",
        "mrs x22, nzcv",
        "orr w23, w22, w30, lsl #29",
        "eor w22, w21, w20",
        "eor w20, w24, w21",
        "bic w25, w20, w22",
        "ubfx x20, x25, #7, #1",
        "orr w22, w23, w20, lsl #28",
        "mov x26, x24",
        "mov x20, x21",
        "bfxil x20, x24, #0, #8",
        "mov x7, x20",
        "msr nzcv, x22"
      ]
    },
    "adc bx, cx": {
      "ExpectedInstructionCount": 26,
      "Comment": "0x11",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "cset w22, hs",
        "adc w23, w21, w20",
        "uxth w24, w23",
        "cmp x24, x20",
        "cset x23, lo",
        "cmp x24, x20",
        "cset x25, ls",
        "cmp x22, #0x1 (1)",
        "csel x30, x25, x23, eq",
        "cmn wzr, w24, lsl #16",
        "mrs x22, nzcv",
        "orr w23, w22, w30, lsl #29",
        "eor w22, w21, w20",
        "eor w20, w24, w21",
        "bic w25, w20, w22",
        "ubfx x20, x25, #15, #1",
        "orr w22, w23, w20, lsl #28",
        "mov x26, x24",
        "mov x20, x21",
        "bfxil x20, x24, #0, #16",
        "mov x7, x20",
        "msr nzcv, x22"
      ]
    },
    "adc ebx, ecx": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x11",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "adcs w22, w21, w20",
        "mov x26, x22",
        "mov x7, x22"
      ]
    },
    "adc rbx, rcx": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x11",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "adcs x22, x21, x20",
        "mov x26, x22",
        "mov x7, x22"
      ]
    },
    "db 0x12, 0xcb": {
      "ExpectedInstructionCount": 26,
      "Comment": [
        "0x12",
        "adc bl, cl but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "cset w22, hs",
        "adc w23, w21, w20",
        "uxtb w24, w23",
        "cmp x24, x20",
        "cset x23, lo",
        "cmp x24, x20",
        "cset x25, ls",
        "cmp x22, #0x1 (1)",
        "csel x30, x25, x23, eq",
        "cmn wzr, w24, lsl #24",
        "mrs x22, nzcv",
        "orr w23, w22, w30, lsl #29",
        "eor w22, w21, w20",
        "eor w20, w24, w21",
        "bic w25, w20, w22",
        "ubfx x20, x25, #7, #1",
        "orr w22, w23, w20, lsl #28",
        "mov x26, x24",
        "mov x20, x21",
        "bfxil x20, x24, #0, #8",
        "mov x5, x20",
        "msr nzcv, x22"
      ]
    },
    "db 0x66, 0x13, 0xcb": {
      "ExpectedInstructionCount": 26,
      "Comment": [
        "0x13",
        "adc bx, cx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "cset w22, hs",
        "adc w23, w21, w20",
        "uxth w24, w23",
        "cmp x24, x20",
        "cset x23, lo",
        "cmp x24, x20",
        "cset x25, ls",
        "cmp x22, #0x1 (1)",
        "csel x30, x25, x23, eq",
        "cmn wzr, w24, lsl #16",
        "mrs x22, nzcv",
        "orr w23, w22, w30, lsl #29",
        "eor w22, w21, w20",
        "eor w20, w24, w21",
        "bic w25, w20, w22",
        "ubfx x20, x25, #15, #1",
        "orr w22, w23, w20, lsl #28",
        "mov x26, x24",
        "mov x20, x21",
        "bfxil x20, x24, #0, #16",
        "mov x5, x20",
        "msr nzcv, x22"
      ]
    },
    "db 0x13, 0xcb": {
      "ExpectedInstructionCount": 7,
      "Comment": [
        "0x13",
        "adc ebx, ecx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "adcs w22, w21, w20",
        "mov x26, x22",
        "mov x5, x22"
      ]
    },
    "db 0x48, 0x13, 0xcb": {
      "ExpectedInstructionCount": 7,
      "Comment": [
        "0x13",
        "adc rbx, rcx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "adcs x22, x21, x20",
        "mov x26, x22",
        "mov x5, x22"
      ]
    },
    "adc al, 1": {
      "ExpectedInstructionCount": 23,
      "Comment": "0x14",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mov x27, x21",
        "cset w22, hs",
        "adc w23, w21, w20",
        "uxtb w20, w23",
        "cmp w20, #0x1 (1)",
        "cset x23, lo",
        "cmp w20, #0x1 (1)",
        "cset x24, ls",
        "cmp x22, #0x1 (1)",
        "csel x25, x24, x23, eq",
        "cmn wzr, w20, lsl #24",
        "mrs x22, nzcv",
        "orr w23, w22, w25, lsl #29",
        "bic w22, w20, w21",
        "ubfx x24, x22, #7, #1",
        "orr w22, w23, w24, lsl #28",
        "mov x26, x20",
        "mov x23, x21",
        "bfxil x23, x20, #0, #8",
        "mov x4, x23",
        "msr nzcv, x22"
      ]
    },
    "adc ax, 1": {
      "ExpectedInstructionCount": 23,
      "Comment": "0x15",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mov x27, x21",
        "cset w22, hs",
        "adc w23, w21, w20",
        "uxth w20, w23",
        "cmp w20, #0x1 (1)",
        "cset x23, lo",
        "cmp w20, #0x1 (1)",
        "cset x24, ls",
        "cmp x22, #0x1 (1)",
        "csel x25, x24, x23, eq",
        "cmn wzr, w20, lsl #16",
        "mrs x22, nzcv",
        "orr w23, w22, w25, lsl #29",
        "bic w22, w20, w21",
        "ubfx x24, x22, #15, #1",
        "orr w22, w23, w24, lsl #28",
        "mov x26, x20",
        "mov x23, x21",
        "bfxil x23, x20, #0, #16",
        "mov x4, x23",
        "msr nzcv, x22"
      ]
    },
    "adc eax, 1": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x15",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mov x27, x21",
        "adcs w22, w21, w20",
        "mov x26, x22",
        "mov x4, x22"
      ]
    },
    "adc rax, 1": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x15",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mov x27, x21",
        "adcs x22, x21, x20",
        "mov x26, x22",
        "mov x4, x22"
      ]
    },
    "adc al, -1": {
      "ExpectedInstructionCount": 24,
      "Comment": "0x14",
      "ExpectedArm64ASM": [
        "mov w20, #0xff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "cset w22, hs",
        "adc w23, w21, w20",
        "uxtb w20, w23",
        "cmp w20, #0xff (255)",
        "cset x23, lo",
        "cmp w20, #0xff (255)",
        "cset x24, ls",
        "cmp x22, #0x1 (1)",
        "csel x25, x24, x23, eq",
        "cmn wzr, w20, lsl #24",
        "mrs x22, nzcv",
        "orr w23, w22, w25, lsl #29",
        "bic w22, w21, w20",
        "ubfx x24, x22, #7, #1",
        "orr w22, w23, w24, lsl #28",
        "mov x26, x20",
        "mov x23, x21",
        "bfxil x23, x20, #0, #8",
        "mov x4, x23",
        "msr nzcv, x22"
      ]
    },
    "adc ax, -1": {
      "ExpectedInstructionCount": 24,
      "Comment": "0x15",
      "ExpectedArm64ASM": [
        "mov w20, #0xffff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "cset w22, hs",
        "adc w23, w21, w20",
        "uxth w24, w23",
        "cmp w24, w20",
        "cset x23, lo",
        "cmp w24, w20",
        "cset x25, ls",
        "cmp x22, #0x1 (1)",
        "csel x20, x25, x23, eq",
        "cmn wzr, w24, lsl #16",
        "mrs x22, nzcv",
        "orr w23, w22, w20, lsl #29",
        "bic w20, w21, w24",
        "ubfx x22, x20, #15, #1",
        "orr w20, w23, w22, lsl #28",
        "mov x26, x24",
        "mov x22, x21",
        "bfxil x22, x24, #0, #16",
        "mov x4, x22",
        "msr nzcv, x20"
      ]
    },
    "adc eax, -1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x15",
      "ExpectedArm64ASM": [
        "mov w20, #0xffffffff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "adcs w22, w21, w20",
        "mov x26, x22",
        "mov x4, x22"
      ]
    },
    "adc rax, -1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x15",
      "ExpectedArm64ASM": [
        "mov x20, #0xffffffffffffffff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "adcs x22, x21, x20",
        "mov x26, x22",
        "mov x4, x22"
      ]
    },
    "sbb bl, cl": {
      "ExpectedInstructionCount": 27,
      "Comment": "0x18",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "cset w22, hs",
        "add w23, w20, w22",
        "sub w24, w21, w23",
        "uxtb w23, w24",
        "cmp x23, x21",
        "cset x24, hi",
        "cmp x23, x21",
        "cset x25, hs",
        "cmp x22, #0x1 (1)",
        "csel x30, x25, x24, eq",
        "cmn wzr, w23, lsl #24",
        "mrs x22, nzcv",
        "orr w24, w22, w30, lsl #29",
        "eor w22, w21, w20",
        "eor w20, w23, w21",
        "and w25, w20, w22",
        "ubfx x20, x25, #7, #1",
        "orr w22, w24, w20, lsl #28",
        "mov x26, x23",
        "mov x20, x21",
        "bfxil x20, x23, #0, #8",
        "mov x7, x20",
        "msr nzcv, x22"
      ]
    },
    "sbb bx, cx": {
      "ExpectedInstructionCount": 27,
      "Comment": "0x19",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "cset w22, hs",
        "add w23, w20, w22",
        "sub w24, w21, w23",
        "uxth w23, w24",
        "cmp x23, x21",
        "cset x24, hi",
        "cmp x23, x21",
        "cset x25, hs",
        "cmp x22, #0x1 (1)",
        "csel x30, x25, x24, eq",
        "cmn wzr, w23, lsl #16",
        "mrs x22, nzcv",
        "orr w24, w22, w30, lsl #29",
        "eor w22, w21, w20",
        "eor w20, w23, w21",
        "and w25, w20, w22",
        "ubfx x20, x25, #15, #1",
        "orr w22, w24, w20, lsl #28",
        "mov x26, x23",
        "mov x20, x21",
        "bfxil x20, x23, #0, #16",
        "mov x7, x20",
        "msr nzcv, x22"
      ]
    },
    "sbb ebx, ecx": {
      "ExpectedInstructionCount": 13,
      "Comment": "0x19",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "mrs x22, nzcv",
        "eor w23, w22, #0x20000000",
        "msr nzcv, x23",
        "sbcs w22, w21, w20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "mov x26, x22",
        "mov x7, x22",
        "msr nzcv, x21"
      ]
    },
    "sbb rbx, rcx": {
      "ExpectedInstructionCount": 13,
      "Comment": "0x19",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "mrs x22, nzcv",
        "eor w23, w22, #0x20000000",
        "msr nzcv, x23",
        "sbcs x22, x21, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "mov x26, x22",
        "mov x7, x22",
        "msr nzcv, x21"
      ]
    },
    "db 0x1A, 0xcb": {
      "ExpectedInstructionCount": 27,
      "Comment": [
        "0x1A",
        "sbb bl, cl but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "cset w22, hs",
        "add w23, w20, w22",
        "sub w24, w21, w23",
        "uxtb w23, w24",
        "cmp x23, x21",
        "cset x24, hi",
        "cmp x23, x21",
        "cset x25, hs",
        "cmp x22, #0x1 (1)",
        "csel x30, x25, x24, eq",
        "cmn wzr, w23, lsl #24",
        "mrs x22, nzcv",
        "orr w24, w22, w30, lsl #29",
        "eor w22, w21, w20",
        "eor w20, w23, w21",
        "and w25, w20, w22",
        "ubfx x20, x25, #7, #1",
        "orr w22, w24, w20, lsl #28",
        "mov x26, x23",
        "mov x20, x21",
        "bfxil x20, x23, #0, #8",
        "mov x5, x20",
        "msr nzcv, x22"
      ]
    },
    "db 0x66, 0x1B, 0xcb": {
      "ExpectedInstructionCount": 27,
      "Comment": [
        "0x1B",
        "sbb bx, cx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "cset w22, hs",
        "add w23, w20, w22",
        "sub w24, w21, w23",
        "uxth w23, w24",
        "cmp x23, x21",
        "cset x24, hi",
        "cmp x23, x21",
        "cset x25, hs",
        "cmp x22, #0x1 (1)",
        "csel x30, x25, x24, eq",
        "cmn wzr, w23, lsl #16",
        "mrs x22, nzcv",
        "orr w24, w22, w30, lsl #29",
        "eor w22, w21, w20",
        "eor w20, w23, w21",
        "and w25, w20, w22",
        "ubfx x20, x25, #15, #1",
        "orr w22, w24, w20, lsl #28",
        "mov x26, x23",
        "mov x20, x21",
        "bfxil x20, x23, #0, #16",
        "mov x5, x20",
        "msr nzcv, x22"
      ]
    },
    "db 0x1B, 0xcb": {
      "ExpectedInstructionCount": 13,
      "Comment": [
        "0x1B",
        "sbb ebx, ecx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "mrs x22, nzcv",
        "eor w23, w22, #0x20000000",
        "msr nzcv, x23",
        "sbcs w22, w21, w20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "mov x26, x22",
        "mov x5, x22",
        "msr nzcv, x21"
      ]
    },
    "db 0x48, 0x1B, 0xcb": {
      "ExpectedInstructionCount": 13,
      "Comment": [
        "0x1B",
        "sbb rbx, rcx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "mrs x22, nzcv",
        "eor w23, w22, #0x20000000",
        "msr nzcv, x23",
        "sbcs x22, x21, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "mov x26, x22",
        "mov x5, x22",
        "msr nzcv, x21"
      ]
    },
    "sbb al, 1": {
      "ExpectedInstructionCount": 24,
      "Comment": "0x1C",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mov x27, x21",
        "cset w22, hs",
        "add w23, w20, w22",
        "sub w20, w21, w23",
        "uxtb w23, w20",
        "cmp x23, x21",
        "cset x20, hi",
        "cmp x23, x21",
        "cset x24, hs",
        "cmp x22, #0x1 (1)",
        "csel x25, x24, x20, eq",
        "cmn wzr, w23, lsl #24",
        "mrs x20, nzcv",
        "orr w22, w20, w25, lsl #29",
        "bic w20, w21, w23",
        "ubfx x24, x20, #7, #1",
        "orr w20, w22, w24, lsl #28",
        "mov x26, x23",
        "mov x22, x21",
        "bfxil x22, x23, #0, #8",
        "mov x4, x22",
        "msr nzcv, x20"
      ]
    },
    "sbb ax, 1": {
      "ExpectedInstructionCount": 24,
      "Comment": "0x1D",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mov x27, x21",
        "cset w22, hs",
        "add w23, w20, w22",
        "sub w20, w21, w23",
        "uxth w23, w20",
        "cmp x23, x21",
        "cset x20, hi",
        "cmp x23, x21",
        "cset x24, hs",
        "cmp x22, #0x1 (1)",
        "csel x25, x24, x20, eq",
        "cmn wzr, w23, lsl #16",
        "mrs x20, nzcv",
        "orr w22, w20, w25, lsl #29",
        "bic w20, w21, w23",
        "ubfx x24, x20, #15, #1",
        "orr w20, w22, w24, lsl #28",
        "mov x26, x23",
        "mov x22, x21",
        "bfxil x22, x23, #0, #16",
        "mov x4, x22",
        "msr nzcv, x20"
      ]
    },
    "sbb eax, 1": {
      "ExpectedInstructionCount": 12,
      "Comment": "0x1D",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mov x27, x21",
        "mrs x22, nzcv",
        "eor w23, w22, #0x20000000",
        "msr nzcv, x23",
        "sbcs w22, w21, w20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "mov x26, x22",
        "mov x4, x22",
        "msr nzcv, x21"
      ]
    },
    "sbb rax, 1": {
      "ExpectedInstructionCount": 12,
      "Comment": "0x1D",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mov x27, x21",
        "mrs x22, nzcv",
        "eor w23, w22, #0x20000000",
        "msr nzcv, x23",
        "sbcs x22, x21, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "mov x26, x22",
        "mov x4, x22",
        "msr nzcv, x21"
      ]
    },
    "sbb al, -1": {
      "ExpectedInstructionCount": 25,
      "Comment": "0x1C",
      "ExpectedArm64ASM": [
        "mov w20, #0xff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "cset w22, hs",
        "add w23, w20, w22",
        "sub w20, w21, w23",
        "uxtb w23, w20",
        "cmp x23, x21",
        "cset x20, hi",
        "cmp x23, x21",
        "cset x24, hs",
        "cmp x22, #0x1 (1)",
        "csel x25, x24, x20, eq",
        "cmn wzr, w23, lsl #24",
        "mrs x20, nzcv",
        "orr w22, w20, w25, lsl #29",
        "bic w20, w23, w21",
        "ubfx x24, x20, #7, #1",
        "orr w20, w22, w24, lsl #28",
        "mov x26, x23",
        "mov x22, x21",
        "bfxil x22, x23, #0, #8",
        "mov x4, x22",
        "msr nzcv, x20"
      ]
    },
    "sbb ax, -1": {
      "ExpectedInstructionCount": 25,
      "Comment": "0x1D",
      "ExpectedArm64ASM": [
        "mov w20, #0xffff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "cset w22, hs",
        "add w23, w20, w22",
        "sub w20, w21, w23",
        "uxth w23, w20",
        "cmp x23, x21",
        "cset x20, hi",
        "cmp x23, x21",
        "cset x24, hs",
        "cmp x22, #0x1 (1)",
        "csel x25, x24, x20, eq",
        "cmn wzr, w23, lsl #16",
        "mrs x20, nzcv",
        "orr w22, w20, w25, lsl #29",
        "bic w20, w23, w21",
        "ubfx x24, x20, #15, #1",
        "orr w20, w22, w24, lsl #28",
        "mov x26, x23",
        "mov x22, x21",
        "bfxil x22, x23, #0, #16",
        "mov x4, x22",
        "msr nzcv, x20"
      ]
    },
    "sbb eax, -1": {
      "ExpectedInstructionCount": 13,
      "Comment": "0x1D",
      "ExpectedArm64ASM": [
        "mov w20, #0xffffffff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "mrs x22, nzcv",
        "eor w23, w22, #0x20000000",
        "msr nzcv, x23",
        "sbcs w22, w21, w20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "mov x26, x22",
        "mov x4, x22",
        "msr nzcv, x21"
      ]
    },
    "sbb rax, -1": {
      "ExpectedInstructionCount": 13,
      "Comment": "0x1D",
      "ExpectedArm64ASM": [
        "mov x20, #0xffffffffffffffff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "mrs x22, nzcv",
        "eor w23, w22, #0x20000000",
        "msr nzcv, x23",
        "sbcs x22, x21, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "mov x26, x22",
        "mov x4, x22",
        "msr nzcv, x21"
      ]
    },
    "and bl, cl": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x20",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "and w22, w21, w20",
        "cmn wzr, w22, lsl #24",
        "mov x26, x22",
        "mov x20, x21",
        "bfxil x20, x22, #0, #8",
        "mov x7, x20"
      ]
    },
    "and bx, cx": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x21",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "and w22, w21, w20",
        "cmn wzr, w22, lsl #16",
        "mov x26, x22",
        "mov x20, x21",
        "bfxil x20, x22, #0, #16",
        "mov x7, x20"
      ]
    },
    "and ebx, ecx": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x21",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "ands w22, w21, w20",
        "mov x26, x22",
        "mov x7, x22"
      ]
    },
    "and rbx, rcx": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x21",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "ands x22, x21, x20",
        "mov x26, x22",
        "mov x7, x22"
      ]
    },
    "db 0x22, 0xcb": {
      "ExpectedInstructionCount": 8,
      "Comment": [
        "0x22",
        "and bl, cl but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "and w22, w21, w20",
        "cmn wzr, w22, lsl #24",
        "mov x26, x22",
        "mov x20, x21",
        "bfxil x20, x22, #0, #8",
        "mov x5, x20"
      ]
    },
    "db 0x66, 0x23, 0xcb": {
      "ExpectedInstructionCount": 8,
      "Comment": [
        "0x23",
        "and bx, cx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "and w22, w21, w20",
        "cmn wzr, w22, lsl #16",
        "mov x26, x22",
        "mov x20, x21",
        "bfxil x20, x22, #0, #16",
        "mov x5, x20"
      ]
    },
    "db 0x23, 0xcb": {
      "ExpectedInstructionCount": 5,
      "Comment": [
        "0x23",
        "and ebx, ecx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "ands w22, w21, w20",
        "mov x26, x22",
        "mov x5, x22"
      ]
    },
    "db 0x48, 0x23, 0xcb": {
      "ExpectedInstructionCount": 5,
      "Comment": [
        "0x23",
        "and rbx, rcx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "ands x22, x21, x20",
        "mov x26, x22",
        "mov x5, x22"
      ]
    },
    "and al, 1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x24",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "and w21, w20, #0x1",
        "cmn wzr, w21, lsl #24",
        "mov x26, x21",
        "mov x22, x20",
        "bfxil x22, x21, #0, #8",
        "mov x4, x22"
      ]
    },
    "and ax, 1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x25",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "and w21, w20, #0x1",
        "cmn wzr, w21, lsl #16",
        "mov x26, x21",
        "mov x22, x20",
        "bfxil x22, x21, #0, #16",
        "mov x4, x22"
      ]
    },
    "and eax, 1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x25",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ands w21, w20, #0x1",
        "mov x26, x21",
        "mov x4, x21"
      ]
    },
    "and rax, 1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x25",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ands x21, x20, #0x1",
        "mov x26, x21",
        "mov x4, x21"
      ]
    },
    "and al, -1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x24",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "and w21, w20, #0xff",
        "cmn wzr, w21, lsl #24",
        "mov x26, x21",
        "mov x22, x20",
        "bfxil x22, x21, #0, #8",
        "mov x4, x22"
      ]
    },
    "and ax, -1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x25",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "and w21, w20, #0xffff",
        "cmn wzr, w21, lsl #16",
        "mov x26, x21",
        "mov x22, x20",
        "bfxil x22, x21, #0, #16",
        "mov x4, x22"
      ]
    },
    "and eax, -1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x25",
      "ExpectedArm64ASM": [
        "mov w20, #0xffffffff",
        "mov x21, x4",
        "ands w22, w21, w20",
        "mov x26, x22",
        "mov x4, x22"
      ]
    },
    "and rax, -1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x25",
      "ExpectedArm64ASM": [
        "mov x20, #0xffffffffffffffff",
        "mov x21, x4",
        "ands x22, x21, x20",
        "mov x26, x22",
        "mov x4, x22"
      ]
    },
    "sub bl, cl": {
      "ExpectedInstructionCount": 14,
      "Comment": "0x28",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #24",
        "cmp w0, w20, lsl #24",
        "sub w22, w21, w20",
        "mov x26, x22",
        "mrs x20, nzcv",
        "eor w23, w20, #0x20000000",
        "mov x20, x21",
        "bfxil x20, x22, #0, #8",
        "mov x7, x20",
        "msr nzcv, x23"
      ]
    },
    "sub bx, cx": {
      "ExpectedInstructionCount": 14,
      "Comment": "0x29",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #16",
        "cmp w0, w20, lsl #16",
        "sub w22, w21, w20",
        "mov x26, x22",
        "mrs x20, nzcv",
        "eor w23, w20, #0x20000000",
        "mov x20, x21",
        "bfxil x20, x22, #0, #16",
        "mov x7, x20",
        "msr nzcv, x23"
      ]
    },
    "sub ebx, ecx": {
      "ExpectedInstructionCount": 10,
      "Comment": "0x29",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "subs w22, w21, w20",
        "mov x26, x22",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "mov x7, x22",
        "msr nzcv, x21"
      ]
    },
    "sub rbx, rcx": {
      "ExpectedInstructionCount": 10,
      "Comment": "0x29",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "subs x22, x21, x20",
        "mov x26, x22",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "mov x7, x22",
        "msr nzcv, x21"
      ]
    },
    "db 0x2A, 0xcb": {
      "ExpectedInstructionCount": 14,
      "Comment": [
        "0x2A",
        "sub bl, cl but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #24",
        "cmp w0, w20, lsl #24",
        "sub w22, w21, w20",
        "mov x26, x22",
        "mrs x20, nzcv",
        "eor w23, w20, #0x20000000",
        "mov x20, x21",
        "bfxil x20, x22, #0, #8",
        "mov x5, x20",
        "msr nzcv, x23"
      ]
    },
    "db 0x66, 0x2B, 0xcb": {
      "ExpectedInstructionCount": 14,
      "Comment": [
        "0x2B",
        "sub bx, cx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #16",
        "cmp w0, w20, lsl #16",
        "sub w22, w21, w20",
        "mov x26, x22",
        "mrs x20, nzcv",
        "eor w23, w20, #0x20000000",
        "mov x20, x21",
        "bfxil x20, x22, #0, #16",
        "mov x5, x20",
        "msr nzcv, x23"
      ]
    },
    "db 0x2B, 0xcb": {
      "ExpectedInstructionCount": 10,
      "Comment": [
        "0x2B",
        "sub ebx, ecx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "subs w22, w21, w20",
        "mov x26, x22",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "mov x5, x22",
        "msr nzcv, x21"
      ]
    },
    "db 0x48, 0x2B, 0xcb": {
      "ExpectedInstructionCount": 10,
      "Comment": [
        "0x2B",
        "sub rbx, rcx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "subs x22, x21, x20",
        "mov x26, x22",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "mov x5, x22",
        "msr nzcv, x21"
      ]
    },
    "sub al, 1": {
      "ExpectedInstructionCount": 13,
      "Comment": "0x2C",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mov x27, x21",
        "lsl w0, w21, #24",
        "cmp w0, w20, lsl #24",
        "sub w20, w21, #0x1 (1)",
        "mov x26, x20",
        "mrs x22, nzcv",
        "eor w23, w22, #0x20000000",
        "mov x22, x21",
        "bfxil x22, x20, #0, #8",
        "mov x4, x22",
        "msr nzcv, x23"
      ]
    },
    "sub ax, 1": {
      "ExpectedInstructionCount": 13,
      "Comment": "0x2D",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mov x27, x21",
        "lsl w0, w21, #16",
        "cmp w0, w20, lsl #16",
        "sub w20, w21, #0x1 (1)",
        "mov x26, x20",
        "mrs x22, nzcv",
        "eor w23, w22, #0x20000000",
        "mov x22, x21",
        "bfxil x22, x20, #0, #16",
        "mov x4, x22",
        "msr nzcv, x23"
      ]
    },
    "sub eax, 1": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x2D",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x27, x20",
        "subs w21, w20, #0x1 (1)",
        "mov x26, x21",
        "mrs x20, nzcv",
        "eor w22, w20, #0x20000000",
        "mov x4, x21",
        "msr nzcv, x22"
      ]
    },
    "sub rax, 1": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x2D",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x27, x20",
        "subs x21, x20, #0x1 (1)",
        "mov x26, x21",
        "mrs x20, nzcv",
        "eor w22, w20, #0x20000000",
        "mov x4, x21",
        "msr nzcv, x22"
      ]
    },
    "sub al, -1": {
      "ExpectedInstructionCount": 14,
      "Comment": "0x2C",
      "ExpectedArm64ASM": [
        "mov w20, #0xff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "lsl w0, w21, #24",
        "cmp w0, w20, lsl #24",
        "sub w20, w21, #0xff (255)",
        "mov x26, x20",
        "mrs x22, nzcv",
        "eor w23, w22, #0x20000000",
        "mov x22, x21",
        "bfxil x22, x20, #0, #8",
        "mov x4, x22",
        "msr nzcv, x23"
      ]
    },
    "sub ax, -1": {
      "ExpectedInstructionCount": 14,
      "Comment": "0x2D",
      "ExpectedArm64ASM": [
        "mov w20, #0xffff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "lsl w0, w21, #16",
        "cmp w0, w20, lsl #16",
        "sub w22, w21, w20",
        "mov x26, x22",
        "mrs x20, nzcv",
        "eor w23, w20, #0x20000000",
        "mov x20, x21",
        "bfxil x20, x22, #0, #16",
        "mov x4, x20",
        "msr nzcv, x23"
      ]
    },
    "sub eax, -1": {
      "ExpectedInstructionCount": 10,
      "Comment": "0x2D",
      "ExpectedArm64ASM": [
        "mov w20, #0xffffffff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "subs w22, w21, w20",
        "mov x26, x22",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "mov x4, x22",
        "msr nzcv, x21"
      ]
    },
    "sub rax, -1": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x2D",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mvn w21, w20",
        "mov x27, x21",
        "adds x21, x20, #0x1 (1)",
        "mov x26, x21",
        "mrs x20, nzcv",
        "eor w22, w20, #0x20000000",
        "mov x4, x21",
        "msr nzcv, x22"
      ]
    },
    "xor bl, cl": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x30",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x20, x21",
        "bfxil x20, x22, #0, #8",
        "mov x7, x20",
        "mov x26, x22",
        "cmn wzr, w22, lsl #24"
      ]
    },
    "xor bx, cx": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x31",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x20, x21",
        "bfxil x20, x22, #0, #16",
        "mov x7, x20",
        "mov x26, x22",
        "cmn wzr, w22, lsl #16"
      ]
    },
    "xor ebx, ecx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x31",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x7, x22",
        "mov x26, x22",
        "tst w22, w22"
      ]
    },
    "xor rbx, rcx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x31",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor x22, x21, x20",
        "mov x7, x22",
        "mov x26, x22",
        "tst x22, x22"
      ]
    },
    "db 0x32, 0xcb": {
      "ExpectedInstructionCount": 8,
      "Comment": [
        "0x32",
        "xor bl, cl but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x20, x21",
        "bfxil x20, x22, #0, #8",
        "mov x5, x20",
        "mov x26, x22",
        "cmn wzr, w22, lsl #24"
      ]
    },
    "db 0x66, 0x33, 0xcb": {
      "ExpectedInstructionCount": 8,
      "Comment": [
        "0x33",
        "xor bx, cx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x20, x21",
        "bfxil x20, x22, #0, #16",
        "mov x5, x20",
        "mov x26, x22",
        "cmn wzr, w22, lsl #16"
      ]
    },
    "db 0x33, 0xcb": {
      "ExpectedInstructionCount": 6,
      "Comment": [
        "0x33",
        "xor ebx, ecx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x5, x22",
        "mov x26, x22",
        "tst w22, w22"
      ]
    },
    "db 0x48, 0x33, 0xcb": {
      "ExpectedInstructionCount": 6,
      "Comment": [
        "0x33",
        "xor rbx, rcx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor x22, x21, x20",
        "mov x5, x22",
        "mov x26, x22",
        "tst x22, x22"
      ]
    },
    "xor al, 1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x34",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "eor w21, w20, #0x1",
        "mov x22, x20",
        "bfxil x22, x21, #0, #8",
        "mov x4, x22",
        "mov x26, x21",
        "cmn wzr, w21, lsl #24"
      ]
    },
    "xor ax, 1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x35",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "eor w21, w20, #0x1",
        "mov x22, x20",
        "bfxil x22, x21, #0, #16",
        "mov x4, x22",
        "mov x26, x21",
        "cmn wzr, w21, lsl #16"
      ]
    },
    "xor eax, 1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x35",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "eor w21, w20, #0x1",
        "mov x4, x21",
        "mov x26, x21",
        "tst w21, w21"
      ]
    },
    "xor rax, 1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x35",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "eor x21, x20, #0x1",
        "mov x4, x21",
        "mov x26, x21",
        "tst x21, x21"
      ]
    },
    "cmp bl, cl": {
      "ExpectedInstructionCount": 11,
      "Comment": "0x38",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #24",
        "cmp w0, w20, lsl #24",
        "sub w22, w21, w20",
        "mov x26, x22",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "xor al, -1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x34",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "eor w21, w20, #0xff",
        "mov x22, x20",
        "bfxil x22, x21, #0, #8",
        "mov x4, x22",
        "mov x26, x21",
        "cmn wzr, w21, lsl #24"
      ]
    },
    "xor ax, -1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x35",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "eor w21, w20, #0xffff",
        "mov x22, x20",
        "bfxil x22, x21, #0, #16",
        "mov x4, x22",
        "mov x26, x21",
        "cmn wzr, w21, lsl #16"
      ]
    },
    "xor eax, -1": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x35",
      "ExpectedArm64ASM": [
        "mov w20, #0xffffffff",
        "mov x21, x4",
        "eor w22, w21, w20",
        "mov x4, x22",
        "mov x26, x22",
        "tst w22, w22"
      ]
    },
    "xor rax, -1": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x35",
      "ExpectedArm64ASM": [
        "mov x20, #0xffffffffffffffff",
        "mov x21, x4",
        "eor x22, x21, x20",
        "mov x4, x22",
        "mov x26, x22",
        "tst x22, x22"
      ]
    },
    "cmp bx, cx": {
      "ExpectedInstructionCount": 11,
      "Comment": "0x39",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #16",
        "cmp w0, w20, lsl #16",
        "sub w22, w21, w20",
        "mov x26, x22",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "cmp ebx, ecx": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x39",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "subs w22, w21, w20",
        "mov x26, x22",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "cmp rbx, rcx": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x39",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "subs x22, x21, x20",
        "mov x26, x22",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "db 0x3A, 0xcb": {
      "ExpectedInstructionCount": 11,
      "Comment": [
        "0x3A",
        "cmp bl, cl but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #24",
        "cmp w0, w20, lsl #24",
        "sub w22, w21, w20",
        "mov x26, x22",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "db 0x66, 0x3B, 0xcb": {
      "ExpectedInstructionCount": 11,
      "Comment": [
        "0x3B",
        "cmp bx, cx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #16",
        "cmp w0, w20, lsl #16",
        "sub w22, w21, w20",
        "mov x26, x22",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "db 0x3B, 0xcb": {
      "ExpectedInstructionCount": 9,
      "Comment": [
        "0x3B",
        "cmp ebx, ecx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "subs w22, w21, w20",
        "mov x26, x22",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "db 0x48, 0x3B, 0xcb": {
      "ExpectedInstructionCount": 9,
      "Comment": [
        "0x3B",
        "cmp rbx, rcx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "subs x22, x21, x20",
        "mov x26, x22",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "cmp al, 1": {
      "ExpectedInstructionCount": 10,
      "Comment": "0x3C",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mov x27, x21",
        "lsl w0, w21, #24",
        "cmp w0, w20, lsl #24",
        "sub w20, w21, #0x1 (1)",
        "mov x26, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "cmp ax, 1": {
      "ExpectedInstructionCount": 10,
      "Comment": "0x3D",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mov x27, x21",
        "lsl w0, w21, #16",
        "cmp w0, w20, lsl #16",
        "sub w20, w21, #0x1 (1)",
        "mov x26, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "cmp eax, 1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x3D",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x27, x20",
        "subs w21, w20, #0x1 (1)",
        "mov x26, x21",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "cmp rax, 1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x3D",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x27, x20",
        "subs x21, x20, #0x1 (1)",
        "mov x26, x21",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "cmp al, -1": {
      "ExpectedInstructionCount": 11,
      "Comment": "0x3C",
      "ExpectedArm64ASM": [
        "mov w20, #0xff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "lsl w0, w21, #24",
        "cmp w0, w20, lsl #24",
        "sub w20, w21, #0xff (255)",
        "mov x26, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "cmp ax, -1": {
      "ExpectedInstructionCount": 11,
      "Comment": "0x3D",
      "ExpectedArm64ASM": [
        "mov w20, #0xffff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "lsl w0, w21, #16",
        "cmp w0, w20, lsl #16",
        "sub w22, w21, w20",
        "mov x26, x22",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "cmp eax, -1": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x3D",
      "ExpectedArm64ASM": [
        "mov w20, #0xffffffff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "subs w22, w21, w20",
        "mov x26, x22",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "cmp rax, -1": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x3D",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mvn w21, w20",
        "mov x27, x21",
        "adds x21, x20, #0x1 (1)",
        "mov x26, x21",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "push ax": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x50",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x8",
        "mov x22, x21",
        "strh w20, [x22, #-2]!",
        "mov x8, x22"
      ]
    },
    "push rax": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x50",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x8",
        "mov x22, x21",
        "str x20, [x22, #-8]!",
        "mov x8, x22"
      ]
    },
    "pop ax": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x8f",
      "ExpectedArm64ASM": [
        "mov x20, x8",
        "ldrh w21, [x20]",
        "add x22, x20, #0x2 (2)",
        "mov x8, x22",
        "mov x20, x4",
        "mov x22, x20",
        "bfxil x22, x21, #0, #16",
        "mov x4, x22"
      ]
    },
    "pop rax": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x8f",
      "ExpectedArm64ASM": [
        "mov x20, x8",
        "ldr x21, [x20]",
        "add x22, x20, #0x8 (8)",
        "mov x8, x22",
        "mov x4, x21"
      ]
    },
    "movsxd rax, ebx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x63",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov w21, w20",
        "sxtw x20, w21",
        "mov x4, x20"
      ]
    },
    "push word 1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x68",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x8",
        "mov x22, x21",
        "strh w20, [x22, #-2]!",
        "mov x8, x22"
      ]
    },
    "push qword 1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x68",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x8",
        "mov x22, x21",
        "str x20, [x22, #-8]!",
        "mov x8, x22"
      ]
    },
    "imul ax, bx, 257": {
      "ExpectedInstructionCount": 12,
      "Comment": "0x69",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "sxth x21, w20",
        "mov w20, #0x101",
        "mul x22, x21, x20",
        "sbfx x20, x22, #16, #16",
        "mov x21, x4",
        "mov x23, x21",
        "bfxil x23, x22, #0, #16",
        "mov x4, x23",
        "sbfx x21, x22, #15, #1",
        "cmp x20, x21",
        "ccmn xzr, #0, #nzCV, eq"
      ]
    },
    "imul eax, ebx, 257": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x69",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov w21, #0x101",
        "smull x22, w20, w21",
        "asr x23, x22, #32",
        "mul w22, w20, w21",
        "mov x4, x22",
        "sbfx x20, x22, #31, #1",
        "cmp x23, x20",
        "ccmn xzr, #0, #nzCV, eq"
      ]
    },
    "imul rax, rbx, 257": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x69",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov w21, #0x101",
        "smulh x22, x20, x21",
        "mul x23, x20, x21",
        "mov x4, x23",
        "asr x20, x23, #63",
        "cmp x22, x20",
        "ccmn xzr, #0, #nzCV, eq"
      ]
    },
    "push word -1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x6a",
      "ExpectedArm64ASM": [
        "mov w20, #0xffff",
        "mov x21, x8",
        "mov x22, x21",
        "strh w20, [x22, #-2]!",
        "mov x8, x22"
      ]
    },
    "push dword -1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x6a",
      "ExpectedArm64ASM": [
        "mov x20, #0xffffffffffffffff",
        "mov x21, x8",
        "mov x22, x21",
        "str x20, [x22, #-8]!",
        "mov x8, x22"
      ]
    },
    "push qword -1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x6a",
      "ExpectedArm64ASM": [
        "mov x20, #0xffffffffffffffff",
        "mov x21, x8",
        "mov x22, x21",
        "str x20, [x22, #-8]!",
        "mov x8, x22"
      ]
    },
    "imul ax, bx, 3": {
      "ExpectedInstructionCount": 12,
      "Comment": "0x6b",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "sxth x21, w20",
        "mov w20, #0x3",
        "mul x22, x21, x20",
        "sbfx x20, x22, #16, #16",
        "mov x21, x4",
        "mov x23, x21",
        "bfxil x23, x22, #0, #16",
        "mov x4, x23",
        "sbfx x21, x22, #15, #1",
        "cmp x20, x21",
        "ccmn xzr, #0, #nzCV, eq"
      ]
    },
    "imul eax, ebx, 3": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x6b",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov w21, #0x3",
        "smull x22, w20, w21",
        "asr x23, x22, #32",
        "mul w22, w20, w21",
        "mov x4, x22",
        "sbfx x20, x22, #31, #1",
        "cmp x23, x20",
        "ccmn xzr, #0, #nzCV, eq"
      ]
    },
    "imul rax, rbx, 3": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x6b",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov w21, #0x3",
        "smulh x22, x20, x21",
        "mul x23, x20, x21",
        "mov x4, x23",
        "asr x20, x23, #63",
        "cmp x22, x20",
        "ccmn xzr, #0, #nzCV, eq"
      ]
    },
    "test al, bl": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x84",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "and w22, w21, w20",
        "cmn wzr, w22, lsl #24",
        "mov x26, x22"
      ]
    },
    "test ax, bx": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x84",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "and w22, w21, w20",
        "cmn wzr, w22, lsl #16",
        "mov x26, x22"
      ]
    },
    "test eax, ebx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x84",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "ands w22, w21, w20",
        "mov x26, x22"
      ]
    },
    "test rax, rbx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x84",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "ands x22, x21, x20",
        "mov x26, x22"
      ]
    },
    "test al, al": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x84",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x20",
        "cmn wzr, w21, lsl #24",
        "mov x26, x21"
      ]
    },
    "test ax, ax": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x84",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x20",
        "cmn wzr, w21, lsl #16",
        "mov x26, x21"
      ]
    },
    "test eax, eax": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x84",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ands w21, w20, w20",
        "mov x26, x21"
      ]
    },
    "test rax, rax": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x84",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ands x21, x20, x20",
        "mov x26, x21"
      ]
    },
    "xchg bl, cl": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x86",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "mov x22, x21",
        "bfxil x22, x20, #0, #8",
        "mov x5, x22",
        "mov x22, x20",
        "bfxil x22, x21, #0, #8",
        "mov x7, x22"
      ]
    },
    "xchg [rax], cl": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x86",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x4",
        "swpalb w20, w22, [x21]",
        "mov x21, x20",
        "bfxil x21, x22, #0, #8",
        "mov x5, x21"
      ]
    },
    "xchg bx, cx": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x87",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "mov x22, x21",
        "bfxil x22, x20, #0, #16",
        "mov x5, x22",
        "mov x22, x20",
        "bfxil x22, x21, #0, #16",
        "mov x7, x22"
      ]
    },
    "xchg [rax], cx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x87",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x4",
        "swpalh w20, w22, [x21]",
        "mov x21, x20",
        "bfxil x21, x22, #0, #16",
        "mov x5, x21"
      ]
    },
    "xchg ebx, ecx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x87",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "mov w22, w20",
        "mov x5, x22",
        "mov w20, w21",
        "mov x7, x20"
      ]
    },
    "xchg [rax], ecx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x87",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x4",
        "swpal w20, w22, [x21]",
        "mov x5, x22"
      ]
    },
    "xchg rbx, rcx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x87",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "mov x5, x20",
        "mov x7, x21"
      ]
    },
    "xchg [rax], rcx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x87",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x4",
        "swpal x20, x22, [x21]",
        "mov x5, x22"
      ]
    },
    "mov [rax], bl": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x88",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "uxtb w21, w20",
        "mov x20, x4",
        "strb w21, [x20]"
      ]
    },
    "mov [rax], bx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x89",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "uxth w21, w20",
        "mov x20, x4",
        "strh w21, [x20]"
      ]
    },
    "mov [rax], ebx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x89",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov w21, w20",
        "mov x20, x4",
        "str w21, [x20]"
      ]
    },
    "mov [rax], rbx": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x89",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "str x20, [x21]"
      ]
    },
    "mov bl, [rax]": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x8a",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20]",
        "mov x20, x7",
        "mov x22, x20",
        "bfxil x22, x21, #0, #8",
        "mov x7, x22"
      ]
    },
    "mov bx, [rax]": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x8b",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrh w21, [x20]",
        "mov x20, x7",
        "mov x22, x20",
        "bfxil x22, x21, #0, #16",
        "mov x7, x22"
      ]
    },
    "mov ebx, [rax]": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x8b",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldr w21, [x20]",
        "mov x7, x21"
      ]
    },
    "mov rbx, [rax]": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x8b",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldr x21, [x20]",
        "mov x7, x21"
      ]
    },
    "mov ax, cs": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x8c",
      "ExpectedArm64ASM": [
        "ldrh w20, [x28, #138]",
        "mov x21, x4",
        "mov x22, x21",
        "bfxil x22, x20, #0, #16",
        "mov x4, x22"
      ]
    },
    "mov eax, cs": {
      "ExpectedInstructionCount": 2,
      "Comment": "0x8c",
      "ExpectedArm64ASM": [
        "ldrh w20, [x28, #138]",
        "mov x4, x20"
      ]
    },
    "mov rax, cs": {
      "ExpectedInstructionCount": 2,
      "Comment": "0x8c",
      "ExpectedArm64ASM": [
        "ldrh w20, [x28, #138]",
        "mov x4, x20"
      ]
    },
    "mov ax, es": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x8c",
      "ExpectedArm64ASM": [
        "ldrh w20, [x28, #136]",
        "mov x21, x4",
        "mov x22, x21",
        "bfxil x22, x20, #0, #16",
        "mov x4, x22"
      ]
    },
    "mov eax, es": {
      "ExpectedInstructionCount": 2,
      "Comment": "0x8c",
      "ExpectedArm64ASM": [
        "ldrh w20, [x28, #136]",
        "mov x4, x20"
      ]
    },
    "mov rax, es": {
      "ExpectedInstructionCount": 2,
      "Comment": "0x8c",
      "ExpectedArm64ASM": [
        "ldrh w20, [x28, #136]",
        "mov x4, x20"
      ]
    },
    "mov ax, ss": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x8c",
      "ExpectedArm64ASM": [
        "ldrh w20, [x28, #140]",
        "mov x21, x4",
        "mov x22, x21",
        "bfxil x22, x20, #0, #16",
        "mov x4, x22"
      ]
    },
    "mov eax, ss": {
      "ExpectedInstructionCount": 2,
      "Comment": "0x8c",
      "ExpectedArm64ASM": [
        "ldrh w20, [x28, #140]",
        "mov x4, x20"
      ]
    },
    "mov rax, ss": {
      "ExpectedInstructionCount": 2,
      "Comment": "0x8c",
      "ExpectedArm64ASM": [
        "ldrh w20, [x28, #140]",
        "mov x4, x20"
      ]
    },
    "mov ax, ds": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x8c",
      "ExpectedArm64ASM": [
        "ldrh w20, [x28, #142]",
        "mov x21, x4",
        "mov x22, x21",
        "bfxil x22, x20, #0, #16",
        "mov x4, x22"
      ]
    },
    "mov eax, ds": {
      "ExpectedInstructionCount": 2,
      "Comment": "0x8c",
      "ExpectedArm64ASM": [
        "ldrh w20, [x28, #142]",
        "mov x4, x20"
      ]
    },
    "mov rax, ds": {
      "ExpectedInstructionCount": 2,
      "Comment": "0x8c",
      "ExpectedArm64ASM": [
        "ldrh w20, [x28, #142]",
        "mov x4, x20"
      ]
    },
    "mov ax, gs": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x8c",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "and x21, x20, #0xffffffffffff0000",
        "mov x4, x21"
      ]
    },
    "mov eax, gs": {
      "ExpectedInstructionCount": 2,
      "Comment": "0x8c",
      "ExpectedArm64ASM": [
        "mov w20, #0x0",
        "mov x4, x20"
      ]
    },
    "mov rax, gs": {
      "ExpectedInstructionCount": 2,
      "Comment": "0x8c",
      "ExpectedArm64ASM": [
        "mov w20, #0x0",
        "mov x4, x20"
      ]
    },
    "mov ax, fs": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x8c",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "and x21, x20, #0xffffffffffff0000",
        "mov x4, x21"
      ]
    },
    "mov eax, fs": {
      "ExpectedInstructionCount": 2,
      "Comment": "0x8c",
      "ExpectedArm64ASM": [
        "mov w20, #0x0",
        "mov x4, x20"
      ]
    },
    "mov rax, fs": {
      "ExpectedInstructionCount": 2,
      "Comment": "0x8c",
      "ExpectedArm64ASM": [
        "mov w20, #0x0",
        "mov x4, x20"
      ]
    },
    "lea ax, [rbx+rcx*1 + 0]": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x8d",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "add x22, x20, x21",
        "mov x20, x4",
        "mov x21, x20",
        "bfxil x21, x22, #0, #16",
        "mov x4, x21"
      ]
    },
    "lea eax, [rbx+rcx*1 + 0]": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x8d",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "add x22, x20, x21",
        "mov x20, x22",
        "mov w21, w20",
        "mov x4, x21"
      ]
    },
    "lea rax, [rbx+rcx*1 + 0]": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x8d",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "add x22, x20, x21",
        "mov x4, x22"
      ]
    },
    "lea ax, [rbx+rcx*2 + 0]": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x8d",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "add x22, x20, x21, lsl #1",
        "mov x20, x4",
        "mov x21, x20",
        "bfxil x21, x22, #0, #16",
        "mov x4, x21"
      ]
    },
    "lea eax, [rbx+rcx*2 + 0]": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x8d",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "add x22, x20, x21, lsl #1",
        "mov x20, x22",
        "mov w21, w20",
        "mov x4, x21"
      ]
    },
    "lea rax, [rbx+rcx*2 + 0]": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x8d",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "add x22, x20, x21, lsl #1",
        "mov x4, x22"
      ]
    },
    "lea ax, [rbx+rcx*4 + 0]": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x8d",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "add x22, x20, x21, lsl #2",
        "mov x20, x4",
        "mov x21, x20",
        "bfxil x21, x22, #0, #16",
        "mov x4, x21"
      ]
    },
    "lea eax, [rbx+rcx*4 + 0]": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x8d",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "add x22, x20, x21, lsl #2",
        "mov x20, x22",
        "mov w21, w20",
        "mov x4, x21"
      ]
    },
    "lea rax, [rbx+rcx*4 + 0]": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x8d",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "add x22, x20, x21, lsl #2",
        "mov x4, x22"
      ]
    },
    "lea ax, [rbx+rcx*8 + 0]": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x8d",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "add x22, x20, x21, lsl #3",
        "mov x20, x4",
        "mov x21, x20",
        "bfxil x21, x22, #0, #16",
        "mov x4, x21"
      ]
    },
    "lea eax, [rbx+rcx*8 + 0]": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x8d",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "add x22, x20, x21, lsl #3",
        "mov x20, x22",
        "mov w21, w20",
        "mov x4, x21"
      ]
    },
    "lea rax, [rbx+rcx*8 + 0]": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x8d",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "add x22, x20, x21, lsl #3",
        "mov x4, x22"
      ]
    },
    "lea ax, [ebx+ecx*1 + 0]": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x8d",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "add x22, x20, x21",
        "mov w20, w22",
        "mov x21, x4",
        "mov x22, x21",
        "bfxil x22, x20, #0, #16",
        "mov x4, x22"
      ]
    },
    "lea eax, [ebx+ecx*1 + 0]": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x8d",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "add x22, x20, x21",
        "mov w20, w22",
        "mov x4, x20"
      ]
    },
    "lea rax, [ebx+ecx*1 + 0]": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x8d",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "add x22, x20, x21",
        "mov w20, w22",
        "mov x4, x20"
      ]
    },
    "lea ax, [ebx+ecx*2 + 0]": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x8d",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "add x22, x20, x21, lsl #1",
        "mov w20, w22",
        "mov x21, x4",
        "mov x22, x21",
        "bfxil x22, x20, #0, #16",
        "mov x4, x22"
      ]
    },
    "lea eax, [ebx+ecx*2 + 0]": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x8d",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "add x22, x20, x21, lsl #1",
        "mov w20, w22",
        "mov x4, x20"
      ]
    },
    "lea rax, [ebx+ecx*2 + 0]": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x8d",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "add x22, x20, x21, lsl #1",
        "mov w20, w22",
        "mov x4, x20"
      ]
    },
    "lea ax, [ebx+ecx*4 + 0]": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x8d",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "add x22, x20, x21, lsl #2",
        "mov w20, w22",
        "mov x21, x4",
        "mov x22, x21",
        "bfxil x22, x20, #0, #16",
        "mov x4, x22"
      ]
    },
    "lea eax, [ebx+ecx*4 + 0]": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x8d",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "add x22, x20, x21, lsl #2",
        "mov w20, w22",
        "mov x4, x20"
      ]
    },
    "lea rax, [ebx+ecx*4 + 0]": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x8d",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "add x22, x20, x21, lsl #2",
        "mov w20, w22",
        "mov x4, x20"
      ]
    },
    "lea ax, [ebx+ecx*8 + 0]": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x8d",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "add x22, x20, x21, lsl #3",
        "mov w20, w22",
        "mov x21, x4",
        "mov x22, x21",
        "bfxil x22, x20, #0, #16",
        "mov x4, x22"
      ]
    },
    "lea eax, [ebx+ecx*8 + 0]": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x8d",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "add x22, x20, x21, lsl #3",
        "mov w20, w22",
        "mov x4, x20"
      ]
    },
    "lea rax, [ebx+ecx*8 + 0]": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x8d",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "add x22, x20, x21, lsl #3",
        "mov w20, w22",
        "mov x4, x20"
      ]
    },
    "mov cs, ax": {
      "ExpectedInstructionCount": 4,
      "Skip": "Yes",
      "Comment": "0x8e"
    },
    "mov es, ax": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x8e",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "uxth w21, w20",
        "strh w21, [x28, #136]",
        "ubfx w20, w21, #3, #13",
        "add x0, x28, x20, lsl #2",
        "ldr w21, [x0, #896]",
        "str w21, [x28, #152]"
      ]
    },
    "mov ss, ax": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x8e",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "uxth w21, w20",
        "strh w21, [x28, #140]",
        "ubfx w20, w21, #3, #13",
        "add x0, x28, x20, lsl #2",
        "ldr w21, [x0, #896]",
        "str w21, [x28, #160]"
      ]
    },
    "mov ds, ax": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x8e",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "uxth w21, w20",
        "strh w21, [x28, #142]",
        "ubfx w20, w21, #3, #13",
        "add x0, x28, x20, lsl #2",
        "ldr w21, [x0, #896]",
        "str w21, [x28, #164]"
      ]
    },
    "mov gs, ax": {
      "ExpectedInstructionCount": 0,
      "Skip": "Yes",
      "Comment": "0x8e"
    },
    "mov fs, ax": {
      "ExpectedInstructionCount": 0,
      "Skip": "Yes",
      "Comment": "0x8e"
    },
    "pop word [rax]": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x8f",
      "ExpectedArm64ASM": [
        "mov x20, x8",
        "ldrh w21, [x20]",
        "add x22, x20, #0x2 (2)",
        "mov x8, x22",
        "mov x20, x4",
        "strh w21, [x20]"
      ]
    },
    "pop qword [rax]": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x8f",
      "ExpectedArm64ASM": [
        "mov x20, x8",
        "ldr x21, [x20]",
        "add x22, x20, #0x8 (8)",
        "mov x8, x22",
        "mov x20, x4",
        "str x21, [x20]"
      ]
    },
    "xchg ax, bx": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x90",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "mov x22, x21",
        "bfxil x22, x20, #0, #16",
        "mov x7, x22",
        "mov x22, x20",
        "bfxil x22, x21, #0, #16",
        "mov x4, x22"
      ]
    },
    "xchg eax, ebx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x90",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "mov w22, w20",
        "mov x7, x22",
        "mov w20, w21",
        "mov x4, x20"
      ]
    },
    "xchg rax, rbx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x90",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x7",
        "mov x7, x20",
        "mov x4, x21"
      ]
    },
    "nop": {
      "ExpectedInstructionCount": 0,
      "Comment": "0x90",
      "ExpectedArm64ASM": []
    },
    "cbw": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x98",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "sxtb w21, w20",
        "mov x22, x20",
        "bfxil x22, x21, #0, #16",
        "mov x4, x22"
      ]
    },
    "cwde": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x98",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "sxth w21, w20",
        "mov x4, x21"
      ]
    },
    "cdqe": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x98",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "sxtw x21, w20",
        "mov x4, x21"
      ]
    },
    "cwd": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x98",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "uxth w21, w20",
        "sbfx x20, x21, #15, #1",
        "mov x21, x6",
        "mov x22, x21",
        "bfxil x22, x20, #0, #16",
        "mov x6, x22"
      ]
    },
    "cdq": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x99",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov w21, w20",
        "sbfx x20, x21, #31, #1",
        "mov w21, w20",
        "mov x6, x21"
      ]
    },
    "cqo": {
      "ExpectedInstructionCount": 3,
      "Comment": "0x99",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "asr x21, x20, #63",
        "mov x6, x21"
      ]
    },
    "fwait": {
      "ExpectedInstructionCount": 0,
      "Comment": "0x9b",
      "ExpectedArm64ASM": []
    },
    "pushf": {
      "ExpectedInstructionCount": 44,
      "Comment": "0x9c",
      "ExpectedArm64ASM": [
        "cset w20, hs",
        "mov x21, x27",
        "mov x22, x26",
        "eor w23, w21, w22",
        "ubfx w21, w23, #4, #1",
        "orr x23, x20, x21, lsl #4",
        "ldrb w20, [x28, #712]",
        "orr x21, x23, x20, lsl #8",
        "ldrb w20, [x28, #713]",
        "orr x23, x21, x20, lsl #9",
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "orr x20, x23, x21, lsl #10",
        "cset w21, vs",
        "orr x23, x20, x21, lsl #11",
        "ldrb w20, [x28, #716]",
        "orr x21, x23, x20, lsl #12",
        "ldrb w20, [x28, #718]",
        "orr x23, x21, x20, lsl #14",
        "ldrb w20, [x28, #720]",
        "orr x21, x23, x20, lsl #16",
        "ldrb w20, [x28, #721]",
        "orr x23, x21, x20, lsl #17",
        "ldrb w20, [x28, #722]",
        "orr x21, x23, x20, lsl #18",
        "ldrb w20, [x28, #723]",
        "orr x23, x21, x20, lsl #19",
        "ldrb w20, [x28, #724]",
        "orr x21, x23, x20, lsl #20",
        "ldrb w20, [x28, #725]",
        "orr x23, x21, x20, lsl #21",
        "eor w20, w22, w22, lsr #4",
        "eor w21, w20, w20, lsr #2",
        "eor w20, w21, w21, lsr #1",
        "orr x21, x20, #0xfffffffffffffffe",
        "orn x20, x23, x21, ror #62",
        "mrs x21, nzcv",
        "and x22, x21, #0xc0000000",
        "orr x21, x20, x22, lsr #24",
        "orr x20, x21, #0x2",
        "mov x21, x8",
        "mov x22, x21",
        "str x20, [x22, #-8]!",
        "mov x8, x22"
      ]
    },
    "pushfq": {
      "ExpectedInstructionCount": 44,
      "Comment": "0x9c",
      "ExpectedArm64ASM": [
        "cset w20, hs",
        "mov x21, x27",
        "mov x22, x26",
        "eor w23, w21, w22",
        "ubfx w21, w23, #4, #1",
        "orr x23, x20, x21, lsl #4",
        "ldrb w20, [x28, #712]",
        "orr x21, x23, x20, lsl #8",
        "ldrb w20, [x28, #713]",
        "orr x23, x21, x20, lsl #9",
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "orr x20, x23, x21, lsl #10",
        "cset w21, vs",
        "orr x23, x20, x21, lsl #11",
        "ldrb w20, [x28, #716]",
        "orr x21, x23, x20, lsl #12",
        "ldrb w20, [x28, #718]",
        "orr x23, x21, x20, lsl #14",
        "ldrb w20, [x28, #720]",
        "orr x21, x23, x20, lsl #16",
        "ldrb w20, [x28, #721]",
        "orr x23, x21, x20, lsl #17",
        "ldrb w20, [x28, #722]",
        "orr x21, x23, x20, lsl #18",
        "ldrb w20, [x28, #723]",
        "orr x23, x21, x20, lsl #19",
        "ldrb w20, [x28, #724]",
        "orr x21, x23, x20, lsl #20",
        "ldrb w20, [x28, #725]",
        "orr x23, x21, x20, lsl #21",
        "eor w20, w22, w22, lsr #4",
        "eor w21, w20, w20, lsr #2",
        "eor w20, w21, w21, lsr #1",
        "orr x21, x20, #0xfffffffffffffffe",
        "orn x20, x23, x21, ror #62",
        "mrs x21, nzcv",
        "and x22, x21, #0xc0000000",
        "orr x21, x20, x22, lsr #24",
        "orr x20, x21, #0x2",
        "mov x21, x8",
        "mov x22, x21",
        "str x20, [x22, #-8]!",
        "mov x8, x22"
      ]
    },
    "popf": {
      "ExpectedInstructionCount": 43,
      "Comment": "0x9d",
      "ExpectedArm64ASM": [
        "mov x20, x8",
        "ldr x21, [x20]",
        "add x22, x20, #0x8 (8)",
        "mov x8, x22",
        "mov w20, #0x202",
        "orr x22, x21, x20",
        "ubfx x20, x22, #0, #1",
        "lsl x21, x20, #29",
        "ubfx w20, w22, #2, #1",
        "mov w23, #0x1",
        "eor w24, w20, #0x1",
        "mov x26, x24",
        "mov x27, x22",
        "ubfx x20, x22, #6, #1",
        "orr w24, w21, w20, lsl #30",
        "ubfx x20, x22, #7, #1",
        "orr w21, w24, w20, lsl #31",
        "ubfx w20, w22, #8, #1",
        "strb w20, [x28, #712]",
        "ubfx w20, w22, #9, #1",
        "strb w20, [x28, #713]",
        "ubfx w20, w22, #10, #1",
        "sub x24, x23, x20, lsl #1",
        "strb w24, [x28, #714]",
        "ubfx x20, x22, #11, #1",
        "orr w23, w21, w20, lsl #28",
        "ubfx w20, w22, #12, #1",
        "strb w20, [x28, #716]",
        "ubfx w20, w22, #14, #1",
        "strb w20, [x28, #718]",
        "ubfx w20, w22, #16, #1",
        "strb w20, [x28, #720]",
        "ubfx w20, w22, #17, #1",
        "strb w20, [x28, #721]",
        "ubfx w20, w22, #18, #1",
        "strb w20, [x28, #722]",
        "ubfx w20, w22, #19, #1",
        "strb w20, [x28, #723]",
        "ubfx w20, w22, #20, #1",
        "strb w20, [x28, #724]",
        "ubfx w20, w22, #21, #1",
        "strb w20, [x28, #725]",
        "msr nzcv, x23"
      ]
    },
    "sahf": {
      "ExpectedInstructionCount": 20,
      "Comment": "0x9e",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ubfx w21, w20, #8, #8",
        "mov w20, #0x28",
        "bic x22, x21, x20",
        "orr x20, x22, #0x2",
        "ubfx x21, x20, #0, #1",
        "mrs x22, nzcv",
        "mov w23, w22",
        "bfi w23, w21, #29, #1",
        "ubfx w21, w20, #2, #1",
        "eor w22, w21, #0x1",
        "mov x26, x22",
        "mov x27, x20",
        "ubfx x21, x20, #6, #1",
        "mov w22, w23",
        "bfi w22, w21, #30, #1",
        "ubfx x21, x20, #7, #1",
        "mov w20, w22",
        "bfi w20, w21, #31, #1",
        "msr nzcv, x20"
      ]
    },
    "lahf": {
      "ExpectedInstructionCount": 19,
      "Comment": "0x9f",
      "ExpectedArm64ASM": [
        "cset w20, hs",
        "mov x21, x27",
        "mov x22, x26",
        "eor w23, w21, w22",
        "ubfx w21, w23, #4, #1",
        "orr x23, x20, x21, lsl #4",
        "eor w20, w22, w22, lsr #4",
        "eor w21, w20, w20, lsr #2",
        "eor w20, w21, w21, lsr #1",
        "orr x21, x20, #0xfffffffffffffffe",
        "orn x20, x23, x21, ror #62",
        "mrs x21, nzcv",
        "and x22, x21, #0xc0000000",
        "orr x21, x20, x22, lsr #24",
        "orr x20, x21, #0x2",
        "mov x21, x4",
        "mov x22, x21",
        "bfi x22, x20, #8, #8",
        "mov x4, x22"
      ]
    },
    "db 0x48, 0xa1; dq 0x00000000e0000008": {
      "ExpectedInstructionCount": 6,
      "Comment": [
        "mov rax, [0xe0000008]",
        "0xa1"
      ],
      "ExpectedArm64ASM": [
        "mov x20, #0x6264",
        "movk x20, #0x3020, lsl #16",
        "movk x20, #0x3678, lsl #32",
        "movk x20, #0x2c37, lsl #48",
        "ldr x21, [x20]",
        "mov x4, x21"
      ]
    },
    "db 0x67, 0xa1; dd 0xe0000000": {
      "ExpectedInstructionCount": 4,
      "Comment": [
        "mov eax, [0xe0000000]",
        "0xa1"
      ],
      "ExpectedArm64ASM": [
        "mov w20, #0x6264",
        "movk w20, #0x3020, lsl #16",
        "ldr w21, [x20]",
        "mov x4, x21"
      ]
    },
    "db 0x48, 0xa3; dq 0x00000000e0000008": {
      "ExpectedInstructionCount": 6,
      "Comment": [
        "mov [0xe0000008], rax",
        "0xa3"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, #0x6264",
        "movk x21, #0x3020, lsl #16",
        "movk x21, #0x3678, lsl #32",
        "movk x21, #0x2c37, lsl #48",
        "str x20, [x21]"
      ]
    },
    "db 0x67, 0xa3; dd 0xe0000000": {
      "ExpectedInstructionCount": 5,
      "Comment": [
        "mov [0xe0000000], eax",
        "0xa3"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov w21, w20",
        "mov w20, #0x6f6d",
        "movk w20, #0x7376, lsl #16",
        "str w21, [x20]"
      ]
    },
    "movsb": {
      "ExpectedInstructionCount": 9,
      "Comment": [
        "0xa4"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x10",
        "mov x21, x11",
        "ldrb w22, [x20]",
        "strb w22, [x21]",
        "ldrsb x22, [x28, #714]",
        "add x23, x20, x22",
        "add x20, x21, x22",
        "mov x10, x23",
        "mov x11, x20"
      ]
    },
    "movsw": {
      "ExpectedInstructionCount": 10,
      "Comment": [
        "0xa5"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x10",
        "mov x21, x11",
        "ldrh w22, [x20]",
        "strh w22, [x21]",
        "ldrsb x22, [x28, #714]",
        "lsl x23, x22, #1",
        "add x22, x20, x23",
        "add x20, x21, x23",
        "mov x10, x22",
        "mov x11, x20"
      ]
    },
    "movsd": {
      "ExpectedInstructionCount": 10,
      "Comment": [
        "0xa5"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x10",
        "mov x21, x11",
        "ldr w22, [x20]",
        "str w22, [x21]",
        "ldrsb x22, [x28, #714]",
        "lsl x23, x22, #2",
        "add x22, x20, x23",
        "add x20, x21, x23",
        "mov x10, x22",
        "mov x11, x20"
      ]
    },
    "movsq": {
      "ExpectedInstructionCount": 10,
      "Comment": [
        "0xa5"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x10",
        "mov x21, x11",
        "ldr x22, [x20]",
        "str x22, [x21]",
        "ldrsb x22, [x28, #714]",
        "lsl x23, x22, #3",
        "add x22, x20, x23",
        "add x20, x21, x23",
        "mov x10, x22",
        "mov x11, x20"
      ]
    },
    "rep movsb": {
      "ExpectedInstructionCount": 89,
      "Comment": "0xa4",
      "ExpectedArm64ASM": [
        "mov x20, x10",
        "mov x21, x11",
        "mov x22, x5",
        "ldrsb x23, [x28, #714]",
        "mov x0, x22",
        "mov x1, x21",
        "mov x2, x20",
        "tbnz w23, #1, #+0x94",
        "cbz x0, #+0x78",
        "sub x3, x1, x2",
        "tbz x3, #63, #+0x8",
        "neg x3, x3",
        "sub x3, x3, #0x20 (32)",
        "tbnz x3, #63, #+0x54",
        "sub x0, x0, #0x20 (32)",
        "tbnz x0, #63, #+0x44",
        "sub x0, x0, #0x20 (32)",
        "tbnz x0, #63, #+0x1c",
        "ldp q0, q1, [x2], #32",
        "stp q0, q1, [x1], #32",
        "ldp q0, q1, [x2], #32",
        "stp q0, q1, [x1], #32",
        "sub x0, x0, #0x40 (64)",
        "tbz x0, #63, #-0x14",
        "add x0, x0, #0x40 (64)",
        "cbz x0, #+0x34",
        "sub x0, x0, #0x20 (32)",
        "tbnz x0, #63, #+0x14",
        "ldp q0, q1, [x2], #32",
        "stp q0, q1, [x1], #32",
        "sub x0, x0, #0x20 (32)",
        "tbz x0, #63, #-0xc",
        "add x0, x0, #0x20 (32)",
        "cbz x0, #+0x14",
        "ldrb w3, [x2], #1",
        "strb w3, [x1], #1",
        "sub x0, x0, #0x1 (1)",
        "cbnz x0, #-0xc",
        "mov x0, x21",
        "mov x1, x20",
        "mov x2, x22",
        "add x24, x0, x2",
        "add x25, x1, x2",
        "b #+0xa0",
        "cbz x0, #+0x88",
        "sub x3, x1, x2",
        "tbz x3, #63, #+0x8",
        "neg x3, x3",
        "sub x3, x3, #0x20 (32)",
        "tbnz x3, #63, #+0x64",
        "sub x1, x1, #0x1f (31)",
        "sub x2, x2, #0x1f (31)",
        "sub x0, x0, #0x20 (32)",
        "tbnz x0, #63, #+0x44",
        "sub x0, x0, #0x20 (32)",
        "tbnz x0, #63, #+0x1c",
        "ldp q0, q1, [x2], #-32",
        "stp q0, q1, [x1], #-32",
        "ldp q0, q1, [x2], #-32",
        "stp q0, q1, [x1], #-32",
        "sub x0, x0, #0x40 (64)",
        "tbz x0, #63, #-0x14",
        "add x0, x0, #0x40 (64)",
        "cbz x0, #+0x3c",
        "sub x0, x0, #0x20 (32)",
        "tbnz x0, #63, #+0x14",
        "ldp q0, q1, [x2], #-32",
        "stp q0, q1, [x1], #-32",
        "sub x0, x0, #0x20 (32)",
        "tbz x0, #63, #-0xc",
        "add x0, x0, #0x20 (32)",
        "cbz x0, #+0x1c",
        "add x1, x1, #0x1f (31)",
        "add x2, x2, #0x1f (31)",
        "ldrb w3, [x2], #-1",
        "strb w3, [x1], #-1",
        "sub x0, x0, #0x1 (1)",
        "cbnz x0, #-0xc",
        "mov x0, x21",
        "mov x1, x20",
        "mov x2, x22",
        "sub x24, x0, x2",
        "sub x25, x1, x2",
        "mov x20, x24",
        "mov x21, x25",
        "mov w22, #0x0",
        "mov x5, x22",
        "mov x11, x20",
        "mov x10, x21"
      ]
    },
    "rep movsw": {
      "ExpectedInstructionCount": 89,
      "Comment": "0xa5",
      "ExpectedArm64ASM": [
        "mov x20, x10",
        "mov x21, x11",
        "mov x22, x5",
        "ldrsb x23, [x28, #714]",
        "mov x0, x22",
        "mov x1, x21",
        "mov x2, x20",
        "tbnz w23, #1, #+0x94",
        "cbz x0, #+0x78",
        "sub x3, x1, x2",
        "tbz x3, #63, #+0x8",
        "neg x3, x3",
        "sub x3, x3, #0x20 (32)",
        "tbnz x3, #63, #+0x54",
        "sub x0, x0, #0x10 (16)",
        "tbnz x0, #63, #+0x44",
        "sub x0, x0, #0x10 (16)",
        "tbnz x0, #63, #+0x1c",
        "ldp q0, q1, [x2], #32",
        "stp q0, q1, [x1], #32",
        "ldp q0, q1, [x2], #32",
        "stp q0, q1, [x1], #32",
        "sub x0, x0, #0x20 (32)",
        "tbz x0, #63, #-0x14",
        "add x0, x0, #0x20 (32)",
        "cbz x0, #+0x34",
        "sub x0, x0, #0x10 (16)",
        "tbnz x0, #63, #+0x14",
        "ldp q0, q1, [x2], #32",
        "stp q0, q1, [x1], #32",
        "sub x0, x0, #0x10 (16)",
        "tbz x0, #63, #-0xc",
        "add x0, x0, #0x10 (16)",
        "cbz x0, #+0x14",
        "ldrh w3, [x2], #2",
        "strh w3, [x1], #2",
        "sub x0, x0, #0x1 (1)",
        "cbnz x0, #-0xc",
        "mov x0, x21",
        "mov x1, x20",
        "mov x2, x22",
        "add x24, x0, x2, lsl #1",
        "add x25, x1, x2, lsl #1",
        "b #+0xa0",
        "cbz x0, #+0x88",
        "sub x3, x1, x2",
        "tbz x3, #63, #+0x8",
        "neg x3, x3",
        "sub x3, x3, #0x20 (32)",
        "tbnz x3, #63, #+0x64",
        "sub x1, x1, #0x1e (30)",
        "sub x2, x2, #0x1e (30)",
        "sub x0, x0, #0x10 (16)",
        "tbnz x0, #63, #+0x44",
        "sub x0, x0, #0x10 (16)",
        "tbnz x0, #63, #+0x1c",
        "ldp q0, q1, [x2], #-32",
        "stp q0, q1, [x1], #-32",
        "ldp q0, q1, [x2], #-32",
        "stp q0, q1, [x1], #-32",
        "sub x0, x0, #0x20 (32)",
        "tbz x0, #63, #-0x14",
        "add x0, x0, #0x20 (32)",
        "cbz x0, #+0x3c",
        "sub x0, x0, #0x10 (16)",
        "tbnz x0, #63, #+0x14",
        "ldp q0, q1, [x2], #-32",
        "stp q0, q1, [x1], #-32",
        "sub x0, x0, #0x10 (16)",
        "tbz x0, #63, #-0xc",
        "add x0, x0, #0x10 (16)",
        "cbz x0, #+0x1c",
        "add x1, x1, #0x1e (30)",
        "add x2, x2, #0x1e (30)",
        "ldrh w3, [x2], #-2",
        "strh w3, [x1], #-2",
        "sub x0, x0, #0x1 (1)",
        "cbnz x0, #-0xc",
        "mov x0, x21",
        "mov x1, x20",
        "mov x2, x22",
        "sub x24, x0, x2, lsl #1",
        "sub x25, x1, x2, lsl #1",
        "mov x20, x24",
        "mov x21, x25",
        "mov w22, #0x0",
        "mov x5, x22",
        "mov x11, x20",
        "mov x10, x21"
      ]
    },
    "rep movsd": {
      "ExpectedInstructionCount": 89,
      "Comment": "0xa5",
      "ExpectedArm64ASM": [
        "mov x20, x10",
        "mov x21, x11",
        "mov x22, x5",
        "ldrsb x23, [x28, #714]",
        "mov x0, x22",
        "mov x1, x21",
        "mov x2, x20",
        "tbnz w23, #1, #+0x94",
        "cbz x0, #+0x78",
        "sub x3, x1, x2",
        "tbz x3, #63, #+0x8",
        "neg x3, x3",
        "sub x3, x3, #0x20 (32)",
        "tbnz x3, #63, #+0x54",
        "sub x0, x0, #0x8 (8)",
        "tbnz x0, #63, #+0x44",
        "sub x0, x0, #0x8 (8)",
        "tbnz x0, #63, #+0x1c",
        "ldp q0, q1, [x2], #32",
        "stp q0, q1, [x1], #32",
        "ldp q0, q1, [x2], #32",
        "stp q0, q1, [x1], #32",
        "sub x0, x0, #0x10 (16)",
        "tbz x0, #63, #-0x14",
        "add x0, x0, #0x10 (16)",
        "cbz x0, #+0x34",
        "sub x0, x0, #0x8 (8)",
        "tbnz x0, #63, #+0x14",
        "ldp q0, q1, [x2], #32",
        "stp q0, q1, [x1], #32",
        "sub x0, x0, #0x8 (8)",
        "tbz x0, #63, #-0xc",
        "add x0, x0, #0x8 (8)",
        "cbz x0, #+0x14",
        "ldr w3, [x2], #4",
        "str w3, [x1], #4",
        "sub x0, x0, #0x1 (1)",
        "cbnz x0, #-0xc",
        "mov x0, x21",
        "mov x1, x20",
        "mov x2, x22",
        "add x24, x0, x2, lsl #2",
        "add x25, x1, x2, lsl #2",
        "b #+0xa0",
        "cbz x0, #+0x88",
        "sub x3, x1, x2",
        "tbz x3, #63, #+0x8",
        "neg x3, x3",
        "sub x3, x3, #0x20 (32)",
        "tbnz x3, #63, #+0x64",
        "sub x1, x1, #0x1c (28)",
        "sub x2, x2, #0x1c (28)",
        "sub x0, x0, #0x8 (8)",
        "tbnz x0, #63, #+0x44",
        "sub x0, x0, #0x8 (8)",
        "tbnz x0, #63, #+0x1c",
        "ldp q0, q1, [x2], #-32",
        "stp q0, q1, [x1], #-32",
        "ldp q0, q1, [x2], #-32",
        "stp q0, q1, [x1], #-32",
        "sub x0, x0, #0x10 (16)",
        "tbz x0, #63, #-0x14",
        "add x0, x0, #0x10 (16)",
        "cbz x0, #+0x3c",
        "sub x0, x0, #0x8 (8)",
        "tbnz x0, #63, #+0x14",
        "ldp q0, q1, [x2], #-32",
        "stp q0, q1, [x1], #-32",
        "sub x0, x0, #0x8 (8)",
        "tbz x0, #63, #-0xc",
        "add x0, x0, #0x8 (8)",
        "cbz x0, #+0x1c",
        "add x1, x1, #0x1c (28)",
        "add x2, x2, #0x1c (28)",
        "ldr w3, [x2], #-4",
        "str w3, [x1], #-4",
        "sub x0, x0, #0x1 (1)",
        "cbnz x0, #-0xc",
        "mov x0, x21",
        "mov x1, x20",
        "mov x2, x22",
        "sub x24, x0, x2, lsl #2",
        "sub x25, x1, x2, lsl #2",
        "mov x20, x24",
        "mov x21, x25",
        "mov w22, #0x0",
        "mov x5, x22",
        "mov x11, x20",
        "mov x10, x21"
      ]
    },
    "rep movsq": {
      "ExpectedInstructionCount": 89,
      "Comment": "0xa5",
      "ExpectedArm64ASM": [
        "mov x20, x10",
        "mov x21, x11",
        "mov x22, x5",
        "ldrsb x23, [x28, #714]",
        "mov x0, x22",
        "mov x1, x21",
        "mov x2, x20",
        "tbnz w23, #1, #+0x94",
        "cbz x0, #+0x78",
        "sub x3, x1, x2",
        "tbz x3, #63, #+0x8",
        "neg x3, x3",
        "sub x3, x3, #0x20 (32)",
        "tbnz x3, #63, #+0x54",
        "sub x0, x0, #0x4 (4)",
        "tbnz x0, #63, #+0x44",
        "sub x0, x0, #0x4 (4)",
        "tbnz x0, #63, #+0x1c",
        "ldp q0, q1, [x2], #32",
        "stp q0, q1, [x1], #32",
        "ldp q0, q1, [x2], #32",
        "stp q0, q1, [x1], #32",
        "sub x0, x0, #0x8 (8)",
        "tbz x0, #63, #-0x14",
        "add x0, x0, #0x8 (8)",
        "cbz x0, #+0x34",
        "sub x0, x0, #0x4 (4)",
        "tbnz x0, #63, #+0x14",
        "ldp q0, q1, [x2], #32",
        "stp q0, q1, [x1], #32",
        "sub x0, x0, #0x4 (4)",
        "tbz x0, #63, #-0xc",
        "add x0, x0, #0x4 (4)",
        "cbz x0, #+0x14",
        "ldr x3, [x2], #8",
        "str x3, [x1], #8",
        "sub x0, x0, #0x1 (1)",
        "cbnz x0, #-0xc",
        "mov x0, x21",
        "mov x1, x20",
        "mov x2, x22",
        "add x24, x0, x2, lsl #3",
        "add x25, x1, x2, lsl #3",
        "b #+0xa0",
        "cbz x0, #+0x88",
        "sub x3, x1, x2",
        "tbz x3, #63, #+0x8",
        "neg x3, x3",
        "sub x3, x3, #0x20 (32)",
        "tbnz x3, #63, #+0x64",
        "sub x1, x1, #0x18 (24)",
        "sub x2, x2, #0x18 (24)",
        "sub x0, x0, #0x4 (4)",
        "tbnz x0, #63, #+0x44",
        "sub x0, x0, #0x4 (4)",
        "tbnz x0, #63, #+0x1c",
        "ldp q0, q1, [x2], #-32",
        "stp q0, q1, [x1], #-32",
        "ldp q0, q1, [x2], #-32",
        "stp q0, q1, [x1], #-32",
        "sub x0, x0, #0x8 (8)",
        "tbz x0, #63, #-0x14",
        "add x0, x0, #0x8 (8)",
        "cbz x0, #+0x3c",
        "sub x0, x0, #0x4 (4)",
        "tbnz x0, #63, #+0x14",
        "ldp q0, q1, [x2], #-32",
        "stp q0, q1, [x1], #-32",
        "sub x0, x0, #0x4 (4)",
        "tbz x0, #63, #-0xc",
        "add x0, x0, #0x4 (4)",
        "cbz x0, #+0x1c",
        "add x1, x1, #0x18 (24)",
        "add x2, x2, #0x18 (24)",
        "ldr x3, [x2], #-8",
        "str x3, [x1], #-8",
        "sub x0, x0, #0x1 (1)",
        "cbnz x0, #-0xc",
        "mov x0, x21",
        "mov x1, x20",
        "mov x2, x22",
        "sub x24, x0, x2, lsl #3",
        "sub x25, x1, x2, lsl #3",
        "mov x20, x24",
        "mov x21, x25",
        "mov w22, #0x0",
        "mov x5, x22",
        "mov x11, x20",
        "mov x10, x21"
      ]
    },
    "cmpsb": {
      "ExpectedInstructionCount": 18,
      "Comment": [
        "0xa6"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x10",
        "mov x21, x11",
        "ldrb w22, [x21]",
        "ldrb w23, [x20]",
        "ldrsb x24, [x28, #714]",
        "add x25, x21, x24",
        "mov x11, x25",
        "add x21, x20, x24",
        "mov x10, x21",
        "eor w20, w23, w22",
        "mov x27, x20",
        "lsl w0, w23, #24",
        "cmp w0, w22, lsl #24",
        "sub w20, w23, w22",
        "mov x26, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "cmpsw": {
      "ExpectedInstructionCount": 19,
      "Comment": [
        "0xa7"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x10",
        "mov x21, x11",
        "ldrh w22, [x21]",
        "ldrh w23, [x20]",
        "ldrsb x24, [x28, #714]",
        "lsl x25, x24, #1",
        "add x24, x21, x25",
        "mov x11, x24",
        "add x21, x20, x25",
        "mov x10, x21",
        "eor w20, w23, w22",
        "mov x27, x20",
        "lsl w0, w23, #16",
        "cmp w0, w22, lsl #16",
        "sub w20, w23, w22",
        "mov x26, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "cmpsd": {
      "ExpectedInstructionCount": 17,
      "Comment": [
        "0xa7"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x10",
        "mov x21, x11",
        "ldr w22, [x21]",
        "ldr w23, [x20]",
        "ldrsb x24, [x28, #714]",
        "lsl x25, x24, #2",
        "add x24, x21, x25",
        "mov x11, x24",
        "add x21, x20, x25",
        "mov x10, x21",
        "eor w20, w23, w22",
        "mov x27, x20",
        "subs w20, w23, w22",
        "mov x26, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "cmpsq": {
      "ExpectedInstructionCount": 17,
      "Comment": [
        "0xa7"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x10",
        "mov x21, x11",
        "ldr x22, [x21]",
        "ldr x23, [x20]",
        "ldrsb x24, [x28, #714]",
        "lsl x25, x24, #3",
        "add x24, x21, x25",
        "mov x11, x24",
        "add x21, x20, x25",
        "mov x10, x21",
        "eor w20, w23, w22",
        "mov x27, x20",
        "subs x20, x23, x22",
        "mov x26, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "repz cmpsb": {
      "ExpectedInstructionCount": 48,
      "Comment": "0xa6",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "cbz x20, #+0xbc",
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x44",
        "mov x20, x10",
        "mov x21, x11",
        "ldrb w22, [x21]",
        "ldrb w23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "add x24, x21, #0x1 (1)",
        "mov x11, x24",
        "add x21, x20, #0x1 (1)",
        "mov x10, x21",
        "ccmp x23, x22, #nzcv, ne",
        "b.eq #-0x38",
        "b #+0x40",
        "mov x20, x10",
        "mov x21, x11",
        "ldrb w22, [x21]",
        "ldrb w23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "sub x24, x21, #0x1 (1)",
        "mov x11, x24",
        "sub x21, x20, #0x1 (1)",
        "mov x10, x21",
        "ccmp x23, x22, #nzcv, ne",
        "b.eq #-0x38",
        "mov x20, x26",
        "mov x21, x27",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #24",
        "cmp w0, w20, lsl #24",
        "sub w22, w21, w20",
        "mov x26, x22",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "repz cmpsw": {
      "ExpectedInstructionCount": 48,
      "Comment": "0xa7",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "cbz x20, #+0xbc",
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x44",
        "mov x20, x10",
        "mov x21, x11",
        "ldrh w22, [x21]",
        "ldrh w23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "add x24, x21, #0x2 (2)",
        "mov x11, x24",
        "add x21, x20, #0x2 (2)",
        "mov x10, x21",
        "ccmp x23, x22, #nzcv, ne",
        "b.eq #-0x38",
        "b #+0x40",
        "mov x20, x10",
        "mov x21, x11",
        "ldrh w22, [x21]",
        "ldrh w23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "sub x24, x21, #0x2 (2)",
        "mov x11, x24",
        "sub x21, x20, #0x2 (2)",
        "mov x10, x21",
        "ccmp x23, x22, #nzcv, ne",
        "b.eq #-0x38",
        "mov x20, x26",
        "mov x21, x27",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #16",
        "cmp w0, w20, lsl #16",
        "sub w22, w21, w20",
        "mov x26, x22",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "repz cmpsd": {
      "ExpectedInstructionCount": 46,
      "Comment": "0xa7",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "cbz x20, #+0xb4",
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x44",
        "mov x20, x10",
        "mov x21, x11",
        "ldr w22, [x21]",
        "ldr w23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "add x24, x21, #0x4 (4)",
        "mov x11, x24",
        "add x21, x20, #0x4 (4)",
        "mov x10, x21",
        "ccmp x23, x22, #nzcv, ne",
        "b.eq #-0x38",
        "b #+0x40",
        "mov x20, x10",
        "mov x21, x11",
        "ldr w22, [x21]",
        "ldr w23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "sub x24, x21, #0x4 (4)",
        "mov x11, x24",
        "sub x21, x20, #0x4 (4)",
        "mov x10, x21",
        "ccmp x23, x22, #nzcv, ne",
        "b.eq #-0x38",
        "mov x20, x26",
        "mov x21, x27",
        "eor w22, w21, w20",
        "mov x27, x22",
        "subs w22, w21, w20",
        "mov x26, x22",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "repz cmpsq": {
      "ExpectedInstructionCount": 46,
      "Comment": "0xa7",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "cbz x20, #+0xb4",
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x44",
        "mov x20, x10",
        "mov x21, x11",
        "ldr x22, [x21]",
        "ldr x23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "add x24, x21, #0x8 (8)",
        "mov x11, x24",
        "add x21, x20, #0x8 (8)",
        "mov x10, x21",
        "ccmp x23, x22, #nzcv, ne",
        "b.eq #-0x38",
        "b #+0x40",
        "mov x20, x10",
        "mov x21, x11",
        "ldr x22, [x21]",
        "ldr x23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "sub x24, x21, #0x8 (8)",
        "mov x11, x24",
        "sub x21, x20, #0x8 (8)",
        "mov x10, x21",
        "ccmp x23, x22, #nzcv, ne",
        "b.eq #-0x38",
        "mov x20, x26",
        "mov x21, x27",
        "eor w22, w21, w20",
        "mov x27, x22",
        "subs x22, x21, x20",
        "mov x26, x22",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "repnz cmpsb": {
      "ExpectedInstructionCount": 48,
      "Comment": "0xa6",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "cbz x20, #+0xbc",
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x44",
        "mov x20, x10",
        "mov x21, x11",
        "ldrb w22, [x21]",
        "ldrb w23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "add x24, x21, #0x1 (1)",
        "mov x11, x24",
        "add x21, x20, #0x1 (1)",
        "mov x10, x21",
        "ccmp x23, x22, #nZcv, ne",
        "b.ne #-0x38",
        "b #+0x40",
        "mov x20, x10",
        "mov x21, x11",
        "ldrb w22, [x21]",
        "ldrb w23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "sub x24, x21, #0x1 (1)",
        "mov x11, x24",
        "sub x21, x20, #0x1 (1)",
        "mov x10, x21",
        "ccmp x23, x22, #nZcv, ne",
        "b.ne #-0x38",
        "mov x20, x26",
        "mov x21, x27",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #24",
        "cmp w0, w20, lsl #24",
        "sub w22, w21, w20",
        "mov x26, x22",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "repnz cmpsw": {
      "ExpectedInstructionCount": 48,
      "Comment": "0xa7",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "cbz x20, #+0xbc",
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x44",
        "mov x20, x10",
        "mov x21, x11",
        "ldrh w22, [x21]",
        "ldrh w23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "add x24, x21, #0x2 (2)",
        "mov x11, x24",
        "add x21, x20, #0x2 (2)",
        "mov x10, x21",
        "ccmp x23, x22, #nZcv, ne",
        "b.ne #-0x38",
        "b #+0x40",
        "mov x20, x10",
        "mov x21, x11",
        "ldrh w22, [x21]",
        "ldrh w23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "sub x24, x21, #0x2 (2)",
        "mov x11, x24",
        "sub x21, x20, #0x2 (2)",
        "mov x10, x21",
        "ccmp x23, x22, #nZcv, ne",
        "b.ne #-0x38",
        "mov x20, x26",
        "mov x21, x27",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #16",
        "cmp w0, w20, lsl #16",
        "sub w22, w21, w20",
        "mov x26, x22",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "repnz cmpsd": {
      "ExpectedInstructionCount": 46,
      "Comment": "0xa7",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "cbz x20, #+0xb4",
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x44",
        "mov x20, x10",
        "mov x21, x11",
        "ldr w22, [x21]",
        "ldr w23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "add x24, x21, #0x4 (4)",
        "mov x11, x24",
        "add x21, x20, #0x4 (4)",
        "mov x10, x21",
        "ccmp x23, x22, #nZcv, ne",
        "b.ne #-0x38",
        "b #+0x40",
        "mov x20, x10",
        "mov x21, x11",
        "ldr w22, [x21]",
        "ldr w23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "sub x24, x21, #0x4 (4)",
        "mov x11, x24",
        "sub x21, x20, #0x4 (4)",
        "mov x10, x21",
        "ccmp x23, x22, #nZcv, ne",
        "b.ne #-0x38",
        "mov x20, x26",
        "mov x21, x27",
        "eor w22, w21, w20",
        "mov x27, x22",
        "subs w22, w21, w20",
        "mov x26, x22",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "repnz cmpsq": {
      "ExpectedInstructionCount": 46,
      "Comment": "0xa7",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "cbz x20, #+0xb4",
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x44",
        "mov x20, x10",
        "mov x21, x11",
        "ldr x22, [x21]",
        "ldr x23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "add x24, x21, #0x8 (8)",
        "mov x11, x24",
        "add x21, x20, #0x8 (8)",
        "mov x10, x21",
        "ccmp x23, x22, #nZcv, ne",
        "b.ne #-0x38",
        "b #+0x40",
        "mov x20, x10",
        "mov x21, x11",
        "ldr x22, [x21]",
        "ldr x23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "sub x24, x21, #0x8 (8)",
        "mov x11, x24",
        "sub x21, x20, #0x8 (8)",
        "mov x10, x21",
        "ccmp x23, x22, #nZcv, ne",
        "b.ne #-0x38",
        "mov x20, x26",
        "mov x21, x27",
        "eor w22, w21, w20",
        "mov x27, x22",
        "subs x22, x21, x20",
        "mov x26, x22",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "test al, 1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0xa8",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "and w21, w20, #0x1",
        "cmn wzr, w21, lsl #24",
        "mov x26, x21"
      ]
    },
    "test ax, 1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0xa9",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "and w21, w20, #0x1",
        "cmn wzr, w21, lsl #16",
        "mov x26, x21"
      ]
    },
    "test eax, 1": {
      "ExpectedInstructionCount": 3,
      "Comment": "0xa9",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ands w21, w20, #0x1",
        "mov x26, x21"
      ]
    },
    "test rax, 1": {
      "ExpectedInstructionCount": 3,
      "Comment": "0xa9",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ands x21, x20, #0x1",
        "mov x26, x21"
      ]
    },
    "test al, -1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0xa8",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x20",
        "cmn wzr, w21, lsl #24",
        "mov x26, x21"
      ]
    },
    "test ax, -1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0xa9",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x20",
        "cmn wzr, w21, lsl #16",
        "mov x26, x21"
      ]
    },
    "test eax, -1": {
      "ExpectedInstructionCount": 3,
      "Comment": "0xa9",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ands w21, w20, w20",
        "mov x26, x21"
      ]
    },
    "test rax, -1": {
      "ExpectedInstructionCount": 3,
      "Comment": "0xa9",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ands x21, x20, x20",
        "mov x26, x21"
      ]
    },
    "stosb": {
      "ExpectedInstructionCount": 6,
      "Comment": "0xaa",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x11",
        "strb w20, [x21]",
        "ldrsb x20, [x28, #714]",
        "add x22, x21, x20",
        "mov x11, x22"
      ]
    },
    "stosw": {
      "ExpectedInstructionCount": 6,
      "Comment": "0xab",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x11",
        "strh w20, [x21]",
        "ldrsb x20, [x28, #714]",
        "add x22, x21, x20, lsl #1",
        "mov x11, x22"
      ]
    },
    "stosd": {
      "ExpectedInstructionCount": 6,
      "Comment": "0xab",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x11",
        "str w20, [x21]",
        "ldrsb x20, [x28, #714]",
        "add x22, x21, x20, lsl #2",
        "mov x11, x22"
      ]
    },
    "stosq": {
      "ExpectedInstructionCount": 6,
      "Comment": "0xab",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x11",
        "str x20, [x21]",
        "ldrsb x20, [x28, #714]",
        "add x22, x21, x20, lsl #3",
        "mov x11, x22"
      ]
    },
    "rep stosb": {
      "ExpectedInstructionCount": 60,
      "Comment": "0xaa",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "uxtb w21, w20",
        "mov x20, x11",
        "mov x22, x5",
        "ldrsb x23, [x28, #714]",
        "mov x0, x22",
        "mov x1, x20",
        "tbnz w23, #1, #+0x64",
        "cbz x0, #+0x58",
        "sub x0, x0, #0x20 (32)",
        "tbnz x0, #63, #+0x3c",
        "dup v1.16b, w21",
        "sub x0, x0, #0x20 (32)",
        "tbnz x0, #63, #+0x14",
        "stp q1, q1, [x1], #32",
        "stp q1, q1, [x1], #32",
        "sub x0, x0, #0x40 (64)",
        "tbz x0, #63, #-0xc",
        "add x0, x0, #0x40 (64)",
        "cbz x0, #+0x2c",
        "sub x0, x0, #0x20 (32)",
        "tbnz x0, #63, #+0x10",
        "stp q1, q1, [x1], #32",
        "sub x0, x0, #0x20 (32)",
        "tbz x0, #63, #-0x8",
        "add x0, x0, #0x20 (32)",
        "cbz x0, #+0x10",
        "strb w21, [x1], #1",
        "sub x0, x0, #0x1 (1)",
        "cbnz x0, #-0x8",
        "add x24, x20, x22",
        "b #+0x68",
        "cbz x0, #+0x60",
        "sub x1, x1, #0x1f (31)",
        "sub x0, x0, #0x20 (32)",
        "tbnz x0, #63, #+0x3c",
        "dup v1.16b, w21",
        "sub x0, x0, #0x20 (32)",
        "tbnz x0, #63, #+0x14",
        "stp q1, q1, [x1], #-32",
        "stp q1, q1, [x1], #-32",
        "sub x0, x0, #0x40 (64)",
        "tbz x0, #63, #-0xc",
        "add x0, x0, #0x40 (64)",
        "cbz x0, #+0x30",
        "sub x0, x0, #0x20 (32)",
        "tbnz x0, #63, #+0x10",
        "stp q1, q1, [x1], #-32",
        "sub x0, x0, #0x20 (32)",
        "tbz x0, #63, #-0x8",
        "add x0, x0, #0x20 (32)",
        "cbz x0, #+0x14",
        "add x1, x1, #0x1f (31)",
        "strb w21, [x1], #-1",
        "sub x0, x0, #0x1 (1)",
        "cbnz x0, #-0x8",
        "sub x24, x20, x22",
        "mov w20, #0x0",
        "mov x5, x20",
        "mov x11, x24"
      ]
    },
    "rep stosw": {
      "ExpectedInstructionCount": 60,
      "Comment": "0xab",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "uxth w21, w20",
        "mov x20, x11",
        "mov x22, x5",
        "ldrsb x23, [x28, #714]",
        "mov x0, x22",
        "mov x1, x20",
        "tbnz w23, #1, #+0x64",
        "cbz x0, #+0x58",
        "sub x0, x0, #0x10 (16)",
        "tbnz x0, #63, #+0x3c",
        "dup v1.8h, w21",
        "sub x0, x0, #0x10 (16)",
        "tbnz x0, #63, #+0x14",
        "stp q1, q1, [x1], #32",
        "stp q1, q1, [x1], #32",
        "sub x0, x0, #0x20 (32)",
        "tbz x0, #63, #-0xc",
        "add x0, x0, #0x20 (32)",
        "cbz x0, #+0x2c",
        "sub x0, x0, #0x10 (16)",
        "tbnz x0, #63, #+0x10",
        "stp q1, q1, [x1], #32",
        "sub x0, x0, #0x10 (16)",
        "tbz x0, #63, #-0x8",
        "add x0, x0, #0x10 (16)",
        "cbz x0, #+0x10",
        "strh w21, [x1], #2",
        "sub x0, x0, #0x1 (1)",
        "cbnz x0, #-0x8",
        "add x24, x20, x22, lsl #1",
        "b #+0x68",
        "cbz x0, #+0x60",
        "sub x1, x1, #0x1e (30)",
        "sub x0, x0, #0x10 (16)",
        "tbnz x0, #63, #+0x3c",
        "dup v1.8h, w21",
        "sub x0, x0, #0x10 (16)",
        "tbnz x0, #63, #+0x14",
        "stp q1, q1, [x1], #-32",
        "stp q1, q1, [x1], #-32",
        "sub x0, x0, #0x20 (32)",
        "tbz x0, #63, #-0xc",
        "add x0, x0, #0x20 (32)",
        "cbz x0, #+0x30",
        "sub x0, x0, #0x10 (16)",
        "tbnz x0, #63, #+0x10",
        "stp q1, q1, [x1], #-32",
        "sub x0, x0, #0x10 (16)",
        "tbz x0, #63, #-0x8",
        "add x0, x0, #0x10 (16)",
        "cbz x0, #+0x14",
        "add x1, x1, #0x1e (30)",
        "strh w21, [x1], #-2",
        "sub x0, x0, #0x1 (1)",
        "cbnz x0, #-0x8",
        "sub x24, x20, x22, lsl #1",
        "mov w20, #0x0",
        "mov x5, x20",
        "mov x11, x24"
      ]
    },
    "rep stosd": {
      "ExpectedInstructionCount": 60,
      "Comment": "0xab",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov w21, w20",
        "mov x20, x11",
        "mov x22, x5",
        "ldrsb x23, [x28, #714]",
        "mov x0, x22",
        "mov x1, x20",
        "tbnz w23, #1, #+0x64",
        "cbz x0, #+0x58",
        "sub x0, x0, #0x8 (8)",
        "tbnz x0, #63, #+0x3c",
        "dup v1.4s, w21",
        "sub x0, x0, #0x8 (8)",
        "tbnz x0, #63, #+0x14",
        "stp q1, q1, [x1], #32",
        "stp q1, q1, [x1], #32",
        "sub x0, x0, #0x10 (16)",
        "tbz x0, #63, #-0xc",
        "add x0, x0, #0x10 (16)",
        "cbz x0, #+0x2c",
        "sub x0, x0, #0x8 (8)",
        "tbnz x0, #63, #+0x10",
        "stp q1, q1, [x1], #32",
        "sub x0, x0, #0x8 (8)",
        "tbz x0, #63, #-0x8",
        "add x0, x0, #0x8 (8)",
        "cbz x0, #+0x10",
        "str w21, [x1], #4",
        "sub x0, x0, #0x1 (1)",
        "cbnz x0, #-0x8",
        "add x24, x20, x22, lsl #2",
        "b #+0x68",
        "cbz x0, #+0x60",
        "sub x1, x1, #0x1c (28)",
        "sub x0, x0, #0x8 (8)",
        "tbnz x0, #63, #+0x3c",
        "dup v1.4s, w21",
        "sub x0, x0, #0x8 (8)",
        "tbnz x0, #63, #+0x14",
        "stp q1, q1, [x1], #-32",
        "stp q1, q1, [x1], #-32",
        "sub x0, x0, #0x10 (16)",
        "tbz x0, #63, #-0xc",
        "add x0, x0, #0x10 (16)",
        "cbz x0, #+0x30",
        "sub x0, x0, #0x8 (8)",
        "tbnz x0, #63, #+0x10",
        "stp q1, q1, [x1], #-32",
        "sub x0, x0, #0x8 (8)",
        "tbz x0, #63, #-0x8",
        "add x0, x0, #0x8 (8)",
        "cbz x0, #+0x14",
        "add x1, x1, #0x1c (28)",
        "str w21, [x1], #-4",
        "sub x0, x0, #0x1 (1)",
        "cbnz x0, #-0x8",
        "sub x24, x20, x22, lsl #2",
        "mov w20, #0x0",
        "mov x5, x20",
        "mov x11, x24"
      ]
    },
    "rep stosq": {
      "ExpectedInstructionCount": 59,
      "Comment": [
        "Unrolling the loop for faster memset can be done.",
        "Taking advantage of ARM MOPs instructions can be done",
        "0xab"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x11",
        "mov x22, x5",
        "ldrsb x23, [x28, #714]",
        "mov x0, x22",
        "mov x1, x21",
        "tbnz w23, #1, #+0x64",
        "cbz x0, #+0x58",
        "sub x0, x0, #0x4 (4)",
        "tbnz x0, #63, #+0x3c",
        "dup v1.2d, x20",
        "sub x0, x0, #0x4 (4)",
        "tbnz x0, #63, #+0x14",
        "stp q1, q1, [x1], #32",
        "stp q1, q1, [x1], #32",
        "sub x0, x0, #0x8 (8)",
        "tbz x0, #63, #-0xc",
        "add x0, x0, #0x8 (8)",
        "cbz x0, #+0x2c",
        "sub x0, x0, #0x4 (4)",
        "tbnz x0, #63, #+0x10",
        "stp q1, q1, [x1], #32",
        "sub x0, x0, #0x4 (4)",
        "tbz x0, #63, #-0x8",
        "add x0, x0, #0x4 (4)",
        "cbz x0, #+0x10",
        "str x20, [x1], #8",
        "sub x0, x0, #0x1 (1)",
        "cbnz x0, #-0x8",
        "add x24, x21, x22, lsl #3",
        "b #+0x68",
        "cbz x0, #+0x60",
        "sub x1, x1, #0x18 (24)",
        "sub x0, x0, #0x4 (4)",
        "tbnz x0, #63, #+0x3c",
        "dup v1.2d, x20",
        "sub x0, x0, #0x4 (4)",
        "tbnz x0, #63, #+0x14",
        "stp q1, q1, [x1], #-32",
        "stp q1, q1, [x1], #-32",
        "sub x0, x0, #0x8 (8)",
        "tbz x0, #63, #-0xc",
        "add x0, x0, #0x8 (8)",
        "cbz x0, #+0x30",
        "sub x0, x0, #0x4 (4)",
        "tbnz x0, #63, #+0x10",
        "stp q1, q1, [x1], #-32",
        "sub x0, x0, #0x4 (4)",
        "tbz x0, #63, #-0x8",
        "add x0, x0, #0x4 (4)",
        "cbz x0, #+0x14",
        "add x1, x1, #0x18 (24)",
        "str x20, [x1], #-8",
        "sub x0, x0, #0x1 (1)",
        "cbnz x0, #-0x8",
        "sub x24, x21, x22, lsl #3",
        "mov w20, #0x0",
        "mov x5, x20",
        "mov x11, x24"
      ]
    },
    "lodsb": {
      "ExpectedInstructionCount": 9,
      "Comment": "0xac",
      "ExpectedArm64ASM": [
        "mov x20, x10",
        "ldrb w21, [x20]",
        "mov x22, x4",
        "mov x23, x22",
        "bfxil x23, x21, #0, #8",
        "mov x4, x23",
        "ldrsb x21, [x28, #714]",
        "add x22, x20, x21",
        "mov x10, x22"
      ]
    },
    "lodsw": {
      "ExpectedInstructionCount": 9,
      "Comment": "0xad",
      "ExpectedArm64ASM": [
        "mov x20, x10",
        "ldrh w21, [x20]",
        "mov x22, x4",
        "mov x23, x22",
        "bfxil x23, x21, #0, #16",
        "mov x4, x23",
        "ldrsb x21, [x28, #714]",
        "add x22, x20, x21, lsl #1",
        "mov x10, x22"
      ]
    },
    "lodsd": {
      "ExpectedInstructionCount": 6,
      "Comment": "0xad",
      "ExpectedArm64ASM": [
        "mov x20, x10",
        "ldr w21, [x20]",
        "mov x4, x21",
        "ldrsb x21, [x28, #714]",
        "add x22, x20, x21, lsl #2",
        "mov x10, x22"
      ]
    },
    "lodsq": {
      "ExpectedInstructionCount": 6,
      "Comment": "0xad",
      "ExpectedArm64ASM": [
        "mov x20, x10",
        "ldr x21, [x20]",
        "mov x4, x21",
        "ldrsb x21, [x28, #714]",
        "add x22, x20, x21, lsl #3",
        "mov x10, x22"
      ]
    },
    "rep lodsb": {
      "ExpectedInstructionCount": 33,
      "Comment": "0xac",
      "ExpectedArm64ASM": [
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x40",
        "mov x20, x5",
        "cbz x20, #+0x34",
        "mov x20, x10",
        "ldrb w21, [x20]",
        "mov x22, x4",
        "mov x23, x22",
        "bfxil x23, x21, #0, #8",
        "mov x4, x23",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "add x21, x20, #0x1 (1)",
        "mov x10, x21",
        "b #-0x34",
        "b #+0x3c",
        "mov x20, x5",
        "cbz x20, #+0x34",
        "mov x20, x10",
        "ldrb w21, [x20]",
        "mov x22, x4",
        "mov x23, x22",
        "bfxil x23, x21, #0, #8",
        "mov x4, x23",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "sub x21, x20, #0x1 (1)",
        "mov x10, x21",
        "b #-0x34"
      ]
    },
    "rep lodsw": {
      "ExpectedInstructionCount": 33,
      "Comment": "0xad",
      "ExpectedArm64ASM": [
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x40",
        "mov x20, x5",
        "cbz x20, #+0x34",
        "mov x20, x10",
        "ldrh w21, [x20]",
        "mov x22, x4",
        "mov x23, x22",
        "bfxil x23, x21, #0, #16",
        "mov x4, x23",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "add x21, x20, #0x2 (2)",
        "mov x10, x21",
        "b #-0x34",
        "b #+0x3c",
        "mov x20, x5",
        "cbz x20, #+0x34",
        "mov x20, x10",
        "ldrh w21, [x20]",
        "mov x22, x4",
        "mov x23, x22",
        "bfxil x23, x21, #0, #16",
        "mov x4, x23",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "sub x21, x20, #0x2 (2)",
        "mov x10, x21",
        "b #-0x34"
      ]
    },
    "rep lodsd": {
      "ExpectedInstructionCount": 27,
      "Comment": "0xad",
      "ExpectedArm64ASM": [
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x34",
        "mov x20, x5",
        "cbz x20, #+0x28",
        "mov x20, x10",
        "ldr w21, [x20]",
        "mov x4, x21",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "add x21, x20, #0x4 (4)",
        "mov x10, x21",
        "b #-0x28",
        "b #+0x30",
        "mov x20, x5",
        "cbz x20, #+0x28",
        "mov x20, x10",
        "ldr w21, [x20]",
        "mov x4, x21",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "sub x21, x20, #0x4 (4)",
        "mov x10, x21",
        "b #-0x28"
      ]
    },
    "rep lodsq": {
      "ExpectedInstructionCount": 27,
      "Comment": "0xad",
      "ExpectedArm64ASM": [
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x34",
        "mov x20, x5",
        "cbz x20, #+0x28",
        "mov x20, x10",
        "ldr x21, [x20]",
        "mov x4, x21",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "add x21, x20, #0x8 (8)",
        "mov x10, x21",
        "b #-0x28",
        "b #+0x30",
        "mov x20, x5",
        "cbz x20, #+0x28",
        "mov x20, x10",
        "ldr x21, [x20]",
        "mov x4, x21",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "sub x21, x20, #0x8 (8)",
        "mov x10, x21",
        "b #-0x28"
      ]
    },
    "scasb": {
      "ExpectedInstructionCount": 15,
      "Comment": "0xae",
      "ExpectedArm64ASM": [
        "mov x20, x11",
        "mov x21, x4",
        "ldrb w22, [x20]",
        "ldrsb x23, [x28, #714]",
        "add x24, x20, x23",
        "mov x11, x24",
        "eor w20, w21, w22",
        "mov x27, x20",
        "lsl w0, w21, #24",
        "cmp w0, w22, lsl #24",
        "sub w20, w21, w22",
        "mov x26, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "scasw": {
      "ExpectedInstructionCount": 15,
      "Comment": "0xaf",
      "ExpectedArm64ASM": [
        "mov x20, x11",
        "mov x21, x4",
        "ldrh w22, [x20]",
        "ldrsb x23, [x28, #714]",
        "add x24, x20, x23, lsl #1",
        "mov x11, x24",
        "eor w20, w21, w22",
        "mov x27, x20",
        "lsl w0, w21, #16",
        "cmp w0, w22, lsl #16",
        "sub w20, w21, w22",
        "mov x26, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "scasd": {
      "ExpectedInstructionCount": 13,
      "Comment": "0xaf",
      "ExpectedArm64ASM": [
        "mov x20, x11",
        "mov x21, x4",
        "ldr w22, [x20]",
        "ldrsb x23, [x28, #714]",
        "add x24, x20, x23, lsl #2",
        "mov x11, x24",
        "eor w20, w21, w22",
        "mov x27, x20",
        "subs w20, w21, w22",
        "mov x26, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "scasq": {
      "ExpectedInstructionCount": 13,
      "Comment": "0xaf",
      "ExpectedArm64ASM": [
        "mov x20, x11",
        "mov x21, x4",
        "ldr x22, [x20]",
        "ldrsb x23, [x28, #714]",
        "add x24, x20, x23, lsl #3",
        "mov x11, x24",
        "eor w20, w21, w22",
        "mov x27, x20",
        "subs x20, x21, x22",
        "mov x26, x20",
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "repz scasb": {
      "ExpectedInstructionCount": 45,
      "Comment": "0xae",
      "ExpectedArm64ASM": [
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x58",
        "mov x20, x5",
        "cbz x20, #+0x4c",
        "mov x20, x11",
        "mov x21, x4",
        "ldrb w22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "lsl w0, w21, #24",
        "cmp w0, w22, lsl #24",
        "sub w23, w21, w22",
        "mov x26, x23",
        "mrs x21, nzcv",
        "eor w22, w21, #0x20000000",
        "msr nzcv, x22",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "add x21, x20, #0x1 (1)",
        "mov x11, x21",
        "b.eq #-0x4c",
        "b #+0x54",
        "mov x20, x5",
        "cbz x20, #+0x4c",
        "mov x20, x11",
        "mov x21, x4",
        "ldrb w22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "lsl w0, w21, #24",
        "cmp w0, w22, lsl #24",
        "sub w23, w21, w22",
        "mov x26, x23",
        "mrs x21, nzcv",
        "eor w22, w21, #0x20000000",
        "msr nzcv, x22",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "sub x21, x20, #0x1 (1)",
        "mov x11, x21",
        "b.eq #-0x4c"
      ]
    },
    "repz scasw": {
      "ExpectedInstructionCount": 45,
      "Comment": "0xaf",
      "ExpectedArm64ASM": [
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x58",
        "mov x20, x5",
        "cbz x20, #+0x4c",
        "mov x20, x11",
        "mov x21, x4",
        "ldrh w22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "lsl w0, w21, #16",
        "cmp w0, w22, lsl #16",
        "sub w23, w21, w22",
        "mov x26, x23",
        "mrs x21, nzcv",
        "eor w22, w21, #0x20000000",
        "msr nzcv, x22",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "add x21, x20, #0x2 (2)",
        "mov x11, x21",
        "b.eq #-0x4c",
        "b #+0x54",
        "mov x20, x5",
        "cbz x20, #+0x4c",
        "mov x20, x11",
        "mov x21, x4",
        "ldrh w22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "lsl w0, w21, #16",
        "cmp w0, w22, lsl #16",
        "sub w23, w21, w22",
        "mov x26, x23",
        "mrs x21, nzcv",
        "eor w22, w21, #0x20000000",
        "msr nzcv, x22",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "sub x21, x20, #0x2 (2)",
        "mov x11, x21",
        "b.eq #-0x4c"
      ]
    },
    "repz scasd": {
      "ExpectedInstructionCount": 41,
      "Comment": "0xaf",
      "ExpectedArm64ASM": [
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x50",
        "mov x20, x5",
        "cbz x20, #+0x44",
        "mov x20, x11",
        "mov x21, x4",
        "ldr w22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "subs w23, w21, w22",
        "mov x26, x23",
        "mrs x21, nzcv",
        "eor w22, w21, #0x20000000",
        "msr nzcv, x22",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "add x21, x20, #0x4 (4)",
        "mov x11, x21",
        "b.eq #-0x44",
        "b #+0x4c",
        "mov x20, x5",
        "cbz x20, #+0x44",
        "mov x20, x11",
        "mov x21, x4",
        "ldr w22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "subs w23, w21, w22",
        "mov x26, x23",
        "mrs x21, nzcv",
        "eor w22, w21, #0x20000000",
        "msr nzcv, x22",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "sub x21, x20, #0x4 (4)",
        "mov x11, x21",
        "b.eq #-0x44"
      ]
    },
    "repz scasq": {
      "ExpectedInstructionCount": 41,
      "Comment": "0xaf",
      "ExpectedArm64ASM": [
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x50",
        "mov x20, x5",
        "cbz x20, #+0x44",
        "mov x20, x11",
        "mov x21, x4",
        "ldr x22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "subs x23, x21, x22",
        "mov x26, x23",
        "mrs x21, nzcv",
        "eor w22, w21, #0x20000000",
        "msr nzcv, x22",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "add x21, x20, #0x8 (8)",
        "mov x11, x21",
        "b.eq #-0x44",
        "b #+0x4c",
        "mov x20, x5",
        "cbz x20, #+0x44",
        "mov x20, x11",
        "mov x21, x4",
        "ldr x22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "subs x23, x21, x22",
        "mov x26, x23",
        "mrs x21, nzcv",
        "eor w22, w21, #0x20000000",
        "msr nzcv, x22",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "sub x21, x20, #0x8 (8)",
        "mov x11, x21",
        "b.eq #-0x44"
      ]
    },
    "repnz scasb": {
      "ExpectedInstructionCount": 45,
      "Comment": "0xae",
      "ExpectedArm64ASM": [
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x58",
        "mov x20, x5",
        "cbz x20, #+0x4c",
        "mov x20, x11",
        "mov x21, x4",
        "ldrb w22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "lsl w0, w21, #24",
        "cmp w0, w22, lsl #24",
        "sub w23, w21, w22",
        "mov x26, x23",
        "mrs x21, nzcv",
        "eor w22, w21, #0x20000000",
        "msr nzcv, x22",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "add x21, x20, #0x1 (1)",
        "mov x11, x21",
        "b.ne #-0x4c",
        "b #+0x54",
        "mov x20, x5",
        "cbz x20, #+0x4c",
        "mov x20, x11",
        "mov x21, x4",
        "ldrb w22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "lsl w0, w21, #24",
        "cmp w0, w22, lsl #24",
        "sub w23, w21, w22",
        "mov x26, x23",
        "mrs x21, nzcv",
        "eor w22, w21, #0x20000000",
        "msr nzcv, x22",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "sub x21, x20, #0x1 (1)",
        "mov x11, x21",
        "b.ne #-0x4c"
      ]
    },
    "repnz scasw": {
      "ExpectedInstructionCount": 45,
      "Comment": "0xaf",
      "ExpectedArm64ASM": [
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x58",
        "mov x20, x5",
        "cbz x20, #+0x4c",
        "mov x20, x11",
        "mov x21, x4",
        "ldrh w22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "lsl w0, w21, #16",
        "cmp w0, w22, lsl #16",
        "sub w23, w21, w22",
        "mov x26, x23",
        "mrs x21, nzcv",
        "eor w22, w21, #0x20000000",
        "msr nzcv, x22",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "add x21, x20, #0x2 (2)",
        "mov x11, x21",
        "b.ne #-0x4c",
        "b #+0x54",
        "mov x20, x5",
        "cbz x20, #+0x4c",
        "mov x20, x11",
        "mov x21, x4",
        "ldrh w22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "lsl w0, w21, #16",
        "cmp w0, w22, lsl #16",
        "sub w23, w21, w22",
        "mov x26, x23",
        "mrs x21, nzcv",
        "eor w22, w21, #0x20000000",
        "msr nzcv, x22",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "sub x21, x20, #0x2 (2)",
        "mov x11, x21",
        "b.ne #-0x4c"
      ]
    },
    "repnz scasd": {
      "ExpectedInstructionCount": 41,
      "Comment": "0xaf",
      "ExpectedArm64ASM": [
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x50",
        "mov x20, x5",
        "cbz x20, #+0x44",
        "mov x20, x11",
        "mov x21, x4",
        "ldr w22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "subs w23, w21, w22",
        "mov x26, x23",
        "mrs x21, nzcv",
        "eor w22, w21, #0x20000000",
        "msr nzcv, x22",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "add x21, x20, #0x4 (4)",
        "mov x11, x21",
        "b.ne #-0x44",
        "b #+0x4c",
        "mov x20, x5",
        "cbz x20, #+0x44",
        "mov x20, x11",
        "mov x21, x4",
        "ldr w22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "subs w23, w21, w22",
        "mov x26, x23",
        "mrs x21, nzcv",
        "eor w22, w21, #0x20000000",
        "msr nzcv, x22",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "sub x21, x20, #0x4 (4)",
        "mov x11, x21",
        "b.ne #-0x44"
      ]
    },
    "repnz scasq": {
      "ExpectedInstructionCount": 41,
      "Comment": "0xaf",
      "ExpectedArm64ASM": [
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x50",
        "mov x20, x5",
        "cbz x20, #+0x44",
        "mov x20, x11",
        "mov x21, x4",
        "ldr x22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "subs x23, x21, x22",
        "mov x26, x23",
        "mrs x21, nzcv",
        "eor w22, w21, #0x20000000",
        "msr nzcv, x22",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "add x21, x20, #0x8 (8)",
        "mov x11, x21",
        "b.ne #-0x44",
        "b #+0x4c",
        "mov x20, x5",
        "cbz x20, #+0x44",
        "mov x20, x11",
        "mov x21, x4",
        "ldr x22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "subs x23, x21, x22",
        "mov x26, x23",
        "mrs x21, nzcv",
        "eor w22, w21, #0x20000000",
        "msr nzcv, x22",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "sub x21, x20, #0x8 (8)",
        "mov x11, x21",
        "b.ne #-0x44"
      ]
    },
    "mov al, 0xff": {
      "ExpectedInstructionCount": 3,
      "Comment": "0xb0",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "orr x21, x20, #0xff",
        "mov x4, x21"
      ]
    },
    "mov al, 0x82": {
      "ExpectedInstructionCount": 5,
      "Comment": "0xb0",
      "ExpectedArm64ASM": [
        "mov w20, #0x82",
        "mov x21, x4",
        "mov x22, x21",
        "bfxil x22, x20, #0, #8",
        "mov x4, x22"
      ]
    },
    "mov ax, 0xffff": {
      "ExpectedInstructionCount": 3,
      "Comment": "0xb8",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "orr x21, x20, #0xffff",
        "mov x4, x21"
      ]
    },
    "mov ax, 0x4243": {
      "ExpectedInstructionCount": 5,
      "Comment": "0xb8",
      "ExpectedArm64ASM": [
        "mov w20, #0x4243",
        "mov x21, x4",
        "mov x22, x21",
        "bfxil x22, x20, #0, #16",
        "mov x4, x22"
      ]
    },
    "mov eax, 0xffffffff": {
      "ExpectedInstructionCount": 2,
      "Comment": [
        "movz+movk doesn't turn in to bitfield move",
        "0xb8"
      ],
      "ExpectedArm64ASM": [
        "mov w20, #0xffffffff",
        "mov x4, x20"
      ]
    },
    "mov eax, 0x44454647": {
      "ExpectedInstructionCount": 3,
      "Comment": "0xb8",
      "ExpectedArm64ASM": [
        "mov w20, #0x4647",
        "movk w20, #0x4445, lsl #16",
        "mov x4, x20"
      ]
    },
    "mov rax, 0xffffffffffffffff": {
      "ExpectedInstructionCount": 2,
      "Comment": "0xb8",
      "ExpectedArm64ASM": [
        "mov x20, #0xffffffffffffffff",
        "mov x4, x20"
      ]
    },
    "mov rax, 0x5152535455565758": {
      "ExpectedInstructionCount": 5,
      "Comment": "0xb8",
      "ExpectedArm64ASM": [
        "mov x20, #0x5758",
        "movk x20, #0x5556, lsl #16",
        "movk x20, #0x5354, lsl #32",
        "movk x20, #0x5152, lsl #48",
        "mov x4, x20"
      ]
    },
    "xlat": {
      "ExpectedInstructionCount": 7,
      "Comment": "0xd7",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "uxtb w22, w21",
        "ldrb w23, [x20, x22, sxtx]",
        "mov x20, x21",
        "bfxil x20, x23, #0, #8",
        "mov x4, x20"
      ]
    },
    "cmc": {
      "ExpectedInstructionCount": 3,
      "Comment": "0xf5",
      "ExpectedArm64ASM": [
        "mrs x20, nzcv",
        "eor w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "clc": {
      "ExpectedInstructionCount": 3,
      "Comment": "0xf8",
      "ExpectedArm64ASM": [
        "mrs x20, nzcv",
        "and w21, w20, #0xdfffffff",
        "msr nzcv, x21"
      ]
    },
    "stc": {
      "ExpectedInstructionCount": 3,
      "Comment": "0xf9",
      "ExpectedArm64ASM": [
        "mrs x20, nzcv",
        "orr w21, w20, #0x20000000",
        "msr nzcv, x21"
      ]
    },
    "cli": {
      "ExpectedInstructionCount": 7,
      "Skip": "Yes",
      "Comment": "0xfa"
    },
    "sti": {
      "ExpectedInstructionCount": 7,
      "Skip": "Yes",
      "Comment": "0xfb"
    },
    "cld": {
      "ExpectedInstructionCount": 2,
      "Comment": "0xfc",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "strb w20, [x28, #714]"
      ]
    },
    "std": {
      "ExpectedInstructionCount": 2,
      "Comment": "0xfd",
      "ExpectedArm64ASM": [
        "mov x20, #0xffffffffffffffff",
        "strb w20, [x28, #714]"
      ]
    }
  }
}
