{
  "Features": {
    "Bitness": 64,
    "EnabledHostFeatures": [
      "FLAGM",
      "FLAGM2",
      "RNG"
    ],
    "DisabledHostFeatures": [
      "SVE128",
      "SVE256"
    ]
  },
  "Instructions": {
    "sgdt [rax]": {
      "ExpectedInstructionCount": 5,
      "Comment": "GROUP7 0x0F 0x1 /0",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov w21, #0x0",
        "strh w21, [x20]",
        "mov x21, #0xfffffffffffe0000",
        "stur x21, [x20, #2]"
      ]
    },
    "bt ax, 0": {
      "ExpectedInstructionCount": 2,
      "Comment": "GROUP8 0x0F 0xBA /4",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "rmif x20, #63, #nzCv"
      ]
    },
    "bt eax, 0": {
      "ExpectedInstructionCount": 2,
      "Comment": "GROUP8 0x0F 0xBA /4",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "rmif x20, #63, #nzCv"
      ]
    },
    "bt rax, 0": {
      "ExpectedInstructionCount": 2,
      "Comment": "GROUP8 0x0F 0xBA /4",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "rmif x20, #63, #nzCv"
      ]
    },
    "bt ax, 15": {
      "ExpectedInstructionCount": 2,
      "Comment": "GROUP8 0x0F 0xBA /4",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "rmif x20, #14, #nzCv"
      ]
    },
    "bt eax, 31": {
      "ExpectedInstructionCount": 2,
      "Comment": "GROUP8 0x0F 0xBA /4",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "rmif x20, #30, #nzCv"
      ]
    },
    "bt rax, 63": {
      "ExpectedInstructionCount": 2,
      "Comment": "GROUP8 0x0F 0xBA /4",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "rmif x20, #62, #nzCv"
      ]
    },
    "bt word [rax], 0": {
      "ExpectedInstructionCount": 3,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20]",
        "rmif x21, #63, #nzCv"
      ]
    },
    "bt dword [rax], 0": {
      "ExpectedInstructionCount": 3,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20]",
        "rmif x21, #63, #nzCv"
      ]
    },
    "bt qword [rax], 0": {
      "ExpectedInstructionCount": 3,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20]",
        "rmif x21, #63, #nzCv"
      ]
    },
    "bt word [rax], 15": {
      "ExpectedInstructionCount": 4,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20, #1]",
        "lsr w20, w21, #7",
        "rmif x20, #63, #nzCv"
      ]
    },
    "bt dword [rax], 31": {
      "ExpectedInstructionCount": 4,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20, #3]",
        "lsr w20, w21, #7",
        "rmif x20, #63, #nzCv"
      ]
    },
    "bt qword [rax], 63": {
      "ExpectedInstructionCount": 4,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20, #7]",
        "lsr w20, w21, #7",
        "rmif x20, #63, #nzCv"
      ]
    },
    "bts ax, 0": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP8 0x0F 0xBA /5",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "rmif x20, #63, #nzCv",
        "orr w21, w20, #0x1",
        "mov x22, x20",
        "bfxil x22, x21, #0, #16",
        "mov x4, x22"
      ]
    },
    "bts eax, 0": {
      "ExpectedInstructionCount": 4,
      "Comment": "GROUP8 0x0F 0xBA /5",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "rmif x20, #63, #nzCv",
        "orr w21, w20, #0x1",
        "mov x4, x21"
      ]
    },
    "bts rax, 0": {
      "ExpectedInstructionCount": 4,
      "Comment": "GROUP8 0x0F 0xBA /5",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "rmif x20, #63, #nzCv",
        "orr x21, x20, #0x1",
        "mov x4, x21"
      ]
    },
    "bts ax, 15": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP8 0x0F 0xBA /5",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "rmif x20, #14, #nzCv",
        "orr w21, w20, #0x8000",
        "mov x22, x20",
        "bfxil x22, x21, #0, #16",
        "mov x4, x22"
      ]
    },
    "bts eax, 31": {
      "ExpectedInstructionCount": 4,
      "Comment": "GROUP8 0x0F 0xBA /5",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "rmif x20, #30, #nzCv",
        "orr w21, w20, #0x80000000",
        "mov x4, x21"
      ]
    },
    "bts rax, 63": {
      "ExpectedInstructionCount": 4,
      "Comment": "GROUP8 0x0F 0xBA /5",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "rmif x20, #62, #nzCv",
        "orr x21, x20, #0x8000000000000000",
        "mov x4, x21"
      ]
    },
    "bts word [rax], 0": {
      "ExpectedInstructionCount": 5,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20]",
        "orr x22, x21, #0x1",
        "strb w22, [x20]",
        "rmif x21, #63, #nzCv"
      ]
    },
    "bts dword [rax], 0": {
      "ExpectedInstructionCount": 5,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20]",
        "orr x22, x21, #0x1",
        "strb w22, [x20]",
        "rmif x21, #63, #nzCv"
      ]
    },
    "bts qword [rax], 0": {
      "ExpectedInstructionCount": 5,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20]",
        "orr x22, x21, #0x1",
        "strb w22, [x20]",
        "rmif x21, #63, #nzCv"
      ]
    },
    "bts word [rax], 15": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20, #1]",
        "orr x22, x21, #0x80",
        "strb w22, [x20, #1]",
        "lsr w20, w21, #7",
        "rmif x20, #63, #nzCv"
      ]
    },
    "bts dword [rax], 31": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20, #3]",
        "orr x22, x21, #0x80",
        "strb w22, [x20, #3]",
        "lsr w20, w21, #7",
        "rmif x20, #63, #nzCv"
      ]
    },
    "bts qword [rax], 63": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20, #7]",
        "orr x22, x21, #0x80",
        "strb w22, [x20, #7]",
        "lsr w20, w21, #7",
        "rmif x20, #63, #nzCv"
      ]
    },
    "lock bts word [rax], 0": {
      "ExpectedInstructionCount": 5,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "add x21, x20, #0x0 (0)",
        "mov w20, #0x1",
        "ldsetalb w20, w22, [x21]",
        "rmif x22, #63, #nzCv"
      ]
    },
    "lock bts dword [rax], 0": {
      "ExpectedInstructionCount": 5,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "add x21, x20, #0x0 (0)",
        "mov w20, #0x1",
        "ldsetalb w20, w22, [x21]",
        "rmif x22, #63, #nzCv"
      ]
    },
    "lock bts qword [rax], 0": {
      "ExpectedInstructionCount": 5,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "add x21, x20, #0x0 (0)",
        "mov w20, #0x1",
        "ldsetalb w20, w22, [x21]",
        "rmif x22, #63, #nzCv"
      ]
    },
    "lock bts word [rax], 15": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "add x21, x20, #0x1 (1)",
        "mov w20, #0x80",
        "ldsetalb w20, w22, [x21]",
        "lsr w20, w22, #7",
        "rmif x20, #63, #nzCv"
      ]
    },
    "lock bts dword [rax], 31": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "add x21, x20, #0x3 (3)",
        "mov w20, #0x80",
        "ldsetalb w20, w22, [x21]",
        "lsr w20, w22, #7",
        "rmif x20, #63, #nzCv"
      ]
    },
    "lock bts qword [rax], 63": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "add x21, x20, #0x7 (7)",
        "mov w20, #0x80",
        "ldsetalb w20, w22, [x21]",
        "lsr w20, w22, #7",
        "rmif x20, #63, #nzCv"
      ]
    },
    "btr ax, 0": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "rmif x20, #63, #nzCv",
        "and w21, w20, #0xfffffffe",
        "mov x22, x20",
        "bfxil x22, x21, #0, #16",
        "mov x4, x22"
      ]
    },
    "btr eax, 0": {
      "ExpectedInstructionCount": 4,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "rmif x20, #63, #nzCv",
        "and w21, w20, #0xfffffffe",
        "mov x4, x21"
      ]
    },
    "btr rax, 0": {
      "ExpectedInstructionCount": 4,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "rmif x20, #63, #nzCv",
        "and x21, x20, #0xfffffffffffffffe",
        "mov x4, x21"
      ]
    },
    "btr ax, 15": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "rmif x20, #14, #nzCv",
        "and w21, w20, #0xffff7fff",
        "mov x22, x20",
        "bfxil x22, x21, #0, #16",
        "mov x4, x22"
      ]
    },
    "btr eax, 31": {
      "ExpectedInstructionCount": 4,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "rmif x20, #30, #nzCv",
        "and w21, w20, #0x7fffffff",
        "mov x4, x21"
      ]
    },
    "btr rax, 63": {
      "ExpectedInstructionCount": 4,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "rmif x20, #62, #nzCv",
        "and x21, x20, #0x7fffffffffffffff",
        "mov x4, x21"
      ]
    },
    "btr word [rax], 0": {
      "ExpectedInstructionCount": 5,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20]",
        "and x22, x21, #0xfffffffffffffffe",
        "strb w22, [x20]",
        "rmif x21, #63, #nzCv"
      ]
    },
    "btr dword [rax], 0": {
      "ExpectedInstructionCount": 5,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20]",
        "and x22, x21, #0xfffffffffffffffe",
        "strb w22, [x20]",
        "rmif x21, #63, #nzCv"
      ]
    },
    "btr qword [rax], 0": {
      "ExpectedInstructionCount": 5,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20]",
        "and x22, x21, #0xfffffffffffffffe",
        "strb w22, [x20]",
        "rmif x21, #63, #nzCv"
      ]
    },
    "btr word [rax], 15": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20, #1]",
        "and x22, x21, #0xffffffffffffff7f",
        "strb w22, [x20, #1]",
        "lsr w20, w21, #7",
        "rmif x20, #63, #nzCv"
      ]
    },
    "btr dword [rax], 31": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20, #3]",
        "and x22, x21, #0xffffffffffffff7f",
        "strb w22, [x20, #3]",
        "lsr w20, w21, #7",
        "rmif x20, #63, #nzCv"
      ]
    },
    "btr qword [rax], 63": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20, #7]",
        "and x22, x21, #0xffffffffffffff7f",
        "strb w22, [x20, #7]",
        "lsr w20, w21, #7",
        "rmif x20, #63, #nzCv"
      ]
    },
    "lock btr word [rax], 0": {
      "ExpectedInstructionCount": 5,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "add x21, x20, #0x0 (0)",
        "mov w20, #0x1",
        "ldclralb w20, w22, [x21]",
        "rmif x22, #63, #nzCv"
      ]
    },
    "lock btr dword [rax], 0": {
      "ExpectedInstructionCount": 5,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "add x21, x20, #0x0 (0)",
        "mov w20, #0x1",
        "ldclralb w20, w22, [x21]",
        "rmif x22, #63, #nzCv"
      ]
    },
    "lock btr qword [rax], 0": {
      "ExpectedInstructionCount": 5,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "add x21, x20, #0x0 (0)",
        "mov w20, #0x1",
        "ldclralb w20, w22, [x21]",
        "rmif x22, #63, #nzCv"
      ]
    },
    "lock btr word [rax], 15": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "add x21, x20, #0x1 (1)",
        "mov w20, #0x80",
        "ldclralb w20, w22, [x21]",
        "lsr w20, w22, #7",
        "rmif x20, #63, #nzCv"
      ]
    },
    "lock btr dword [rax], 31": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "add x21, x20, #0x3 (3)",
        "mov w20, #0x80",
        "ldclralb w20, w22, [x21]",
        "lsr w20, w22, #7",
        "rmif x20, #63, #nzCv"
      ]
    },
    "lock btr qword [rax], 63": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "add x21, x20, #0x7 (7)",
        "mov w20, #0x80",
        "ldclralb w20, w22, [x21]",
        "lsr w20, w22, #7",
        "rmif x20, #63, #nzCv"
      ]
    },
    "btc ax, 0": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP8 0x0F 0xBA /7",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "rmif x20, #63, #nzCv",
        "eor w21, w20, #0x1",
        "mov x22, x20",
        "bfxil x22, x21, #0, #16",
        "mov x4, x22"
      ]
    },
    "btc eax, 0": {
      "ExpectedInstructionCount": 4,
      "Comment": "GROUP8 0x0F 0xBA /7",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "rmif x20, #63, #nzCv",
        "eor w21, w20, #0x1",
        "mov x4, x21"
      ]
    },
    "btc rax, 0": {
      "ExpectedInstructionCount": 4,
      "Comment": "GROUP8 0x0F 0xBA /7",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "rmif x20, #63, #nzCv",
        "eor x21, x20, #0x1",
        "mov x4, x21"
      ]
    },
    "btc ax, 15": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP8 0x0F 0xBA /7",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "rmif x20, #14, #nzCv",
        "eor w21, w20, #0x8000",
        "mov x22, x20",
        "bfxil x22, x21, #0, #16",
        "mov x4, x22"
      ]
    },
    "btc eax, 31": {
      "ExpectedInstructionCount": 4,
      "Comment": "GROUP8 0x0F 0xBA /7",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "rmif x20, #30, #nzCv",
        "eor w21, w20, #0x80000000",
        "mov x4, x21"
      ]
    },
    "btc rax, 63": {
      "ExpectedInstructionCount": 4,
      "Comment": "GROUP8 0x0F 0xBA /7",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "rmif x20, #62, #nzCv",
        "eor x21, x20, #0x8000000000000000",
        "mov x4, x21"
      ]
    },
    "btc word [rax], 0": {
      "ExpectedInstructionCount": 5,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20]",
        "eor x22, x21, #0x1",
        "strb w22, [x20]",
        "rmif x21, #63, #nzCv"
      ]
    },
    "btc dword [rax], 0": {
      "ExpectedInstructionCount": 5,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20]",
        "eor x22, x21, #0x1",
        "strb w22, [x20]",
        "rmif x21, #63, #nzCv"
      ]
    },
    "btc qword [rax], 0": {
      "ExpectedInstructionCount": 5,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20]",
        "eor x22, x21, #0x1",
        "strb w22, [x20]",
        "rmif x21, #63, #nzCv"
      ]
    },
    "btc word [rax], 15": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20, #1]",
        "eor x22, x21, #0x80",
        "strb w22, [x20, #1]",
        "lsr w20, w21, #7",
        "rmif x20, #63, #nzCv"
      ]
    },
    "btc dword [rax], 31": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20, #3]",
        "eor x22, x21, #0x80",
        "strb w22, [x20, #3]",
        "lsr w20, w21, #7",
        "rmif x20, #63, #nzCv"
      ]
    },
    "btc qword [rax], 63": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrb w21, [x20, #7]",
        "eor x22, x21, #0x80",
        "strb w22, [x20, #7]",
        "lsr w20, w21, #7",
        "rmif x20, #63, #nzCv"
      ]
    },
    "lock btc word [rax], 0": {
      "ExpectedInstructionCount": 5,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "add x21, x20, #0x0 (0)",
        "mov w20, #0x1",
        "ldeoralb w20, w22, [x21]",
        "rmif x22, #63, #nzCv"
      ]
    },
    "lock btc dword [rax], 0": {
      "ExpectedInstructionCount": 5,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "add x21, x20, #0x0 (0)",
        "mov w20, #0x1",
        "ldeoralb w20, w22, [x21]",
        "rmif x22, #63, #nzCv"
      ]
    },
    "lock btc qword [rax], 0": {
      "ExpectedInstructionCount": 5,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "add x21, x20, #0x0 (0)",
        "mov w20, #0x1",
        "ldeoralb w20, w22, [x21]",
        "rmif x22, #63, #nzCv"
      ]
    },
    "lock btc word [rax], 15": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "add x21, x20, #0x1 (1)",
        "mov w20, #0x80",
        "ldeoralb w20, w22, [x21]",
        "lsr w20, w22, #7",
        "rmif x20, #63, #nzCv"
      ]
    },
    "lock btc dword [rax], 31": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "add x21, x20, #0x3 (3)",
        "mov w20, #0x80",
        "ldeoralb w20, w22, [x21]",
        "lsr w20, w22, #7",
        "rmif x20, #63, #nzCv"
      ]
    },
    "lock btc qword [rax], 63": {
      "ExpectedInstructionCount": 6,
      "Comment": "GROUP8 0x0F 0xBA /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "add x21, x20, #0x7 (7)",
        "mov w20, #0x80",
        "ldeoralb w20, w22, [x21]",
        "lsr w20, w22, #7",
        "rmif x20, #63, #nzCv"
      ]
    },
    "cmpxchg8b [rbp]": {
      "ExpectedInstructionCount": 38,
      "Comment": "GROUP9 0x0F 0xC7 /1",
      "ExpectedArm64ASM": [
        "sub sp, sp, #0x40 (64)",
        "mov x20, x9",
        "add x21, x20, #0x0 (0)",
        "mov x20, x4",
        "mov w22, w20",
        "mov x23, x6",
        "mov w24, w23",
        "mov x30, x24",
        "mov w24, w22",
        "mov w25, w30",
        "mov x22, x7",
        "mov w30, w22",
        "mov x22, x5",
        "str x23, [sp]",
        "mov w23, w22",
        "str x20, [sp, #32]",
        "mov x22, x21",
        "mov w20, w30",
        "mov w21, w23",
        "mov x30, x22",
        "mov w2, w24",
        "mov w3, w25",
        "caspal w2, w3, w20, w21, [x30]",
        "mov w22, w2",
        "mov w23, w3",
        "mov w20, w22",
        "mov w21, w23",
        "mrs x0, nzcv",
        "cmp w22, w24",
        "ccmp w23, w25, #nzcv, eq",
        "rmif x0, #0, #NzCV",
        "ldr x22, [sp, #32]",
        "csel x23, x20, x22, ne",
        "mov x4, x23",
        "ldr x20, [sp]",
        "csel x22, x21, x20, ne",
        "mov x6, x22",
        "add sp, sp, #0x40 (64)"
      ]
    },
    "cmpxchg16b [rbp]": {
      "ExpectedInstructionCount": 33,
      "Comment": "GROUP9 0x0F 0xC7 /1",
      "ExpectedArm64ASM": [
        "sub sp, sp, #0x40 (64)",
        "mov x20, x9",
        "add x21, x20, #0x0 (0)",
        "mov x20, x4",
        "mov x22, x6",
        "mov x24, x20",
        "mov x25, x22",
        "mov x23, x7",
        "mov x30, x5",
        "str x22, [sp]",
        "str x20, [sp, #32]",
        "mov x22, x21",
        "mov x20, x23",
        "mov x21, x30",
        "mov x30, x22",
        "mov x2, x24",
        "mov x3, x25",
        "caspal x2, x3, x20, x21, [x30]",
        "mov x22, x2",
        "mov x23, x3",
        "mov x20, x22",
        "mov x21, x23",
        "mrs x0, nzcv",
        "cmp w22, w24",
        "ccmp w23, w25, #nzcv, eq",
        "rmif x0, #0, #NzCV",
        "ldr x22, [sp, #32]",
        "csel x23, x20, x22, ne",
        "mov x4, x23",
        "ldr x20, [sp]",
        "csel x22, x21, x20, ne",
        "mov x6, x22",
        "add sp, sp, #0x40 (64)"
      ]
    },
    "rdrand ax": {
      "ExpectedInstructionCount": 14,
      "Comment": "GROUP9 0x0F 0xC7 /6",
      "ExpectedArm64ASM": [
        "mrs x20, rndr",
        "cset x21, ne",
        "mov x22, x20",
        "mov x23, x21",
        "mov x20, x4",
        "mov x21, x20",
        "bfxil x21, x22, #0, #16",
        "mov x4, x21",
        "mov w20, #0x1",
        "mov x26, x20",
        "mov w20, #0x0",
        "mov x27, x20",
        "lsl x20, x23, #29",
        "msr nzcv, x20"
      ]
    },
    "rdrand eax": {
      "ExpectedInstructionCount": 12,
      "Comment": "GROUP9 0x0F 0xC7 /6",
      "ExpectedArm64ASM": [
        "mrs x20, rndr",
        "cset x21, ne",
        "mov x22, x20",
        "mov x23, x21",
        "mov w20, w22",
        "mov x4, x20",
        "mov w20, #0x1",
        "mov x26, x20",
        "mov w20, #0x0",
        "mov x27, x20",
        "lsl x20, x23, #29",
        "msr nzcv, x20"
      ]
    },
    "rdrand rax": {
      "ExpectedInstructionCount": 11,
      "Comment": "GROUP9 0x0F 0xC7 /6",
      "ExpectedArm64ASM": [
        "mrs x20, rndr",
        "cset x21, ne",
        "mov x22, x20",
        "mov x23, x21",
        "mov x4, x22",
        "mov w20, #0x1",
        "mov x26, x20",
        "mov w20, #0x0",
        "mov x27, x20",
        "lsl x20, x23, #29",
        "msr nzcv, x20"
      ]
    },
    "rdseed ax": {
      "ExpectedInstructionCount": 14,
      "Comment": "GROUP9 0x0F 0xC7 /7",
      "ExpectedArm64ASM": [
        "mrs x20, rndrrs",
        "cset x21, ne",
        "mov x22, x20",
        "mov x23, x21",
        "mov x20, x4",
        "mov x21, x20",
        "bfxil x21, x22, #0, #16",
        "mov x4, x21",
        "mov w20, #0x1",
        "mov x26, x20",
        "mov w20, #0x0",
        "mov x27, x20",
        "lsl x20, x23, #29",
        "msr nzcv, x20"
      ]
    },
    "rdseed eax": {
      "ExpectedInstructionCount": 12,
      "Comment": "GROUP9 0x0F 0xC7 /7",
      "ExpectedArm64ASM": [
        "mrs x20, rndrrs",
        "cset x21, ne",
        "mov x22, x20",
        "mov x23, x21",
        "mov w20, w22",
        "mov x4, x20",
        "mov w20, #0x1",
        "mov x26, x20",
        "mov w20, #0x0",
        "mov x27, x20",
        "lsl x20, x23, #29",
        "msr nzcv, x20"
      ]
    },
    "rdseed rax": {
      "ExpectedInstructionCount": 11,
      "Comment": "GROUP9 0x0F 0xC7 /7",
      "ExpectedArm64ASM": [
        "mrs x20, rndrrs",
        "cset x21, ne",
        "mov x22, x20",
        "mov x23, x21",
        "mov x4, x22",
        "mov w20, #0x1",
        "mov x26, x20",
        "mov w20, #0x0",
        "mov x27, x20",
        "lsl x20, x23, #29",
        "msr nzcv, x20"
      ]
    },
    "psrlw mm0, 0": {
      "ExpectedInstructionCount": 0,
      "Type": "MMX",
      "Comment": "GROUP12 0x0F 0xC7 /2",
      "ExpectedArm64ASM": []
    },
    "psrlw mm0, 15": {
      "ExpectedInstructionCount": 3,
      "Type": "MMX",
      "Comment": "GROUP12 0x0F 0xC7 /2",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "ushr v3.8h, v2.8h, #15",
        "str d3, [x28, #768]"
      ]
    },
    "psrlw mm0, 16": {
      "ExpectedInstructionCount": 3,
      "Type": "MMX",
      "Comment": "GROUP12 0x0F 0xC7 /2",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "movi v3.2d, #0x0",
        "str d3, [x28, #768]"
      ]
    },
    "psrlw xmm0, 0": {
      "ExpectedInstructionCount": 0,
      "Type": "SSE",
      "Comment": "GROUP12 0x0F 0xC7 /2",
      "ExpectedArm64ASM": []
    },
    "psrlw xmm0, 15": {
      "ExpectedInstructionCount": 3,
      "Type": "SSE",
      "Comment": "GROUP12 0x0F 0xC7 /2",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "ushr v3.8h, v2.8h, #15",
        "mov v16.16b, v3.16b"
      ]
    },
    "psrlw xmm0, 16": {
      "ExpectedInstructionCount": 3,
      "Type": "SSE",
      "Comment": "GROUP12 0x0F 0xC7 /2",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "movi v3.2d, #0x0",
        "mov v16.16b, v3.16b"
      ]
    },
    "psraw mm0, 0": {
      "ExpectedInstructionCount": 0,
      "Type": "MMX",
      "Comment": "GROUP12 0x0F 0xC7 /3",
      "ExpectedArm64ASM": []
    },
    "psraw mm0, 15": {
      "ExpectedInstructionCount": 3,
      "Type": "MMX",
      "Comment": "GROUP12 0x0F 0xC7 /3",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "sshr v3.8h, v2.8h, #15",
        "str d3, [x28, #768]"
      ]
    },
    "psraw mm0, 16": {
      "ExpectedInstructionCount": 3,
      "Type": "MMX",
      "Comment": "GROUP12 0x0F 0xC7 /3",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "sshr v3.8h, v2.8h, #15",
        "str d3, [x28, #768]"
      ]
    },
    "psraw xmm0, 0": {
      "ExpectedInstructionCount": 0,
      "Type": "SSE",
      "Comment": "GROUP12 0x0F 0xC7 /3",
      "ExpectedArm64ASM": []
    },
    "psraw xmm0, 15": {
      "ExpectedInstructionCount": 3,
      "Type": "SSE",
      "Comment": "GROUP12 0x0F 0xC7 /3",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "sshr v3.8h, v2.8h, #15",
        "mov v16.16b, v3.16b"
      ]
    },
    "psraw xmm0, 16": {
      "ExpectedInstructionCount": 3,
      "Type": "SSE",
      "Comment": "GROUP12 0x0F 0xC7 /3",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "sshr v3.8h, v2.8h, #15",
        "mov v16.16b, v3.16b"
      ]
    },
    "psllw mm0, 0": {
      "ExpectedInstructionCount": 0,
      "Type": "MMX",
      "Comment": "GROUP12 0x0F 0xC7 /6",
      "ExpectedArm64ASM": []
    },
    "psllw mm0, 15": {
      "ExpectedInstructionCount": 3,
      "Type": "MMX",
      "Comment": "GROUP12 0x0F 0xC7 /6",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "shl v3.8h, v2.8h, #15",
        "str d3, [x28, #768]"
      ]
    },
    "psllw mm0, 16": {
      "ExpectedInstructionCount": 3,
      "Type": "MMX",
      "Comment": "GROUP12 0x0F 0xC7 /6",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "movi v3.2d, #0x0",
        "str d3, [x28, #768]"
      ]
    },
    "psllw xmm0, 0": {
      "ExpectedInstructionCount": 0,
      "Type": "SSE",
      "Comment": "GROUP12 0x0F 0xC7 /6",
      "ExpectedArm64ASM": []
    },
    "psllw xmm0, 15": {
      "ExpectedInstructionCount": 3,
      "Type": "SSE",
      "Comment": "GROUP12 0x0F 0xC7 /6",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "shl v3.8h, v2.8h, #15",
        "mov v16.16b, v3.16b"
      ]
    },
    "psllw xmm0, 16": {
      "ExpectedInstructionCount": 3,
      "Type": "SSE",
      "Comment": "GROUP12 0x0F 0xC7 /6",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "movi v3.2d, #0x0",
        "mov v16.16b, v3.16b"
      ]
    },
    "psrld mm0, 0": {
      "ExpectedInstructionCount": 0,
      "Type": "MMX",
      "Comment": "GROUP13 0x0F 0xC7 /2",
      "ExpectedArm64ASM": []
    },
    "psrld mm0, 31": {
      "ExpectedInstructionCount": 3,
      "Type": "MMX",
      "Comment": "GROUP13 0x0F 0xC7 /2",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "ushr v3.4s, v2.4s, #31",
        "str d3, [x28, #768]"
      ]
    },
    "psrld mm0, 32": {
      "ExpectedInstructionCount": 3,
      "Type": "MMX",
      "Comment": "GROUP13 0x0F 0xC7 /2",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "movi v3.2d, #0x0",
        "str d3, [x28, #768]"
      ]
    },
    "psrld xmm0, 0": {
      "ExpectedInstructionCount": 0,
      "Type": "SSE",
      "Comment": "GROUP13 0x0F 0xC7 /2",
      "ExpectedArm64ASM": []
    },
    "psrld xmm0, 31": {
      "ExpectedInstructionCount": 3,
      "Type": "SSE",
      "Comment": "GROUP13 0x0F 0xC7 /2",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "ushr v3.4s, v2.4s, #31",
        "mov v16.16b, v3.16b"
      ]
    },
    "psrld xmm0, 32": {
      "ExpectedInstructionCount": 3,
      "Type": "SSE",
      "Comment": "GROUP13 0x0F 0xC7 /2",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "movi v3.2d, #0x0",
        "mov v16.16b, v3.16b"
      ]
    },
    "psrad mm0, 0": {
      "ExpectedInstructionCount": 0,
      "Type": "MMX",
      "Comment": "GROUP13 0x0F 0xC7 /3",
      "ExpectedArm64ASM": []
    },
    "psrad mm0, 31": {
      "ExpectedInstructionCount": 3,
      "Type": "MMX",
      "Comment": "GROUP13 0x0F 0xC7 /3",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "sshr v3.4s, v2.4s, #31",
        "str d3, [x28, #768]"
      ]
    },
    "psrad mm0, 32": {
      "ExpectedInstructionCount": 3,
      "Type": "MMX",
      "Comment": "GROUP13 0x0F 0xC7 /3",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "sshr v3.4s, v2.4s, #31",
        "str d3, [x28, #768]"
      ]
    },
    "psrad xmm0, 0": {
      "ExpectedInstructionCount": 0,
      "Type": "SSE",
      "Comment": "GROUP13 0x0F 0xC7 /3",
      "ExpectedArm64ASM": []
    },
    "psrad xmm0, 31": {
      "ExpectedInstructionCount": 3,
      "Type": "SSE",
      "Comment": "GROUP13 0x0F 0xC7 /3",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "sshr v3.4s, v2.4s, #31",
        "mov v16.16b, v3.16b"
      ]
    },
    "psrad xmm0, 32": {
      "ExpectedInstructionCount": 3,
      "Type": "SSE",
      "Comment": "GROUP13 0x0F 0xC7 /3",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "sshr v3.4s, v2.4s, #31",
        "mov v16.16b, v3.16b"
      ]
    },
    "pslld mm0, 0": {
      "ExpectedInstructionCount": 0,
      "Type": "MMX",
      "Comment": "GROUP13 0x0F 0xC7 /6",
      "ExpectedArm64ASM": []
    },
    "pslld mm0, 31": {
      "ExpectedInstructionCount": 3,
      "Type": "MMX",
      "Comment": "GROUP13 0x0F 0xC7 /6",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "shl v3.4s, v2.4s, #31",
        "str d3, [x28, #768]"
      ]
    },
    "pslld mm0, 32": {
      "ExpectedInstructionCount": 3,
      "Type": "MMX",
      "Comment": "GROUP13 0x0F 0xC7 /6",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "movi v3.2d, #0x0",
        "str d3, [x28, #768]"
      ]
    },
    "pslld xmm0, 0": {
      "ExpectedInstructionCount": 0,
      "Type": "SSE",
      "Comment": "GROUP13 0x0F 0xC7 /6",
      "ExpectedArm64ASM": []
    },
    "pslld xmm0, 31": {
      "ExpectedInstructionCount": 3,
      "Type": "SSE",
      "Comment": "GROUP13 0x0F 0xC7 /6",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "shl v3.4s, v2.4s, #31",
        "mov v16.16b, v3.16b"
      ]
    },
    "pslld xmm0, 32": {
      "ExpectedInstructionCount": 3,
      "Type": "SSE",
      "Comment": "GROUP13 0x0F 0xC7 /6",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "movi v3.2d, #0x0",
        "mov v16.16b, v3.16b"
      ]
    },
    "psrlq mm0, 0": {
      "ExpectedInstructionCount": 0,
      "Type": "MMX",
      "Comment": "GROUP14 0x0F 0xC7 /2",
      "ExpectedArm64ASM": []
    },
    "psrlq mm0, 63": {
      "ExpectedInstructionCount": 3,
      "Type": "MMX",
      "Comment": "GROUP14 0x0F 0xC7 /2",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "ushr v3.2d, v2.2d, #63",
        "str d3, [x28, #768]"
      ]
    },
    "psrlq mm0, 64": {
      "ExpectedInstructionCount": 3,
      "Type": "MMX",
      "Comment": "GROUP14 0x0F 0xC7 /2",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "movi v3.2d, #0x0",
        "str d3, [x28, #768]"
      ]
    },
    "psrlq xmm0, 0": {
      "ExpectedInstructionCount": 0,
      "Type": "SSE",
      "Comment": "GROUP14 0x0F 0xC7 /2",
      "ExpectedArm64ASM": []
    },
    "psrlq xmm0, 63": {
      "ExpectedInstructionCount": 3,
      "Type": "SSE",
      "Comment": "GROUP14 0x0F 0xC7 /2",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "ushr v3.2d, v2.2d, #63",
        "mov v16.16b, v3.16b"
      ]
    },
    "psrlq xmm0, 64": {
      "ExpectedInstructionCount": 3,
      "Type": "SSE",
      "Comment": "GROUP14 0x0F 0xC7 /2",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "movi v3.2d, #0x0",
        "mov v16.16b, v3.16b"
      ]
    },
    "psrldq xmm0, 0": {
      "ExpectedInstructionCount": 0,
      "Type": "SSE",
      "Comment": "GROUP14 0x0F 0xC7 /3",
      "ExpectedArm64ASM": []
    },
    "psrldq xmm0, 15": {
      "ExpectedInstructionCount": 4,
      "Type": "SSE",
      "Comment": "GROUP14 0x0F 0xC7 /3",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "movi v3.2d, #0x0",
        "ext v4.16b, v2.16b, v3.16b, #15",
        "mov v16.16b, v4.16b"
      ]
    },
    "psrldq xmm0, 16": {
      "ExpectedInstructionCount": 2,
      "Type": "SSE",
      "Comment": "GROUP14 0x0F 0xC7 /3",
      "ExpectedArm64ASM": [
        "movi v2.2d, #0x0",
        "mov v16.16b, v2.16b"
      ]
    },
    "psllq mm0, 0": {
      "ExpectedInstructionCount": 0,
      "Type": "MMX",
      "Comment": "GROUP14 0x0F 0xC7 /6",
      "ExpectedArm64ASM": []
    },
    "psllq mm0, 63": {
      "ExpectedInstructionCount": 3,
      "Type": "MMX",
      "Comment": "GROUP14 0x0F 0xC7 /6",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "shl v3.2d, v2.2d, #63",
        "str d3, [x28, #768]"
      ]
    },
    "psllq mm0, 64": {
      "ExpectedInstructionCount": 3,
      "Type": "MMX",
      "Comment": "GROUP14 0x0F 0xC7 /6",
      "ExpectedArm64ASM": [
        "ldr d2, [x28, #768]",
        "movi v3.2d, #0x0",
        "str d3, [x28, #768]"
      ]
    },
    "psllq xmm0, 0": {
      "ExpectedInstructionCount": 0,
      "Type": "SSE",
      "Comment": "GROUP14 0x0F 0xC7 /6",
      "ExpectedArm64ASM": []
    },
    "psllq xmm0, 63": {
      "ExpectedInstructionCount": 3,
      "Type": "SSE",
      "Comment": "GROUP14 0x0F 0xC7 /6",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "shl v3.2d, v2.2d, #63",
        "mov v16.16b, v3.16b"
      ]
    },
    "psllq xmm0, 64": {
      "ExpectedInstructionCount": 3,
      "Type": "SSE",
      "Comment": "GROUP14 0x0F 0xC7 /6",
      "ExpectedArm64ASM": [
        "mov v2.16b, v16.16b",
        "movi v3.2d, #0x0",
        "mov v16.16b, v3.16b"
      ]
    },
    "fxsave [rax]": {
      "ExpectedInstructionCount": 77,
      "Comment": "GROUP15 0x0F 0xAE /0",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrh w21, [x28, #1024]",
        "strh w21, [x20]",
        "mov w21, #0x0",
        "ldrb w22, [x28, #747]",
        "mov x23, x21",
        "bfi x23, x22, #11, #3",
        "ldrb w21, [x28, #744]",
        "ldrb w22, [x28, #745]",
        "ldrb w24, [x28, #746]",
        "ldrb w25, [x28, #750]",
        "orr x30, x23, x21, lsl #8",
        "orr x21, x30, x22, lsl #9",
        "orr x22, x21, x24, lsl #10",
        "orr x21, x22, x25, lsl #14",
        "strh w21, [x20, #2]",
        "ldrb w21, [x28, #1026]",
        "strb w21, [x20, #4]",
        "ldr q2, [x28, #768]",
        "str q2, [x20, #32]",
        "ldr q2, [x28, #784]",
        "str q2, [x20, #48]",
        "ldr q2, [x28, #800]",
        "str q2, [x20, #64]",
        "ldr q2, [x28, #816]",
        "str q2, [x20, #80]",
        "ldr q2, [x28, #832]",
        "str q2, [x20, #96]",
        "ldr q2, [x28, #848]",
        "str q2, [x20, #112]",
        "ldr q2, [x28, #864]",
        "str q2, [x20, #128]",
        "ldr q2, [x28, #880]",
        "str q2, [x20, #144]",
        "mov v2.16b, v16.16b",
        "str q2, [x20, #160]",
        "mov v2.16b, v17.16b",
        "str q2, [x20, #176]",
        "mov v2.16b, v18.16b",
        "str q2, [x20, #192]",
        "mov v2.16b, v19.16b",
        "str q2, [x20, #208]",
        "mov v2.16b, v20.16b",
        "str q2, [x20, #224]",
        "mov v2.16b, v21.16b",
        "str q2, [x20, #240]",
        "mov v2.16b, v22.16b",
        "str q2, [x20, #256]",
        "mov v2.16b, v23.16b",
        "str q2, [x20, #272]",
        "mov v2.16b, v24.16b",
        "str q2, [x20, #288]",
        "mov v2.16b, v25.16b",
        "str q2, [x20, #304]",
        "mov v2.16b, v26.16b",
        "str q2, [x20, #320]",
        "mov v2.16b, v27.16b",
        "str q2, [x20, #336]",
        "mov v2.16b, v28.16b",
        "str q2, [x20, #352]",
        "mov v2.16b, v29.16b",
        "str q2, [x20, #368]",
        "mov v2.16b, v30.16b",
        "str q2, [x20, #384]",
        "mov v2.16b, v31.16b",
        "str q2, [x20, #400]",
        "mov w21, #0x1f80",
        "mrs x22, fpcr",
        "ubfx x22, x22, #22, #3",
        "rbit w0, w22",
        "bfi x22, x0, #30, #2",
        "mov w23, w21",
        "bfi w23, w22, #13, #3",
        "add x21, x20, #0x18 (24)",
        "str w23, [x20, #24]",
        "mov w20, #0xffff",
        "str w20, [x21, #4]"
      ]
    },
    "rdfsbase eax": {
      "ExpectedInstructionCount": 2,
      "Comment": "GROUP15 0x0F 0xAE /0",
      "ExpectedArm64ASM": [
        "ldr w20, [x28, #176]",
        "mov x4, x20"
      ]
    },
    "rdfsbase rax": {
      "ExpectedInstructionCount": 2,
      "Comment": "GROUP15 0x0F 0xAE /0",
      "ExpectedArm64ASM": [
        "ldr x20, [x28, #176]",
        "mov x4, x20"
      ]
    },
    "fxrstor [rax]": {
      "ExpectedInstructionCount": 73,
      "Comment": "GROUP15 0x0F 0xAE /1",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldrh w21, [x20]",
        "strh w21, [x28, #1024]",
        "ldrh w21, [x20, #2]",
        "ubfx w22, w21, #11, #3",
        "strb w22, [x28, #747]",
        "ubfx w22, w21, #8, #1",
        "ubfx w23, w21, #9, #1",
        "ubfx w24, w21, #10, #1",
        "ubfx w25, w21, #14, #1",
        "strb w22, [x28, #744]",
        "strb w23, [x28, #745]",
        "strb w24, [x28, #746]",
        "strb w25, [x28, #750]",
        "ldrb w21, [x20, #4]",
        "strb w21, [x28, #1026]",
        "ldr q2, [x20, #32]",
        "str q2, [x28, #768]",
        "ldr q2, [x20, #48]",
        "str q2, [x28, #784]",
        "ldr q2, [x20, #64]",
        "str q2, [x28, #800]",
        "ldr q2, [x20, #80]",
        "str q2, [x28, #816]",
        "ldr q2, [x20, #96]",
        "str q2, [x28, #832]",
        "ldr q2, [x20, #112]",
        "str q2, [x28, #848]",
        "ldr q2, [x20, #128]",
        "str q2, [x28, #864]",
        "ldr q2, [x20, #144]",
        "str q2, [x28, #880]",
        "ldr q2, [x20, #160]",
        "mov v16.16b, v2.16b",
        "ldr q2, [x20, #176]",
        "mov v17.16b, v2.16b",
        "ldr q2, [x20, #192]",
        "mov v18.16b, v2.16b",
        "ldr q2, [x20, #208]",
        "mov v19.16b, v2.16b",
        "ldr q2, [x20, #224]",
        "mov v20.16b, v2.16b",
        "ldr q2, [x20, #240]",
        "mov v21.16b, v2.16b",
        "ldr q2, [x20, #256]",
        "mov v22.16b, v2.16b",
        "ldr q2, [x20, #272]",
        "mov v23.16b, v2.16b",
        "ldr q2, [x20, #288]",
        "mov v24.16b, v2.16b",
        "ldr q2, [x20, #304]",
        "mov v25.16b, v2.16b",
        "ldr q2, [x20, #320]",
        "mov v26.16b, v2.16b",
        "ldr q2, [x20, #336]",
        "mov v27.16b, v2.16b",
        "ldr q2, [x20, #352]",
        "mov v28.16b, v2.16b",
        "ldr q2, [x20, #368]",
        "mov v29.16b, v2.16b",
        "ldr q2, [x20, #384]",
        "mov v30.16b, v2.16b",
        "ldr q2, [x20, #400]",
        "mov v31.16b, v2.16b",
        "ldr w21, [x20, #24]",
        "ubfx w20, w21, #13, #3",
        "rbit w1, w20",
        "lsr w1, w1, #30",
        "mrs x0, fpcr",
        "bfi x0, x1, #22, #2",
        "lsr x1, x20, #2",
        "bfi x0, x1, #24, #1",
        "msr fpcr, x0"
      ]
    },
    "rdgsbase eax": {
      "ExpectedInstructionCount": 2,
      "Comment": "GROUP15 0x0F 0xAE /1",
      "ExpectedArm64ASM": [
        "ldr w20, [x28, #168]",
        "mov x4, x20"
      ]
    },
    "rdgsbase rax": {
      "ExpectedInstructionCount": 2,
      "Comment": "GROUP15 0x0F 0xAE /1",
      "ExpectedArm64ASM": [
        "ldr x20, [x28, #168]",
        "mov x4, x20"
      ]
    },
    "ldmxcsr [rax]": {
      "ExpectedInstructionCount": 10,
      "Comment": "GROUP15 0x0F 0xAE /2",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldr w21, [x20]",
        "ubfx w20, w21, #13, #3",
        "rbit w1, w20",
        "lsr w1, w1, #30",
        "mrs x0, fpcr",
        "bfi x0, x1, #22, #2",
        "lsr x1, x20, #2",
        "bfi x0, x1, #24, #1",
        "msr fpcr, x0"
      ]
    },
    "wrfsbase eax": {
      "ExpectedInstructionCount": 3,
      "Comment": "GROUP15 0x0F 0xAE /2",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov w21, w20",
        "str x21, [x28, #176]"
      ]
    },
    "wrfsbase rax": {
      "ExpectedInstructionCount": 2,
      "Comment": "GROUP15 0x0F 0xAE /2",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "str x20, [x28, #176]"
      ]
    },
    "stmxcsr [rax]": {
      "ExpectedInstructionCount": 9,
      "Comment": "GROUP15 0x0F 0xAE /3",
      "ExpectedArm64ASM": [
        "mov w20, #0x1f80",
        "mrs x21, fpcr",
        "ubfx x21, x21, #22, #3",
        "rbit w0, w21",
        "bfi x21, x0, #30, #2",
        "mov w22, w20",
        "bfi w22, w21, #13, #3",
        "mov x20, x4",
        "str w22, [x20]"
      ]
    },
    "wrgsbase eax": {
      "ExpectedInstructionCount": 3,
      "Comment": "GROUP15 0x0F 0xAE /3",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov w21, w20",
        "str x21, [x28, #168]"
      ]
    },
    "wrgsbase rax": {
      "ExpectedInstructionCount": 2,
      "Comment": "GROUP15 0x0F 0xAE /3",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "str x20, [x28, #168]"
      ]
    },
    "xsave [rax]": {
      "ExpectedInstructionCount": 94,
      "Comment": "GROUP15 0x0F 0xAE /4",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ubfx x21, x20, #0, #1",
        "cbnz x21, #+0x8",
        "b #+0x8c",
        "mov x20, x4",
        "ldrh w21, [x28, #1024]",
        "strh w21, [x20]",
        "mov w21, #0x0",
        "ldrb w22, [x28, #747]",
        "mov x23, x21",
        "bfi x23, x22, #11, #3",
        "ldrb w21, [x28, #744]",
        "ldrb w22, [x28, #745]",
        "ldrb w24, [x28, #746]",
        "ldrb w25, [x28, #750]",
        "orr x30, x23, x21, lsl #8",
        "orr x21, x30, x22, lsl #9",
        "orr x22, x21, x24, lsl #10",
        "orr x21, x22, x25, lsl #14",
        "strh w21, [x20, #2]",
        "ldrb w21, [x28, #1026]",
        "strb w21, [x20, #4]",
        "ldr q2, [x28, #768]",
        "str q2, [x20, #32]",
        "ldr q2, [x28, #784]",
        "str q2, [x20, #48]",
        "ldr q2, [x28, #800]",
        "str q2, [x20, #64]",
        "ldr q2, [x28, #816]",
        "str q2, [x20, #80]",
        "ldr q2, [x28, #832]",
        "str q2, [x20, #96]",
        "ldr q2, [x28, #848]",
        "str q2, [x20, #112]",
        "ldr q2, [x28, #864]",
        "str q2, [x20, #128]",
        "ldr q2, [x28, #880]",
        "str q2, [x20, #144]",
        "mov x20, x4",
        "ubfx x21, x20, #1, #1",
        "cbnz x21, #+0x8",
        "b #+0x88",
        "mov x20, x4",
        "mov v2.16b, v16.16b",
        "str q2, [x20, #160]",
        "mov v2.16b, v17.16b",
        "str q2, [x20, #176]",
        "mov v2.16b, v18.16b",
        "str q2, [x20, #192]",
        "mov v2.16b, v19.16b",
        "str q2, [x20, #208]",
        "mov v2.16b, v20.16b",
        "str q2, [x20, #224]",
        "mov v2.16b, v21.16b",
        "str q2, [x20, #240]",
        "mov v2.16b, v22.16b",
        "str q2, [x20, #256]",
        "mov v2.16b, v23.16b",
        "str q2, [x20, #272]",
        "mov v2.16b, v24.16b",
        "str q2, [x20, #288]",
        "mov v2.16b, v25.16b",
        "str q2, [x20, #304]",
        "mov v2.16b, v26.16b",
        "str q2, [x20, #320]",
        "mov v2.16b, v27.16b",
        "str q2, [x20, #336]",
        "mov v2.16b, v28.16b",
        "str q2, [x20, #352]",
        "mov v2.16b, v29.16b",
        "str q2, [x20, #368]",
        "mov v2.16b, v30.16b",
        "str q2, [x20, #384]",
        "mov v2.16b, v31.16b",
        "str q2, [x20, #400]",
        "mov x20, x4",
        "ubfx x21, x20, #1, #2",
        "cbnz x21, #+0x8",
        "b #+0x34",
        "mov x20, x4",
        "mov w21, #0x1f80",
        "mrs x22, fpcr",
        "ubfx x22, x22, #22, #3",
        "rbit w0, w22",
        "bfi x22, x0, #30, #2",
        "mov w23, w21",
        "bfi w23, w22, #13, #3",
        "add x21, x20, #0x18 (24)",
        "str w23, [x20, #24]",
        "mov w20, #0xffff",
        "str w20, [x21, #4]",
        "mov x20, x4",
        "ubfx x21, x20, #0, #3",
        "str x21, [x20, #512]"
      ]
    },
    "lfence": {
      "ExpectedInstructionCount": 1,
      "Comment": "GROUP15 0x0F 0xAE /5",
      "ExpectedArm64ASM": [
        "dmb ld"
      ]
    },
    "xrstor [rax]": {
      "ExpectedInstructionCount": 128,
      "Comment": "GROUP15 0x0F 0xAE /5",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ldr x21, [x20, #512]",
        "ubfx x20, x21, #0, #1",
        "cbnz x20, #+0x8",
        "b #+0x88",
        "mov x20, x4",
        "ldrh w21, [x20]",
        "strh w21, [x28, #1024]",
        "ldrh w21, [x20, #2]",
        "ubfx w22, w21, #11, #3",
        "strb w22, [x28, #747]",
        "ubfx w22, w21, #8, #1",
        "ubfx w23, w21, #9, #1",
        "ubfx w24, w21, #10, #1",
        "ubfx w25, w21, #14, #1",
        "strb w22, [x28, #744]",
        "strb w23, [x28, #745]",
        "strb w24, [x28, #746]",
        "strb w25, [x28, #750]",
        "ldrb w21, [x20, #4]",
        "strb w21, [x28, #1026]",
        "ldr q2, [x20, #32]",
        "str q2, [x28, #768]",
        "ldr q2, [x20, #48]",
        "str q2, [x28, #784]",
        "ldr q2, [x20, #64]",
        "str q2, [x28, #800]",
        "ldr q2, [x20, #80]",
        "str q2, [x28, #816]",
        "ldr q2, [x20, #96]",
        "str q2, [x28, #832]",
        "ldr q2, [x20, #112]",
        "str q2, [x28, #848]",
        "ldr q2, [x20, #128]",
        "str q2, [x28, #864]",
        "ldr q2, [x20, #144]",
        "str q2, [x28, #880]",
        "b #+0x4c",
        "mov w20, #0x0",
        "mov w21, #0x37f",
        "strh w21, [x28, #1024]",
        "strb w20, [x28, #747]",
        "strb w20, [x28, #744]",
        "strb w20, [x28, #745]",
        "strb w20, [x28, #746]",
        "strb w20, [x28, #750]",
        "strb w20, [x28, #1026]",
        "movi v2.2d, #0x0",
        "str q2, [x28, #768]",
        "str q2, [x28, #784]",
        "str q2, [x28, #800]",
        "str q2, [x28, #816]",
        "str q2, [x28, #832]",
        "str q2, [x28, #848]",
        "str q2, [x28, #864]",
        "str q2, [x28, #880]",
        "mov x20, x4",
        "ldr x21, [x20, #512]",
        "ubfx x20, x21, #1, #1",
        "cbnz x20, #+0x8",
        "b #+0x8c",
        "mov x20, x4",
        "ldr q2, [x20, #160]",
        "mov v16.16b, v2.16b",
        "ldr q2, [x20, #176]",
        "mov v17.16b, v2.16b",
        "ldr q2, [x20, #192]",
        "mov v18.16b, v2.16b",
        "ldr q2, [x20, #208]",
        "mov v19.16b, v2.16b",
        "ldr q2, [x20, #224]",
        "mov v20.16b, v2.16b",
        "ldr q2, [x20, #240]",
        "mov v21.16b, v2.16b",
        "ldr q2, [x20, #256]",
        "mov v22.16b, v2.16b",
        "ldr q2, [x20, #272]",
        "mov v23.16b, v2.16b",
        "ldr q2, [x20, #288]",
        "mov v24.16b, v2.16b",
        "ldr q2, [x20, #304]",
        "mov v25.16b, v2.16b",
        "ldr q2, [x20, #320]",
        "mov v26.16b, v2.16b",
        "ldr q2, [x20, #336]",
        "mov v27.16b, v2.16b",
        "ldr q2, [x20, #352]",
        "mov v28.16b, v2.16b",
        "ldr q2, [x20, #368]",
        "mov v29.16b, v2.16b",
        "ldr q2, [x20, #384]",
        "mov v30.16b, v2.16b",
        "ldr q2, [x20, #400]",
        "mov v31.16b, v2.16b",
        "b #+0x48",
        "movi v2.2d, #0x0",
        "mov v16.16b, v2.16b",
        "mov v17.16b, v2.16b",
        "mov v18.16b, v2.16b",
        "mov v19.16b, v2.16b",
        "mov v20.16b, v2.16b",
        "mov v21.16b, v2.16b",
        "mov v22.16b, v2.16b",
        "mov v23.16b, v2.16b",
        "mov v24.16b, v2.16b",
        "mov v25.16b, v2.16b",
        "mov v26.16b, v2.16b",
        "mov v27.16b, v2.16b",
        "mov v28.16b, v2.16b",
        "mov v29.16b, v2.16b",
        "mov v30.16b, v2.16b",
        "mov v31.16b, v2.16b",
        "mov x20, x4",
        "ldr x21, [x20, #512]",
        "ubfx x20, x21, #1, #2",
        "cbnz x20, #+0x8",
        "b #+0x30",
        "mov x20, x4",
        "ldr w21, [x20, #24]",
        "ubfx w20, w21, #13, #3",
        "rbit w1, w20",
        "lsr w1, w1, #30",
        "mrs x0, fpcr",
        "bfi x0, x1, #22, #2",
        "lsr x1, x20, #2",
        "bfi x0, x1, #24, #1",
        "msr fpcr, x0",
        "b #+0x4"
      ]
    },
    "mfence": {
      "ExpectedInstructionCount": 1,
      "Comment": "GROUP15 0x0F 0xAE /6",
      "ExpectedArm64ASM": [
        "dmb sy"
      ]
    },
    "clwb [rax]": {
      "ExpectedInstructionCount": 2,
      "Comment": "GROUP15 0x0F 0xAE /6",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "dc cvac, x20"
      ]
    },
    "sfence": {
      "ExpectedInstructionCount": 1,
      "Comment": "GROUP15 0x0F 0xAE /7",
      "ExpectedArm64ASM": [
        "dmb st"
      ]
    },
    "clflush [rax]": {
      "ExpectedInstructionCount": 3,
      "Comment": "GROUP15 0x0F 0xAE /7",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "dc civac, x20",
        "dsb ish"
      ]
    },
    "clflushopt [rax]": {
      "ExpectedInstructionCount": 2,
      "Comment": "GROUP15 0x0F 0xAE /7",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "dc civac, x20"
      ]
    },
    "prefetchnta [rax]": {
      "ExpectedInstructionCount": 2,
      "Comment": [
        "GROUP16 0x0F 0x18 /0"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "prfm pldl1strm, [x20]"
      ]
    },
    "prefetcht0 [rax]": {
      "ExpectedInstructionCount": 2,
      "Comment": [
        "GROUP16 0x0F 0x18 /1"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "prfm pldl1keep, [x20]"
      ]
    },
    "prefetcht1 [rax]": {
      "ExpectedInstructionCount": 2,
      "Comment": [
        "GROUP16 0x0F 0x18 /2"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "prfm pldl2keep, [x20]"
      ]
    },
    "prefetcht2 [rax]": {
      "ExpectedInstructionCount": 2,
      "Comment": [
        "GROUP16 0x0F 0x18 /3"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "prfm pldl3keep, [x20]"
      ]
    },
    "db 0x0f, 0x18, 0x20;": {
      "ExpectedInstructionCount": 0,
      "Comment": [
        "GROUP16 0x0F 0x18 /4",
        "nop dword [rax]",
        "NOP implementation"
      ],
      "ExpectedArm64ASM": []
    },
    "db 0x0f, 0x0d, 0x00": {
      "ExpectedInstructionCount": 2,
      "Comment": [
        "GROUPP 0x0F 0x0D /0",
        "prefetch_exclusive [rax]"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "prfm pldl1keep, [x20]"
      ]
    },
    "prefetchw [rax]": {
      "ExpectedInstructionCount": 2,
      "Comment": [
        "GROUPP 0x0F 0x0D /1"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "prfm pstl1keep, [x20]"
      ]
    },
    "prefetchwt1 [rax]": {
      "ExpectedInstructionCount": 2,
      "Comment": [
        "GROUPP 0x0F 0x0D /2"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "prfm pstl1keep, [x20]"
      ]
    }
  }
}
