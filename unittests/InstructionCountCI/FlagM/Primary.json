{
  "Features": {
    "Bitness": 64,
    "EnabledHostFeatures": [
      "FLAGM",
      "FLAGM2"
    ],
    "DisabledHostFeatures": [
      "SVE128",
      "SVE256"
    ]
  },
  "Instructions": {
    "add bl, cl": {
      "ExpectedInstructionCount": 11,
      "Comment": "0x00",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #24",
        "cmn w0, w20, lsl #24",
        "add w22, w21, w20",
        "mov x26, x22",
        "mov x20, x21",
        "bfxil x20, x22, #0, #8",
        "mov x7, x20"
      ]
    },
    "add bx, cx": {
      "ExpectedInstructionCount": 11,
      "Comment": "0x01",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #16",
        "cmn w0, w20, lsl #16",
        "add w22, w21, w20",
        "mov x26, x22",
        "mov x20, x21",
        "bfxil x20, x22, #0, #16",
        "mov x7, x20"
      ]
    },
    "add ebx, ecx": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x01",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "adds w22, w21, w20",
        "mov x26, x22",
        "mov x7, x22"
      ]
    },
    "add rbx, rcx": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x01",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "adds x22, x21, x20",
        "mov x26, x22",
        "mov x7, x22"
      ]
    },
    "db 0x02, 0xcb": {
      "ExpectedInstructionCount": 11,
      "Comment": [
        "0x02",
        "add bl, cl but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #24",
        "cmn w0, w20, lsl #24",
        "add w22, w21, w20",
        "mov x26, x22",
        "mov x20, x21",
        "bfxil x20, x22, #0, #8",
        "mov x5, x20"
      ]
    },
    "db 0x66, 0x03, 0xcb": {
      "ExpectedInstructionCount": 11,
      "Comment": [
        "0x03",
        "add bx, cx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #16",
        "cmn w0, w20, lsl #16",
        "add w22, w21, w20",
        "mov x26, x22",
        "mov x20, x21",
        "bfxil x20, x22, #0, #16",
        "mov x5, x20"
      ]
    },
    "db 0x03, 0xcb": {
      "ExpectedInstructionCount": 7,
      "Comment": [
        "0x03",
        "add ebx, ecx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "adds w22, w21, w20",
        "mov x26, x22",
        "mov x5, x22"
      ]
    },
    "db 0x48, 0x03, 0xcb": {
      "ExpectedInstructionCount": 7,
      "Comment": [
        "0x03",
        "add rbx, rcx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "adds x22, x21, x20",
        "mov x26, x22",
        "mov x5, x22"
      ]
    },
    "add al, 1": {
      "ExpectedInstructionCount": 10,
      "Comment": "0x04",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mov x27, x21",
        "lsl w0, w21, #24",
        "cmn w0, w20, lsl #24",
        "add w20, w21, #0x1 (1)",
        "mov x26, x20",
        "mov x22, x21",
        "bfxil x22, x20, #0, #8",
        "mov x4, x22"
      ]
    },
    "add ax, 1": {
      "ExpectedInstructionCount": 10,
      "Comment": "0x05",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mov x27, x21",
        "lsl w0, w21, #16",
        "cmn w0, w20, lsl #16",
        "add w20, w21, #0x1 (1)",
        "mov x26, x20",
        "mov x22, x21",
        "bfxil x22, x20, #0, #16",
        "mov x4, x22"
      ]
    },
    "add eax, 1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x05",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x27, x20",
        "adds w21, w20, #0x1 (1)",
        "mov x26, x21",
        "mov x4, x21"
      ]
    },
    "add rax, 1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x05",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x27, x20",
        "adds x21, x20, #0x1 (1)",
        "mov x26, x21",
        "mov x4, x21"
      ]
    },
    "add al, -1": {
      "ExpectedInstructionCount": 11,
      "Comment": "0x04",
      "ExpectedArm64ASM": [
        "mov w20, #0xff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "lsl w0, w21, #24",
        "cmn w0, w20, lsl #24",
        "add w20, w21, #0xff (255)",
        "mov x26, x20",
        "mov x22, x21",
        "bfxil x22, x20, #0, #8",
        "mov x4, x22"
      ]
    },
    "add ax, -1": {
      "ExpectedInstructionCount": 11,
      "Comment": "0x05",
      "ExpectedArm64ASM": [
        "mov w20, #0xffff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "lsl w0, w21, #16",
        "cmn w0, w20, lsl #16",
        "add w22, w21, w20",
        "mov x26, x22",
        "mov x20, x21",
        "bfxil x20, x22, #0, #16",
        "mov x4, x20"
      ]
    },
    "add eax, -1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x05",
      "ExpectedArm64ASM": [
        "mov w20, #0xffffffff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "adds w22, w21, w20",
        "mov x26, x22",
        "mov x4, x22"
      ]
    },
    "add rax, -1": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x05",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mvn w21, w20",
        "mov x27, x21",
        "subs x21, x20, #0x1 (1)",
        "mov x26, x21",
        "mov x4, x21"
      ]
    },
    "or bl, bh": {
      "ExpectedInstructionCount": 8,
      "Comment": "",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "lsr w21, w20, #8",
        "orr w22, w20, w21",
        "mov x21, x20",
        "bfxil x21, x22, #0, #8",
        "mov x7, x21",
        "mov x26, x22",
        "cmn wzr, w22, lsl #24"
      ]
    },
    "or bl, cl": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x08",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "orr w22, w21, w20",
        "mov x20, x21",
        "bfxil x20, x22, #0, #8",
        "mov x7, x20",
        "mov x26, x22",
        "cmn wzr, w22, lsl #24"
      ]
    },
    "or bx, cx": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x09",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "orr w22, w21, w20",
        "mov x20, x21",
        "bfxil x20, x22, #0, #16",
        "mov x7, x20",
        "mov x26, x22",
        "cmn wzr, w22, lsl #16"
      ]
    },
    "or ebx, ecx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x09",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "orr w22, w21, w20",
        "mov x7, x22",
        "mov x26, x22",
        "tst w22, w22"
      ]
    },
    "or rbx, rcx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x09",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "orr x22, x21, x20",
        "mov x7, x22",
        "mov x26, x22",
        "tst x22, x22"
      ]
    },
    "db 0x0A, 0xcb": {
      "ExpectedInstructionCount": 8,
      "Comment": [
        "0x0A",
        "or bl, cl but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "orr w22, w21, w20",
        "mov x20, x21",
        "bfxil x20, x22, #0, #8",
        "mov x5, x20",
        "mov x26, x22",
        "cmn wzr, w22, lsl #24"
      ]
    },
    "db 0x66, 0x0B, 0xcb": {
      "ExpectedInstructionCount": 8,
      "Comment": [
        "0x0B",
        "or bx, cx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "orr w22, w21, w20",
        "mov x20, x21",
        "bfxil x20, x22, #0, #16",
        "mov x5, x20",
        "mov x26, x22",
        "cmn wzr, w22, lsl #16"
      ]
    },
    "db 0x0B, 0xcb": {
      "ExpectedInstructionCount": 6,
      "Comment": [
        "0x0B",
        "or ebx, ecx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "orr w22, w21, w20",
        "mov x5, x22",
        "mov x26, x22",
        "tst w22, w22"
      ]
    },
    "db 0x48, 0x0B, 0xcb": {
      "ExpectedInstructionCount": 6,
      "Comment": [
        "0x0B",
        "or rbx, rcx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "orr x22, x21, x20",
        "mov x5, x22",
        "mov x26, x22",
        "tst x22, x22"
      ]
    },
    "or al, 1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x0C",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "orr w21, w20, #0x1",
        "mov x22, x20",
        "bfxil x22, x21, #0, #8",
        "mov x4, x22",
        "mov x26, x21",
        "cmn wzr, w21, lsl #24"
      ]
    },
    "or ax, 1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x0D",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "orr w21, w20, #0x1",
        "mov x22, x20",
        "bfxil x22, x21, #0, #16",
        "mov x4, x22",
        "mov x26, x21",
        "cmn wzr, w21, lsl #16"
      ]
    },
    "or eax, 1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0D",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "orr w21, w20, #0x1",
        "mov x4, x21",
        "mov x26, x21",
        "tst w21, w21"
      ]
    },
    "or rax, 1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x0D",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "orr x21, x20, #0x1",
        "mov x4, x21",
        "mov x26, x21",
        "tst x21, x21"
      ]
    },
    "or al, -1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x0C",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "orr w21, w20, #0xff",
        "mov x22, x20",
        "bfxil x22, x21, #0, #8",
        "mov x4, x22",
        "mov x26, x21",
        "cmn wzr, w21, lsl #24"
      ]
    },
    "or ax, -1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x0D",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "orr w21, w20, #0xffff",
        "mov x22, x20",
        "bfxil x22, x21, #0, #16",
        "mov x4, x22",
        "mov x26, x21",
        "cmn wzr, w21, lsl #16"
      ]
    },
    "or eax, -1": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x0D",
      "ExpectedArm64ASM": [
        "mov w20, #0xffffffff",
        "mov x21, x4",
        "orr w22, w21, w20",
        "mov x4, x22",
        "mov x26, x22",
        "tst w22, w22"
      ]
    },
    "or rax, -1": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x0D",
      "ExpectedArm64ASM": [
        "mov x20, #0xffffffffffffffff",
        "mov x21, x4",
        "orr x22, x21, x20",
        "mov x4, x22",
        "mov x26, x22",
        "tst x22, x22"
      ]
    },
    "adc bl, cl": {
      "ExpectedInstructionCount": 23,
      "Comment": "0x10",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "cset w22, hs",
        "adc w23, w21, w20",
        "uxtb w24, w23",
        "cmp x24, x20",
        "cset x23, lo",
        "cmp x24, x20",
        "cset x25, ls",
        "cmp x22, #0x1 (1)",
        "csel x30, x25, x23, eq",
        "cmn wzr, w24, lsl #24",
        "rmif x30, #63, #nzCv",
        "eor w22, w21, w20",
        "eor w20, w24, w21",
        "bic w23, w20, w22",
        "rmif x23, #7, #nzcV",
        "mov x26, x24",
        "mov x20, x21",
        "bfxil x20, x24, #0, #8",
        "mov x7, x20"
      ]
    },
    "adc bx, cx": {
      "ExpectedInstructionCount": 23,
      "Comment": "0x11",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "cset w22, hs",
        "adc w23, w21, w20",
        "uxth w24, w23",
        "cmp x24, x20",
        "cset x23, lo",
        "cmp x24, x20",
        "cset x25, ls",
        "cmp x22, #0x1 (1)",
        "csel x30, x25, x23, eq",
        "cmn wzr, w24, lsl #16",
        "rmif x30, #63, #nzCv",
        "eor w22, w21, w20",
        "eor w20, w24, w21",
        "bic w23, w20, w22",
        "rmif x23, #15, #nzcV",
        "mov x26, x24",
        "mov x20, x21",
        "bfxil x20, x24, #0, #16",
        "mov x7, x20"
      ]
    },
    "adc ebx, ecx": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x11",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "adcs w22, w21, w20",
        "mov x26, x22",
        "mov x7, x22"
      ]
    },
    "adc rbx, rcx": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x11",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "adcs x22, x21, x20",
        "mov x26, x22",
        "mov x7, x22"
      ]
    },
    "db 0x12, 0xcb": {
      "ExpectedInstructionCount": 23,
      "Comment": [
        "0x12",
        "adc bl, cl but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "cset w22, hs",
        "adc w23, w21, w20",
        "uxtb w24, w23",
        "cmp x24, x20",
        "cset x23, lo",
        "cmp x24, x20",
        "cset x25, ls",
        "cmp x22, #0x1 (1)",
        "csel x30, x25, x23, eq",
        "cmn wzr, w24, lsl #24",
        "rmif x30, #63, #nzCv",
        "eor w22, w21, w20",
        "eor w20, w24, w21",
        "bic w23, w20, w22",
        "rmif x23, #7, #nzcV",
        "mov x26, x24",
        "mov x20, x21",
        "bfxil x20, x24, #0, #8",
        "mov x5, x20"
      ]
    },
    "db 0x66, 0x13, 0xcb": {
      "ExpectedInstructionCount": 23,
      "Comment": [
        "0x13",
        "adc bx, cx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "cset w22, hs",
        "adc w23, w21, w20",
        "uxth w24, w23",
        "cmp x24, x20",
        "cset x23, lo",
        "cmp x24, x20",
        "cset x25, ls",
        "cmp x22, #0x1 (1)",
        "csel x30, x25, x23, eq",
        "cmn wzr, w24, lsl #16",
        "rmif x30, #63, #nzCv",
        "eor w22, w21, w20",
        "eor w20, w24, w21",
        "bic w23, w20, w22",
        "rmif x23, #15, #nzcV",
        "mov x26, x24",
        "mov x20, x21",
        "bfxil x20, x24, #0, #16",
        "mov x5, x20"
      ]
    },
    "db 0x13, 0xcb": {
      "ExpectedInstructionCount": 7,
      "Comment": [
        "0x13",
        "adc ebx, ecx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "adcs w22, w21, w20",
        "mov x26, x22",
        "mov x5, x22"
      ]
    },
    "db 0x48, 0x13, 0xcb": {
      "ExpectedInstructionCount": 7,
      "Comment": [
        "0x13",
        "adc rbx, rcx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "adcs x22, x21, x20",
        "mov x26, x22",
        "mov x5, x22"
      ]
    },
    "adc al, 1": {
      "ExpectedInstructionCount": 20,
      "Comment": "0x14",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mov x27, x21",
        "cset w22, hs",
        "adc w23, w21, w20",
        "uxtb w20, w23",
        "cmp w20, #0x1 (1)",
        "cset x23, lo",
        "cmp w20, #0x1 (1)",
        "cset x24, ls",
        "cmp x22, #0x1 (1)",
        "csel x25, x24, x23, eq",
        "cmn wzr, w20, lsl #24",
        "rmif x25, #63, #nzCv",
        "bic w22, w20, w21",
        "rmif x22, #7, #nzcV",
        "mov x26, x20",
        "mov x22, x21",
        "bfxil x22, x20, #0, #8",
        "mov x4, x22"
      ]
    },
    "adc ax, 1": {
      "ExpectedInstructionCount": 20,
      "Comment": "0x15",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mov x27, x21",
        "cset w22, hs",
        "adc w23, w21, w20",
        "uxth w20, w23",
        "cmp w20, #0x1 (1)",
        "cset x23, lo",
        "cmp w20, #0x1 (1)",
        "cset x24, ls",
        "cmp x22, #0x1 (1)",
        "csel x25, x24, x23, eq",
        "cmn wzr, w20, lsl #16",
        "rmif x25, #63, #nzCv",
        "bic w22, w20, w21",
        "rmif x22, #15, #nzcV",
        "mov x26, x20",
        "mov x22, x21",
        "bfxil x22, x20, #0, #16",
        "mov x4, x22"
      ]
    },
    "adc eax, 1": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x15",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mov x27, x21",
        "adcs w22, w21, w20",
        "mov x26, x22",
        "mov x4, x22"
      ]
    },
    "adc rax, 1": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x15",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mov x27, x21",
        "adcs x22, x21, x20",
        "mov x26, x22",
        "mov x4, x22"
      ]
    },
    "adc al, -1": {
      "ExpectedInstructionCount": 21,
      "Comment": "0x14",
      "ExpectedArm64ASM": [
        "mov w20, #0xff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "cset w22, hs",
        "adc w23, w21, w20",
        "uxtb w20, w23",
        "cmp w20, #0xff (255)",
        "cset x23, lo",
        "cmp w20, #0xff (255)",
        "cset x24, ls",
        "cmp x22, #0x1 (1)",
        "csel x25, x24, x23, eq",
        "cmn wzr, w20, lsl #24",
        "rmif x25, #63, #nzCv",
        "bic w22, w21, w20",
        "rmif x22, #7, #nzcV",
        "mov x26, x20",
        "mov x22, x21",
        "bfxil x22, x20, #0, #8",
        "mov x4, x22"
      ]
    },
    "adc ax, -1": {
      "ExpectedInstructionCount": 21,
      "Comment": "0x15",
      "ExpectedArm64ASM": [
        "mov w20, #0xffff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "cset w22, hs",
        "adc w23, w21, w20",
        "uxth w24, w23",
        "cmp w24, w20",
        "cset x23, lo",
        "cmp w24, w20",
        "cset x25, ls",
        "cmp x22, #0x1 (1)",
        "csel x20, x25, x23, eq",
        "cmn wzr, w24, lsl #16",
        "rmif x20, #63, #nzCv",
        "bic w20, w21, w24",
        "rmif x20, #15, #nzcV",
        "mov x26, x24",
        "mov x20, x21",
        "bfxil x20, x24, #0, #16",
        "mov x4, x20"
      ]
    },
    "adc eax, -1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x15",
      "ExpectedArm64ASM": [
        "mov w20, #0xffffffff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "adcs w22, w21, w20",
        "mov x26, x22",
        "mov x4, x22"
      ]
    },
    "adc rax, -1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x15",
      "ExpectedArm64ASM": [
        "mov x20, #0xffffffffffffffff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "adcs x22, x21, x20",
        "mov x26, x22",
        "mov x4, x22"
      ]
    },
    "sbb bl, cl": {
      "ExpectedInstructionCount": 24,
      "Comment": "0x18",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "cset w22, hs",
        "add w23, w20, w22",
        "sub w24, w21, w23",
        "uxtb w23, w24",
        "cmp x23, x21",
        "cset x24, hi",
        "cmp x23, x21",
        "cset x25, hs",
        "cmp x22, #0x1 (1)",
        "csel x30, x25, x24, eq",
        "cmn wzr, w23, lsl #24",
        "rmif x30, #63, #nzCv",
        "eor w22, w21, w20",
        "eor w20, w23, w21",
        "and w24, w20, w22",
        "rmif x24, #7, #nzcV",
        "mov x26, x23",
        "mov x20, x21",
        "bfxil x20, x23, #0, #8",
        "mov x7, x20"
      ]
    },
    "sbb bx, cx": {
      "ExpectedInstructionCount": 24,
      "Comment": "0x19",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "cset w22, hs",
        "add w23, w20, w22",
        "sub w24, w21, w23",
        "uxth w23, w24",
        "cmp x23, x21",
        "cset x24, hi",
        "cmp x23, x21",
        "cset x25, hs",
        "cmp x22, #0x1 (1)",
        "csel x30, x25, x24, eq",
        "cmn wzr, w23, lsl #16",
        "rmif x30, #63, #nzCv",
        "eor w22, w21, w20",
        "eor w20, w23, w21",
        "and w24, w20, w22",
        "rmif x24, #15, #nzcV",
        "mov x26, x23",
        "mov x20, x21",
        "bfxil x20, x23, #0, #16",
        "mov x7, x20"
      ]
    },
    "sbb ebx, ecx": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x19",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "cfinv",
        "sbcs w22, w21, w20",
        "cfinv",
        "mov x26, x22",
        "mov x7, x22"
      ]
    },
    "sbb rbx, rcx": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x19",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "cfinv",
        "sbcs x22, x21, x20",
        "cfinv",
        "mov x26, x22",
        "mov x7, x22"
      ]
    },
    "db 0x1A, 0xcb": {
      "ExpectedInstructionCount": 24,
      "Comment": [
        "0x1A",
        "sbb bl, cl but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "cset w22, hs",
        "add w23, w20, w22",
        "sub w24, w21, w23",
        "uxtb w23, w24",
        "cmp x23, x21",
        "cset x24, hi",
        "cmp x23, x21",
        "cset x25, hs",
        "cmp x22, #0x1 (1)",
        "csel x30, x25, x24, eq",
        "cmn wzr, w23, lsl #24",
        "rmif x30, #63, #nzCv",
        "eor w22, w21, w20",
        "eor w20, w23, w21",
        "and w24, w20, w22",
        "rmif x24, #7, #nzcV",
        "mov x26, x23",
        "mov x20, x21",
        "bfxil x20, x23, #0, #8",
        "mov x5, x20"
      ]
    },
    "db 0x66, 0x1B, 0xcb": {
      "ExpectedInstructionCount": 24,
      "Comment": [
        "0x1B",
        "sbb bx, cx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "cset w22, hs",
        "add w23, w20, w22",
        "sub w24, w21, w23",
        "uxth w23, w24",
        "cmp x23, x21",
        "cset x24, hi",
        "cmp x23, x21",
        "cset x25, hs",
        "cmp x22, #0x1 (1)",
        "csel x30, x25, x24, eq",
        "cmn wzr, w23, lsl #16",
        "rmif x30, #63, #nzCv",
        "eor w22, w21, w20",
        "eor w20, w23, w21",
        "and w24, w20, w22",
        "rmif x24, #15, #nzcV",
        "mov x26, x23",
        "mov x20, x21",
        "bfxil x20, x23, #0, #16",
        "mov x5, x20"
      ]
    },
    "db 0x1B, 0xcb": {
      "ExpectedInstructionCount": 9,
      "Comment": [
        "0x1B",
        "sbb ebx, ecx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "cfinv",
        "sbcs w22, w21, w20",
        "cfinv",
        "mov x26, x22",
        "mov x5, x22"
      ]
    },
    "db 0x48, 0x1B, 0xcb": {
      "ExpectedInstructionCount": 9,
      "Comment": [
        "0x1B",
        "sbb rbx, rcx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "cfinv",
        "sbcs x22, x21, x20",
        "cfinv",
        "mov x26, x22",
        "mov x5, x22"
      ]
    },
    "sbb al, 1": {
      "ExpectedInstructionCount": 21,
      "Comment": "0x1C",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mov x27, x21",
        "cset w22, hs",
        "add w23, w20, w22",
        "sub w20, w21, w23",
        "uxtb w23, w20",
        "cmp x23, x21",
        "cset x20, hi",
        "cmp x23, x21",
        "cset x24, hs",
        "cmp x22, #0x1 (1)",
        "csel x25, x24, x20, eq",
        "cmn wzr, w23, lsl #24",
        "rmif x25, #63, #nzCv",
        "bic w20, w21, w23",
        "rmif x20, #7, #nzcV",
        "mov x26, x23",
        "mov x20, x21",
        "bfxil x20, x23, #0, #8",
        "mov x4, x20"
      ]
    },
    "sbb ax, 1": {
      "ExpectedInstructionCount": 21,
      "Comment": "0x1D",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mov x27, x21",
        "cset w22, hs",
        "add w23, w20, w22",
        "sub w20, w21, w23",
        "uxth w23, w20",
        "cmp x23, x21",
        "cset x20, hi",
        "cmp x23, x21",
        "cset x24, hs",
        "cmp x22, #0x1 (1)",
        "csel x25, x24, x20, eq",
        "cmn wzr, w23, lsl #16",
        "rmif x25, #63, #nzCv",
        "bic w20, w21, w23",
        "rmif x20, #15, #nzcV",
        "mov x26, x23",
        "mov x20, x21",
        "bfxil x20, x23, #0, #16",
        "mov x4, x20"
      ]
    },
    "sbb eax, 1": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x1D",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mov x27, x21",
        "cfinv",
        "sbcs w22, w21, w20",
        "cfinv",
        "mov x26, x22",
        "mov x4, x22"
      ]
    },
    "sbb rax, 1": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x1D",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mov x27, x21",
        "cfinv",
        "sbcs x22, x21, x20",
        "cfinv",
        "mov x26, x22",
        "mov x4, x22"
      ]
    },
    "sbb al, -1": {
      "ExpectedInstructionCount": 22,
      "Comment": "0x1C",
      "ExpectedArm64ASM": [
        "mov w20, #0xff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "cset w22, hs",
        "add w23, w20, w22",
        "sub w20, w21, w23",
        "uxtb w23, w20",
        "cmp x23, x21",
        "cset x20, hi",
        "cmp x23, x21",
        "cset x24, hs",
        "cmp x22, #0x1 (1)",
        "csel x25, x24, x20, eq",
        "cmn wzr, w23, lsl #24",
        "rmif x25, #63, #nzCv",
        "bic w20, w23, w21",
        "rmif x20, #7, #nzcV",
        "mov x26, x23",
        "mov x20, x21",
        "bfxil x20, x23, #0, #8",
        "mov x4, x20"
      ]
    },
    "sbb ax, -1": {
      "ExpectedInstructionCount": 22,
      "Comment": "0x1D",
      "ExpectedArm64ASM": [
        "mov w20, #0xffff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "cset w22, hs",
        "add w23, w20, w22",
        "sub w20, w21, w23",
        "uxth w23, w20",
        "cmp x23, x21",
        "cset x20, hi",
        "cmp x23, x21",
        "cset x24, hs",
        "cmp x22, #0x1 (1)",
        "csel x25, x24, x20, eq",
        "cmn wzr, w23, lsl #16",
        "rmif x25, #63, #nzCv",
        "bic w20, w23, w21",
        "rmif x20, #15, #nzcV",
        "mov x26, x23",
        "mov x20, x21",
        "bfxil x20, x23, #0, #16",
        "mov x4, x20"
      ]
    },
    "sbb eax, -1": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x1D",
      "ExpectedArm64ASM": [
        "mov w20, #0xffffffff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "cfinv",
        "sbcs w22, w21, w20",
        "cfinv",
        "mov x26, x22",
        "mov x4, x22"
      ]
    },
    "sbb rax, -1": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x1D",
      "ExpectedArm64ASM": [
        "mov x20, #0xffffffffffffffff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "cfinv",
        "sbcs x22, x21, x20",
        "cfinv",
        "mov x26, x22",
        "mov x4, x22"
      ]
    },
    "and bl, cl": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x20",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "and w22, w21, w20",
        "cmn wzr, w22, lsl #24",
        "mov x26, x22",
        "mov x20, x21",
        "bfxil x20, x22, #0, #8",
        "mov x7, x20"
      ]
    },
    "and bx, cx": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x21",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "and w22, w21, w20",
        "cmn wzr, w22, lsl #16",
        "mov x26, x22",
        "mov x20, x21",
        "bfxil x20, x22, #0, #16",
        "mov x7, x20"
      ]
    },
    "and ebx, ecx": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x21",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "ands w22, w21, w20",
        "mov x26, x22",
        "mov x7, x22"
      ]
    },
    "and rbx, rcx": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x21",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "ands x22, x21, x20",
        "mov x26, x22",
        "mov x7, x22"
      ]
    },
    "db 0x22, 0xcb": {
      "ExpectedInstructionCount": 8,
      "Comment": [
        "0x22",
        "and bl, cl but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "and w22, w21, w20",
        "cmn wzr, w22, lsl #24",
        "mov x26, x22",
        "mov x20, x21",
        "bfxil x20, x22, #0, #8",
        "mov x5, x20"
      ]
    },
    "db 0x66, 0x23, 0xcb": {
      "ExpectedInstructionCount": 8,
      "Comment": [
        "0x23",
        "and bx, cx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "and w22, w21, w20",
        "cmn wzr, w22, lsl #16",
        "mov x26, x22",
        "mov x20, x21",
        "bfxil x20, x22, #0, #16",
        "mov x5, x20"
      ]
    },
    "db 0x23, 0xcb": {
      "ExpectedInstructionCount": 5,
      "Comment": [
        "0x23",
        "and ebx, ecx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "ands w22, w21, w20",
        "mov x26, x22",
        "mov x5, x22"
      ]
    },
    "db 0x48, 0x23, 0xcb": {
      "ExpectedInstructionCount": 5,
      "Comment": [
        "0x23",
        "and rbx, rcx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "ands x22, x21, x20",
        "mov x26, x22",
        "mov x5, x22"
      ]
    },
    "and al, 1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x24",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "and w21, w20, #0x1",
        "cmn wzr, w21, lsl #24",
        "mov x26, x21",
        "mov x22, x20",
        "bfxil x22, x21, #0, #8",
        "mov x4, x22"
      ]
    },
    "and ax, 1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x25",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "and w21, w20, #0x1",
        "cmn wzr, w21, lsl #16",
        "mov x26, x21",
        "mov x22, x20",
        "bfxil x22, x21, #0, #16",
        "mov x4, x22"
      ]
    },
    "and eax, 1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x25",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ands w21, w20, #0x1",
        "mov x26, x21",
        "mov x4, x21"
      ]
    },
    "and rax, 1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x25",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ands x21, x20, #0x1",
        "mov x26, x21",
        "mov x4, x21"
      ]
    },
    "and al, -1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x24",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "and w21, w20, #0xff",
        "cmn wzr, w21, lsl #24",
        "mov x26, x21",
        "mov x22, x20",
        "bfxil x22, x21, #0, #8",
        "mov x4, x22"
      ]
    },
    "and ax, -1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x25",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "and w21, w20, #0xffff",
        "cmn wzr, w21, lsl #16",
        "mov x26, x21",
        "mov x22, x20",
        "bfxil x22, x21, #0, #16",
        "mov x4, x22"
      ]
    },
    "and eax, -1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x25",
      "ExpectedArm64ASM": [
        "mov w20, #0xffffffff",
        "mov x21, x4",
        "ands w22, w21, w20",
        "mov x26, x22",
        "mov x4, x22"
      ]
    },
    "and rax, -1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x25",
      "ExpectedArm64ASM": [
        "mov x20, #0xffffffffffffffff",
        "mov x21, x4",
        "ands x22, x21, x20",
        "mov x26, x22",
        "mov x4, x22"
      ]
    },
    "sub bl, cl": {
      "ExpectedInstructionCount": 12,
      "Comment": "0x28",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #24",
        "cmp w0, w20, lsl #24",
        "sub w22, w21, w20",
        "mov x26, x22",
        "cfinv",
        "mov x20, x21",
        "bfxil x20, x22, #0, #8",
        "mov x7, x20"
      ]
    },
    "sub bx, cx": {
      "ExpectedInstructionCount": 12,
      "Comment": "0x29",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #16",
        "cmp w0, w20, lsl #16",
        "sub w22, w21, w20",
        "mov x26, x22",
        "cfinv",
        "mov x20, x21",
        "bfxil x20, x22, #0, #16",
        "mov x7, x20"
      ]
    },
    "sub ebx, ecx": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x29",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "subs w22, w21, w20",
        "mov x26, x22",
        "cfinv",
        "mov x7, x22"
      ]
    },
    "sub rbx, rcx": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x29",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "subs x22, x21, x20",
        "mov x26, x22",
        "cfinv",
        "mov x7, x22"
      ]
    },
    "db 0x2A, 0xcb": {
      "ExpectedInstructionCount": 12,
      "Comment": [
        "0x2A",
        "sub bl, cl but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #24",
        "cmp w0, w20, lsl #24",
        "sub w22, w21, w20",
        "mov x26, x22",
        "cfinv",
        "mov x20, x21",
        "bfxil x20, x22, #0, #8",
        "mov x5, x20"
      ]
    },
    "db 0x66, 0x2B, 0xcb": {
      "ExpectedInstructionCount": 12,
      "Comment": [
        "0x2B",
        "sub bx, cx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #16",
        "cmp w0, w20, lsl #16",
        "sub w22, w21, w20",
        "mov x26, x22",
        "cfinv",
        "mov x20, x21",
        "bfxil x20, x22, #0, #16",
        "mov x5, x20"
      ]
    },
    "db 0x2B, 0xcb": {
      "ExpectedInstructionCount": 8,
      "Comment": [
        "0x2B",
        "sub ebx, ecx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "subs w22, w21, w20",
        "mov x26, x22",
        "cfinv",
        "mov x5, x22"
      ]
    },
    "db 0x48, 0x2B, 0xcb": {
      "ExpectedInstructionCount": 8,
      "Comment": [
        "0x2B",
        "sub rbx, rcx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "subs x22, x21, x20",
        "mov x26, x22",
        "cfinv",
        "mov x5, x22"
      ]
    },
    "sub al, 1": {
      "ExpectedInstructionCount": 11,
      "Comment": "0x2C",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mov x27, x21",
        "lsl w0, w21, #24",
        "cmp w0, w20, lsl #24",
        "sub w20, w21, #0x1 (1)",
        "mov x26, x20",
        "cfinv",
        "mov x22, x21",
        "bfxil x22, x20, #0, #8",
        "mov x4, x22"
      ]
    },
    "sub ax, 1": {
      "ExpectedInstructionCount": 11,
      "Comment": "0x2D",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mov x27, x21",
        "lsl w0, w21, #16",
        "cmp w0, w20, lsl #16",
        "sub w20, w21, #0x1 (1)",
        "mov x26, x20",
        "cfinv",
        "mov x22, x21",
        "bfxil x22, x20, #0, #16",
        "mov x4, x22"
      ]
    },
    "sub eax, 1": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x2D",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x27, x20",
        "subs w21, w20, #0x1 (1)",
        "mov x26, x21",
        "cfinv",
        "mov x4, x21"
      ]
    },
    "sub rax, 1": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x2D",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x27, x20",
        "subs x21, x20, #0x1 (1)",
        "mov x26, x21",
        "cfinv",
        "mov x4, x21"
      ]
    },
    "sub al, -1": {
      "ExpectedInstructionCount": 12,
      "Comment": "0x2C",
      "ExpectedArm64ASM": [
        "mov w20, #0xff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "lsl w0, w21, #24",
        "cmp w0, w20, lsl #24",
        "sub w20, w21, #0xff (255)",
        "mov x26, x20",
        "cfinv",
        "mov x22, x21",
        "bfxil x22, x20, #0, #8",
        "mov x4, x22"
      ]
    },
    "sub ax, -1": {
      "ExpectedInstructionCount": 12,
      "Comment": "0x2D",
      "ExpectedArm64ASM": [
        "mov w20, #0xffff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "lsl w0, w21, #16",
        "cmp w0, w20, lsl #16",
        "sub w22, w21, w20",
        "mov x26, x22",
        "cfinv",
        "mov x20, x21",
        "bfxil x20, x22, #0, #16",
        "mov x4, x20"
      ]
    },
    "sub eax, -1": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x2D",
      "ExpectedArm64ASM": [
        "mov w20, #0xffffffff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "subs w22, w21, w20",
        "mov x26, x22",
        "cfinv",
        "mov x4, x22"
      ]
    },
    "sub rax, -1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x2D",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mvn w21, w20",
        "mov x27, x21",
        "adds x21, x20, #0x1 (1)",
        "mov x26, x21",
        "cfinv",
        "mov x4, x21"
      ]
    },
    "xor bl, cl": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x30",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x20, x21",
        "bfxil x20, x22, #0, #8",
        "mov x7, x20",
        "mov x26, x22",
        "cmn wzr, w22, lsl #24"
      ]
    },
    "xor bx, cx": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x31",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x20, x21",
        "bfxil x20, x22, #0, #16",
        "mov x7, x20",
        "mov x26, x22",
        "cmn wzr, w22, lsl #16"
      ]
    },
    "xor ebx, ecx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x31",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x7, x22",
        "mov x26, x22",
        "tst w22, w22"
      ]
    },
    "xor rbx, rcx": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x31",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor x22, x21, x20",
        "mov x7, x22",
        "mov x26, x22",
        "tst x22, x22"
      ]
    },
    "db 0x32, 0xcb": {
      "ExpectedInstructionCount": 8,
      "Comment": [
        "0x32",
        "xor bl, cl but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x20, x21",
        "bfxil x20, x22, #0, #8",
        "mov x5, x20",
        "mov x26, x22",
        "cmn wzr, w22, lsl #24"
      ]
    },
    "db 0x66, 0x33, 0xcb": {
      "ExpectedInstructionCount": 8,
      "Comment": [
        "0x33",
        "xor bx, cx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x20, x21",
        "bfxil x20, x22, #0, #16",
        "mov x5, x20",
        "mov x26, x22",
        "cmn wzr, w22, lsl #16"
      ]
    },
    "db 0x33, 0xcb": {
      "ExpectedInstructionCount": 6,
      "Comment": [
        "0x33",
        "xor ebx, ecx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x5, x22",
        "mov x26, x22",
        "tst w22, w22"
      ]
    },
    "db 0x48, 0x33, 0xcb": {
      "ExpectedInstructionCount": 6,
      "Comment": [
        "0x33",
        "xor rbx, rcx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor x22, x21, x20",
        "mov x5, x22",
        "mov x26, x22",
        "tst x22, x22"
      ]
    },
    "xor al, 1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x34",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "eor w21, w20, #0x1",
        "mov x22, x20",
        "bfxil x22, x21, #0, #8",
        "mov x4, x22",
        "mov x26, x21",
        "cmn wzr, w21, lsl #24"
      ]
    },
    "xor ax, 1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x35",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "eor w21, w20, #0x1",
        "mov x22, x20",
        "bfxil x22, x21, #0, #16",
        "mov x4, x22",
        "mov x26, x21",
        "cmn wzr, w21, lsl #16"
      ]
    },
    "xor eax, 1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x35",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "eor w21, w20, #0x1",
        "mov x4, x21",
        "mov x26, x21",
        "tst w21, w21"
      ]
    },
    "xor rax, 1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x35",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "eor x21, x20, #0x1",
        "mov x4, x21",
        "mov x26, x21",
        "tst x21, x21"
      ]
    },
    "cmp bl, cl": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x38",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #24",
        "cmp w0, w20, lsl #24",
        "sub w22, w21, w20",
        "mov x26, x22",
        "cfinv"
      ]
    },
    "xor al, -1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x34",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "eor w21, w20, #0xff",
        "mov x22, x20",
        "bfxil x22, x21, #0, #8",
        "mov x4, x22",
        "mov x26, x21",
        "cmn wzr, w21, lsl #24"
      ]
    },
    "xor ax, -1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x35",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "eor w21, w20, #0xffff",
        "mov x22, x20",
        "bfxil x22, x21, #0, #16",
        "mov x4, x22",
        "mov x26, x21",
        "cmn wzr, w21, lsl #16"
      ]
    },
    "xor eax, -1": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x35",
      "ExpectedArm64ASM": [
        "mov w20, #0xffffffff",
        "mov x21, x4",
        "eor w22, w21, w20",
        "mov x4, x22",
        "mov x26, x22",
        "tst w22, w22"
      ]
    },
    "xor rax, -1": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x35",
      "ExpectedArm64ASM": [
        "mov x20, #0xffffffffffffffff",
        "mov x21, x4",
        "eor x22, x21, x20",
        "mov x4, x22",
        "mov x26, x22",
        "tst x22, x22"
      ]
    },
    "cmp bx, cx": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x39",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #16",
        "cmp w0, w20, lsl #16",
        "sub w22, w21, w20",
        "mov x26, x22",
        "cfinv"
      ]
    },
    "cmp ebx, ecx": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x39",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "subs w22, w21, w20",
        "mov x26, x22",
        "cfinv"
      ]
    },
    "cmp rbx, rcx": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x39",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov x21, x7",
        "eor w22, w21, w20",
        "mov x27, x22",
        "subs x22, x21, x20",
        "mov x26, x22",
        "cfinv"
      ]
    },
    "db 0x3A, 0xcb": {
      "ExpectedInstructionCount": 9,
      "Comment": [
        "0x3A",
        "cmp bl, cl but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #24",
        "cmp w0, w20, lsl #24",
        "sub w22, w21, w20",
        "mov x26, x22",
        "cfinv"
      ]
    },
    "db 0x66, 0x3B, 0xcb": {
      "ExpectedInstructionCount": 9,
      "Comment": [
        "0x3B",
        "cmp bx, cx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #16",
        "cmp w0, w20, lsl #16",
        "sub w22, w21, w20",
        "mov x26, x22",
        "cfinv"
      ]
    },
    "db 0x3B, 0xcb": {
      "ExpectedInstructionCount": 7,
      "Comment": [
        "0x3B",
        "cmp ebx, ecx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "subs w22, w21, w20",
        "mov x26, x22",
        "cfinv"
      ]
    },
    "db 0x48, 0x3B, 0xcb": {
      "ExpectedInstructionCount": 7,
      "Comment": [
        "0x3B",
        "cmp rbx, rcx but modrm.rm as source"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x5",
        "eor w22, w21, w20",
        "mov x27, x22",
        "subs x22, x21, x20",
        "mov x26, x22",
        "cfinv"
      ]
    },
    "cmp al, 1": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x3C",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mov x27, x21",
        "lsl w0, w21, #24",
        "cmp w0, w20, lsl #24",
        "sub w20, w21, #0x1 (1)",
        "mov x26, x20",
        "cfinv"
      ]
    },
    "cmp ax, 1": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x3D",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x21, x4",
        "mov x27, x21",
        "lsl w0, w21, #16",
        "cmp w0, w20, lsl #16",
        "sub w20, w21, #0x1 (1)",
        "mov x26, x20",
        "cfinv"
      ]
    },
    "cmp eax, 1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x3D",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x27, x20",
        "subs w21, w20, #0x1 (1)",
        "mov x26, x21",
        "cfinv"
      ]
    },
    "cmp rax, 1": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x3D",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x27, x20",
        "subs x21, x20, #0x1 (1)",
        "mov x26, x21",
        "cfinv"
      ]
    },
    "cmp al, -1": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x3C",
      "ExpectedArm64ASM": [
        "mov w20, #0xff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "lsl w0, w21, #24",
        "cmp w0, w20, lsl #24",
        "sub w20, w21, #0xff (255)",
        "mov x26, x20",
        "cfinv"
      ]
    },
    "cmp ax, -1": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x3D",
      "ExpectedArm64ASM": [
        "mov w20, #0xffff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "lsl w0, w21, #16",
        "cmp w0, w20, lsl #16",
        "sub w22, w21, w20",
        "mov x26, x22",
        "cfinv"
      ]
    },
    "cmp eax, -1": {
      "ExpectedInstructionCount": 7,
      "Comment": "0x3D",
      "ExpectedArm64ASM": [
        "mov w20, #0xffffffff",
        "mov x21, x4",
        "mvn w22, w21",
        "mov x27, x22",
        "subs w22, w21, w20",
        "mov x26, x22",
        "cfinv"
      ]
    },
    "cmp rax, -1": {
      "ExpectedInstructionCount": 6,
      "Comment": "0x3D",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mvn w21, w20",
        "mov x27, x21",
        "adds x21, x20, #0x1 (1)",
        "mov x26, x21",
        "cfinv"
      ]
    },
    "imul ax, bx, 257": {
      "ExpectedInstructionCount": 12,
      "Comment": "0x69",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "sxth x21, w20",
        "mov w20, #0x101",
        "mul x22, x21, x20",
        "sbfx x20, x22, #16, #16",
        "mov x21, x4",
        "mov x23, x21",
        "bfxil x23, x22, #0, #16",
        "mov x4, x23",
        "sbfx x21, x22, #15, #1",
        "cmp x20, x21",
        "ccmn xzr, #0, #nzCV, eq"
      ]
    },
    "imul eax, ebx, 257": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x69",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov w21, #0x101",
        "smull x22, w20, w21",
        "asr x23, x22, #32",
        "mul w22, w20, w21",
        "mov x4, x22",
        "sbfx x20, x22, #31, #1",
        "cmp x23, x20",
        "ccmn xzr, #0, #nzCV, eq"
      ]
    },
    "imul rax, rbx, 257": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x69",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov w21, #0x101",
        "smulh x22, x20, x21",
        "mul x23, x20, x21",
        "mov x4, x23",
        "asr x20, x23, #63",
        "cmp x22, x20",
        "ccmn xzr, #0, #nzCV, eq"
      ]
    },
    "imul ax, bx, 3": {
      "ExpectedInstructionCount": 12,
      "Comment": "0x6b",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "sxth x21, w20",
        "mov w20, #0x3",
        "mul x22, x21, x20",
        "sbfx x20, x22, #16, #16",
        "mov x21, x4",
        "mov x23, x21",
        "bfxil x23, x22, #0, #16",
        "mov x4, x23",
        "sbfx x21, x22, #15, #1",
        "cmp x20, x21",
        "ccmn xzr, #0, #nzCV, eq"
      ]
    },
    "imul eax, ebx, 3": {
      "ExpectedInstructionCount": 9,
      "Comment": "0x6b",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov w21, #0x3",
        "smull x22, w20, w21",
        "asr x23, x22, #32",
        "mul w22, w20, w21",
        "mov x4, x22",
        "sbfx x20, x22, #31, #1",
        "cmp x23, x20",
        "ccmn xzr, #0, #nzCV, eq"
      ]
    },
    "imul rax, rbx, 3": {
      "ExpectedInstructionCount": 8,
      "Comment": "0x6b",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov w21, #0x3",
        "smulh x22, x20, x21",
        "mul x23, x20, x21",
        "mov x4, x23",
        "asr x20, x23, #63",
        "cmp x22, x20",
        "ccmn xzr, #0, #nzCV, eq"
      ]
    },
    "test al, bl": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x84",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "and w22, w21, w20",
        "cmn wzr, w22, lsl #24",
        "mov x26, x22"
      ]
    },
    "test ax, bx": {
      "ExpectedInstructionCount": 5,
      "Comment": "0x84",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "and w22, w21, w20",
        "cmn wzr, w22, lsl #16",
        "mov x26, x22"
      ]
    },
    "test eax, ebx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x84",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "ands w22, w21, w20",
        "mov x26, x22"
      ]
    },
    "test rax, rbx": {
      "ExpectedInstructionCount": 4,
      "Comment": "0x84",
      "ExpectedArm64ASM": [
        "mov x20, x7",
        "mov x21, x4",
        "ands x22, x21, x20",
        "mov x26, x22"
      ]
    },
    "pushf": {
      "ExpectedInstructionCount": 44,
      "Comment": "0x9c",
      "ExpectedArm64ASM": [
        "cset w20, hs",
        "mov x21, x27",
        "mov x22, x26",
        "eor w23, w21, w22",
        "ubfx w21, w23, #4, #1",
        "orr x23, x20, x21, lsl #4",
        "ldrb w20, [x28, #712]",
        "orr x21, x23, x20, lsl #8",
        "ldrb w20, [x28, #713]",
        "orr x23, x21, x20, lsl #9",
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "orr x20, x23, x21, lsl #10",
        "cset w21, vs",
        "orr x23, x20, x21, lsl #11",
        "ldrb w20, [x28, #716]",
        "orr x21, x23, x20, lsl #12",
        "ldrb w20, [x28, #718]",
        "orr x23, x21, x20, lsl #14",
        "ldrb w20, [x28, #720]",
        "orr x21, x23, x20, lsl #16",
        "ldrb w20, [x28, #721]",
        "orr x23, x21, x20, lsl #17",
        "ldrb w20, [x28, #722]",
        "orr x21, x23, x20, lsl #18",
        "ldrb w20, [x28, #723]",
        "orr x23, x21, x20, lsl #19",
        "ldrb w20, [x28, #724]",
        "orr x21, x23, x20, lsl #20",
        "ldrb w20, [x28, #725]",
        "orr x23, x21, x20, lsl #21",
        "eor w20, w22, w22, lsr #4",
        "eor w21, w20, w20, lsr #2",
        "eor w20, w21, w21, lsr #1",
        "orr x21, x20, #0xfffffffffffffffe",
        "orn x20, x23, x21, ror #62",
        "mrs x21, nzcv",
        "and x22, x21, #0xc0000000",
        "orr x21, x20, x22, lsr #24",
        "orr x20, x21, #0x2",
        "mov x21, x8",
        "mov x22, x21",
        "str x20, [x22, #-8]!",
        "mov x8, x22"
      ]
    },
    "pushfq": {
      "ExpectedInstructionCount": 44,
      "Comment": "0x9c",
      "ExpectedArm64ASM": [
        "cset w20, hs",
        "mov x21, x27",
        "mov x22, x26",
        "eor w23, w21, w22",
        "ubfx w21, w23, #4, #1",
        "orr x23, x20, x21, lsl #4",
        "ldrb w20, [x28, #712]",
        "orr x21, x23, x20, lsl #8",
        "ldrb w20, [x28, #713]",
        "orr x23, x21, x20, lsl #9",
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "orr x20, x23, x21, lsl #10",
        "cset w21, vs",
        "orr x23, x20, x21, lsl #11",
        "ldrb w20, [x28, #716]",
        "orr x21, x23, x20, lsl #12",
        "ldrb w20, [x28, #718]",
        "orr x23, x21, x20, lsl #14",
        "ldrb w20, [x28, #720]",
        "orr x21, x23, x20, lsl #16",
        "ldrb w20, [x28, #721]",
        "orr x23, x21, x20, lsl #17",
        "ldrb w20, [x28, #722]",
        "orr x21, x23, x20, lsl #18",
        "ldrb w20, [x28, #723]",
        "orr x23, x21, x20, lsl #19",
        "ldrb w20, [x28, #724]",
        "orr x21, x23, x20, lsl #20",
        "ldrb w20, [x28, #725]",
        "orr x23, x21, x20, lsl #21",
        "eor w20, w22, w22, lsr #4",
        "eor w21, w20, w20, lsr #2",
        "eor w20, w21, w21, lsr #1",
        "orr x21, x20, #0xfffffffffffffffe",
        "orn x20, x23, x21, ror #62",
        "mrs x21, nzcv",
        "and x22, x21, #0xc0000000",
        "orr x21, x20, x22, lsr #24",
        "orr x20, x21, #0x2",
        "mov x21, x8",
        "mov x22, x21",
        "str x20, [x22, #-8]!",
        "mov x8, x22"
      ]
    },
    "popf": {
      "ExpectedInstructionCount": 38,
      "Comment": "0x9d",
      "ExpectedArm64ASM": [
        "mov x20, x8",
        "ldr x21, [x20]",
        "add x22, x20, #0x8 (8)",
        "mov x8, x22",
        "mov w20, #0x202",
        "orr x22, x21, x20",
        "rmif x22, #63, #nzCv",
        "ubfx w20, w22, #2, #1",
        "mov w21, #0x1",
        "eor w23, w20, #0x1",
        "mov x26, x23",
        "mov x27, x22",
        "rmif x22, #4, #nZcv",
        "rmif x22, #4, #Nzcv",
        "ubfx w20, w22, #8, #1",
        "strb w20, [x28, #712]",
        "ubfx w20, w22, #9, #1",
        "strb w20, [x28, #713]",
        "ubfx w20, w22, #10, #1",
        "sub x23, x21, x20, lsl #1",
        "strb w23, [x28, #714]",
        "rmif x22, #11, #nzcV",
        "ubfx w20, w22, #12, #1",
        "strb w20, [x28, #716]",
        "ubfx w20, w22, #14, #1",
        "strb w20, [x28, #718]",
        "ubfx w20, w22, #16, #1",
        "strb w20, [x28, #720]",
        "ubfx w20, w22, #17, #1",
        "strb w20, [x28, #721]",
        "ubfx w20, w22, #18, #1",
        "strb w20, [x28, #722]",
        "ubfx w20, w22, #19, #1",
        "strb w20, [x28, #723]",
        "ubfx w20, w22, #20, #1",
        "strb w20, [x28, #724]",
        "ubfx w20, w22, #21, #1",
        "strb w20, [x28, #725]"
      ]
    },
    "sahf": {
      "ExpectedInstructionCount": 12,
      "Comment": "0x9e",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ubfx w21, w20, #8, #8",
        "mov w20, #0x28",
        "bic x22, x21, x20",
        "orr x20, x22, #0x2",
        "rmif x20, #63, #nzCv",
        "ubfx w21, w20, #2, #1",
        "eor w22, w21, #0x1",
        "mov x26, x22",
        "mov x27, x20",
        "rmif x20, #4, #nZcv",
        "rmif x20, #4, #Nzcv"
      ]
    },
    "lahf": {
      "ExpectedInstructionCount": 19,
      "Comment": "0x9f",
      "ExpectedArm64ASM": [
        "cset w20, hs",
        "mov x21, x27",
        "mov x22, x26",
        "eor w23, w21, w22",
        "ubfx w21, w23, #4, #1",
        "orr x23, x20, x21, lsl #4",
        "eor w20, w22, w22, lsr #4",
        "eor w21, w20, w20, lsr #2",
        "eor w20, w21, w21, lsr #1",
        "orr x21, x20, #0xfffffffffffffffe",
        "orn x20, x23, x21, ror #62",
        "mrs x21, nzcv",
        "and x22, x21, #0xc0000000",
        "orr x21, x20, x22, lsr #24",
        "orr x20, x21, #0x2",
        "mov x21, x4",
        "mov x22, x21",
        "bfi x22, x20, #8, #8",
        "mov x4, x22"
      ]
    },
    "cmpsb": {
      "ExpectedInstructionCount": 16,
      "Comment": [
        "0xa6"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x10",
        "mov x21, x11",
        "ldrb w22, [x21]",
        "ldrb w23, [x20]",
        "ldrsb x24, [x28, #714]",
        "add x25, x21, x24",
        "mov x11, x25",
        "add x21, x20, x24",
        "mov x10, x21",
        "eor w20, w23, w22",
        "mov x27, x20",
        "lsl w0, w23, #24",
        "cmp w0, w22, lsl #24",
        "sub w20, w23, w22",
        "mov x26, x20",
        "cfinv"
      ]
    },
    "cmpsw": {
      "ExpectedInstructionCount": 17,
      "Comment": [
        "0xa7"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x10",
        "mov x21, x11",
        "ldrh w22, [x21]",
        "ldrh w23, [x20]",
        "ldrsb x24, [x28, #714]",
        "lsl x25, x24, #1",
        "add x24, x21, x25",
        "mov x11, x24",
        "add x21, x20, x25",
        "mov x10, x21",
        "eor w20, w23, w22",
        "mov x27, x20",
        "lsl w0, w23, #16",
        "cmp w0, w22, lsl #16",
        "sub w20, w23, w22",
        "mov x26, x20",
        "cfinv"
      ]
    },
    "cmpsd": {
      "ExpectedInstructionCount": 15,
      "Comment": [
        "0xa7"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x10",
        "mov x21, x11",
        "ldr w22, [x21]",
        "ldr w23, [x20]",
        "ldrsb x24, [x28, #714]",
        "lsl x25, x24, #2",
        "add x24, x21, x25",
        "mov x11, x24",
        "add x21, x20, x25",
        "mov x10, x21",
        "eor w20, w23, w22",
        "mov x27, x20",
        "subs w20, w23, w22",
        "mov x26, x20",
        "cfinv"
      ]
    },
    "cmpsq": {
      "ExpectedInstructionCount": 15,
      "Comment": [
        "0xa7"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x10",
        "mov x21, x11",
        "ldr x22, [x21]",
        "ldr x23, [x20]",
        "ldrsb x24, [x28, #714]",
        "lsl x25, x24, #3",
        "add x24, x21, x25",
        "mov x11, x24",
        "add x21, x20, x25",
        "mov x10, x21",
        "eor w20, w23, w22",
        "mov x27, x20",
        "subs x20, x23, x22",
        "mov x26, x20",
        "cfinv"
      ]
    },
    "repz cmpsb": {
      "ExpectedInstructionCount": 46,
      "Comment": "0xa6",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "cbz x20, #+0xb4",
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x44",
        "mov x20, x10",
        "mov x21, x11",
        "ldrb w22, [x21]",
        "ldrb w23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "add x24, x21, #0x1 (1)",
        "mov x11, x24",
        "add x21, x20, #0x1 (1)",
        "mov x10, x21",
        "ccmp x23, x22, #nzcv, ne",
        "b.eq #-0x38",
        "b #+0x40",
        "mov x20, x10",
        "mov x21, x11",
        "ldrb w22, [x21]",
        "ldrb w23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "sub x24, x21, #0x1 (1)",
        "mov x11, x24",
        "sub x21, x20, #0x1 (1)",
        "mov x10, x21",
        "ccmp x23, x22, #nzcv, ne",
        "b.eq #-0x38",
        "mov x20, x26",
        "mov x21, x27",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #24",
        "cmp w0, w20, lsl #24",
        "sub w22, w21, w20",
        "mov x26, x22",
        "cfinv"
      ]
    },
    "repz cmpsw": {
      "ExpectedInstructionCount": 46,
      "Comment": "0xa7",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "cbz x20, #+0xb4",
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x44",
        "mov x20, x10",
        "mov x21, x11",
        "ldrh w22, [x21]",
        "ldrh w23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "add x24, x21, #0x2 (2)",
        "mov x11, x24",
        "add x21, x20, #0x2 (2)",
        "mov x10, x21",
        "ccmp x23, x22, #nzcv, ne",
        "b.eq #-0x38",
        "b #+0x40",
        "mov x20, x10",
        "mov x21, x11",
        "ldrh w22, [x21]",
        "ldrh w23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "sub x24, x21, #0x2 (2)",
        "mov x11, x24",
        "sub x21, x20, #0x2 (2)",
        "mov x10, x21",
        "ccmp x23, x22, #nzcv, ne",
        "b.eq #-0x38",
        "mov x20, x26",
        "mov x21, x27",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #16",
        "cmp w0, w20, lsl #16",
        "sub w22, w21, w20",
        "mov x26, x22",
        "cfinv"
      ]
    },
    "repz cmpsd": {
      "ExpectedInstructionCount": 44,
      "Comment": "0xa7",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "cbz x20, #+0xac",
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x44",
        "mov x20, x10",
        "mov x21, x11",
        "ldr w22, [x21]",
        "ldr w23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "add x24, x21, #0x4 (4)",
        "mov x11, x24",
        "add x21, x20, #0x4 (4)",
        "mov x10, x21",
        "ccmp x23, x22, #nzcv, ne",
        "b.eq #-0x38",
        "b #+0x40",
        "mov x20, x10",
        "mov x21, x11",
        "ldr w22, [x21]",
        "ldr w23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "sub x24, x21, #0x4 (4)",
        "mov x11, x24",
        "sub x21, x20, #0x4 (4)",
        "mov x10, x21",
        "ccmp x23, x22, #nzcv, ne",
        "b.eq #-0x38",
        "mov x20, x26",
        "mov x21, x27",
        "eor w22, w21, w20",
        "mov x27, x22",
        "subs w22, w21, w20",
        "mov x26, x22",
        "cfinv"
      ]
    },
    "repz cmpsq": {
      "ExpectedInstructionCount": 44,
      "Comment": "0xa7",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "cbz x20, #+0xac",
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x44",
        "mov x20, x10",
        "mov x21, x11",
        "ldr x22, [x21]",
        "ldr x23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "add x24, x21, #0x8 (8)",
        "mov x11, x24",
        "add x21, x20, #0x8 (8)",
        "mov x10, x21",
        "ccmp x23, x22, #nzcv, ne",
        "b.eq #-0x38",
        "b #+0x40",
        "mov x20, x10",
        "mov x21, x11",
        "ldr x22, [x21]",
        "ldr x23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "sub x24, x21, #0x8 (8)",
        "mov x11, x24",
        "sub x21, x20, #0x8 (8)",
        "mov x10, x21",
        "ccmp x23, x22, #nzcv, ne",
        "b.eq #-0x38",
        "mov x20, x26",
        "mov x21, x27",
        "eor w22, w21, w20",
        "mov x27, x22",
        "subs x22, x21, x20",
        "mov x26, x22",
        "cfinv"
      ]
    },
    "repnz cmpsb": {
      "ExpectedInstructionCount": 46,
      "Comment": "0xa6",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "cbz x20, #+0xb4",
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x44",
        "mov x20, x10",
        "mov x21, x11",
        "ldrb w22, [x21]",
        "ldrb w23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "add x24, x21, #0x1 (1)",
        "mov x11, x24",
        "add x21, x20, #0x1 (1)",
        "mov x10, x21",
        "ccmp x23, x22, #nZcv, ne",
        "b.ne #-0x38",
        "b #+0x40",
        "mov x20, x10",
        "mov x21, x11",
        "ldrb w22, [x21]",
        "ldrb w23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "sub x24, x21, #0x1 (1)",
        "mov x11, x24",
        "sub x21, x20, #0x1 (1)",
        "mov x10, x21",
        "ccmp x23, x22, #nZcv, ne",
        "b.ne #-0x38",
        "mov x20, x26",
        "mov x21, x27",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #24",
        "cmp w0, w20, lsl #24",
        "sub w22, w21, w20",
        "mov x26, x22",
        "cfinv"
      ]
    },
    "repnz cmpsw": {
      "ExpectedInstructionCount": 46,
      "Comment": "0xa7",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "cbz x20, #+0xb4",
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x44",
        "mov x20, x10",
        "mov x21, x11",
        "ldrh w22, [x21]",
        "ldrh w23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "add x24, x21, #0x2 (2)",
        "mov x11, x24",
        "add x21, x20, #0x2 (2)",
        "mov x10, x21",
        "ccmp x23, x22, #nZcv, ne",
        "b.ne #-0x38",
        "b #+0x40",
        "mov x20, x10",
        "mov x21, x11",
        "ldrh w22, [x21]",
        "ldrh w23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "sub x24, x21, #0x2 (2)",
        "mov x11, x24",
        "sub x21, x20, #0x2 (2)",
        "mov x10, x21",
        "ccmp x23, x22, #nZcv, ne",
        "b.ne #-0x38",
        "mov x20, x26",
        "mov x21, x27",
        "eor w22, w21, w20",
        "mov x27, x22",
        "lsl w0, w21, #16",
        "cmp w0, w20, lsl #16",
        "sub w22, w21, w20",
        "mov x26, x22",
        "cfinv"
      ]
    },
    "repnz cmpsd": {
      "ExpectedInstructionCount": 44,
      "Comment": "0xa7",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "cbz x20, #+0xac",
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x44",
        "mov x20, x10",
        "mov x21, x11",
        "ldr w22, [x21]",
        "ldr w23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "add x24, x21, #0x4 (4)",
        "mov x11, x24",
        "add x21, x20, #0x4 (4)",
        "mov x10, x21",
        "ccmp x23, x22, #nZcv, ne",
        "b.ne #-0x38",
        "b #+0x40",
        "mov x20, x10",
        "mov x21, x11",
        "ldr w22, [x21]",
        "ldr w23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "sub x24, x21, #0x4 (4)",
        "mov x11, x24",
        "sub x21, x20, #0x4 (4)",
        "mov x10, x21",
        "ccmp x23, x22, #nZcv, ne",
        "b.ne #-0x38",
        "mov x20, x26",
        "mov x21, x27",
        "eor w22, w21, w20",
        "mov x27, x22",
        "subs w22, w21, w20",
        "mov x26, x22",
        "cfinv"
      ]
    },
    "repnz cmpsq": {
      "ExpectedInstructionCount": 44,
      "Comment": "0xa7",
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "cbz x20, #+0xac",
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x44",
        "mov x20, x10",
        "mov x21, x11",
        "ldr x22, [x21]",
        "ldr x23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "add x24, x21, #0x8 (8)",
        "mov x11, x24",
        "add x21, x20, #0x8 (8)",
        "mov x10, x21",
        "ccmp x23, x22, #nZcv, ne",
        "b.ne #-0x38",
        "b #+0x40",
        "mov x20, x10",
        "mov x21, x11",
        "ldr x22, [x21]",
        "ldr x23, [x20]",
        "mov x26, x22",
        "mov x27, x23",
        "mov x24, x5",
        "subs x25, x24, #0x1 (1)",
        "mov x5, x25",
        "sub x24, x21, #0x8 (8)",
        "mov x11, x24",
        "sub x21, x20, #0x8 (8)",
        "mov x10, x21",
        "ccmp x23, x22, #nZcv, ne",
        "b.ne #-0x38",
        "mov x20, x26",
        "mov x21, x27",
        "eor w22, w21, w20",
        "mov x27, x22",
        "subs x22, x21, x20",
        "mov x26, x22",
        "cfinv"
      ]
    },
    "test al, 1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0xa8",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "and w21, w20, #0x1",
        "cmn wzr, w21, lsl #24",
        "mov x26, x21"
      ]
    },
    "test ax, 1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0xa9",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "and w21, w20, #0x1",
        "cmn wzr, w21, lsl #16",
        "mov x26, x21"
      ]
    },
    "test eax, 1": {
      "ExpectedInstructionCount": 3,
      "Comment": "0xa9",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ands w21, w20, #0x1",
        "mov x26, x21"
      ]
    },
    "test rax, 1": {
      "ExpectedInstructionCount": 3,
      "Comment": "0xa9",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ands x21, x20, #0x1",
        "mov x26, x21"
      ]
    },
    "test al, -1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0xa8",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x20",
        "cmn wzr, w21, lsl #24",
        "mov x26, x21"
      ]
    },
    "test ax, -1": {
      "ExpectedInstructionCount": 4,
      "Comment": "0xa9",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x21, x20",
        "cmn wzr, w21, lsl #16",
        "mov x26, x21"
      ]
    },
    "test eax, -1": {
      "ExpectedInstructionCount": 3,
      "Comment": "0xa9",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ands w21, w20, w20",
        "mov x26, x21"
      ]
    },
    "test rax, -1": {
      "ExpectedInstructionCount": 3,
      "Comment": "0xa9",
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "ands x21, x20, x20",
        "mov x26, x21"
      ]
    },
    "scasb": {
      "ExpectedInstructionCount": 13,
      "Comment": "0xae",
      "ExpectedArm64ASM": [
        "mov x20, x11",
        "mov x21, x4",
        "ldrb w22, [x20]",
        "ldrsb x23, [x28, #714]",
        "add x24, x20, x23",
        "mov x11, x24",
        "eor w20, w21, w22",
        "mov x27, x20",
        "lsl w0, w21, #24",
        "cmp w0, w22, lsl #24",
        "sub w20, w21, w22",
        "mov x26, x20",
        "cfinv"
      ]
    },
    "scasw": {
      "ExpectedInstructionCount": 13,
      "Comment": "0xaf",
      "ExpectedArm64ASM": [
        "mov x20, x11",
        "mov x21, x4",
        "ldrh w22, [x20]",
        "ldrsb x23, [x28, #714]",
        "add x24, x20, x23, lsl #1",
        "mov x11, x24",
        "eor w20, w21, w22",
        "mov x27, x20",
        "lsl w0, w21, #16",
        "cmp w0, w22, lsl #16",
        "sub w20, w21, w22",
        "mov x26, x20",
        "cfinv"
      ]
    },
    "scasd": {
      "ExpectedInstructionCount": 11,
      "Comment": "0xaf",
      "ExpectedArm64ASM": [
        "mov x20, x11",
        "mov x21, x4",
        "ldr w22, [x20]",
        "ldrsb x23, [x28, #714]",
        "add x24, x20, x23, lsl #2",
        "mov x11, x24",
        "eor w20, w21, w22",
        "mov x27, x20",
        "subs w20, w21, w22",
        "mov x26, x20",
        "cfinv"
      ]
    },
    "scasq": {
      "ExpectedInstructionCount": 11,
      "Comment": "0xaf",
      "ExpectedArm64ASM": [
        "mov x20, x11",
        "mov x21, x4",
        "ldr x22, [x20]",
        "ldrsb x23, [x28, #714]",
        "add x24, x20, x23, lsl #3",
        "mov x11, x24",
        "eor w20, w21, w22",
        "mov x27, x20",
        "subs x20, x21, x22",
        "mov x26, x20",
        "cfinv"
      ]
    },
    "repz scasb": {
      "ExpectedInstructionCount": 41,
      "Comment": "0xae",
      "ExpectedArm64ASM": [
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x50",
        "mov x20, x5",
        "cbz x20, #+0x44",
        "mov x20, x11",
        "mov x21, x4",
        "ldrb w22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "lsl w0, w21, #24",
        "cmp w0, w22, lsl #24",
        "sub w23, w21, w22",
        "mov x26, x23",
        "cfinv",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "add x21, x20, #0x1 (1)",
        "mov x11, x21",
        "b.eq #-0x44",
        "b #+0x4c",
        "mov x20, x5",
        "cbz x20, #+0x44",
        "mov x20, x11",
        "mov x21, x4",
        "ldrb w22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "lsl w0, w21, #24",
        "cmp w0, w22, lsl #24",
        "sub w23, w21, w22",
        "mov x26, x23",
        "cfinv",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "sub x21, x20, #0x1 (1)",
        "mov x11, x21",
        "b.eq #-0x44"
      ]
    },
    "repz scasw": {
      "ExpectedInstructionCount": 41,
      "Comment": "0xaf",
      "ExpectedArm64ASM": [
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x50",
        "mov x20, x5",
        "cbz x20, #+0x44",
        "mov x20, x11",
        "mov x21, x4",
        "ldrh w22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "lsl w0, w21, #16",
        "cmp w0, w22, lsl #16",
        "sub w23, w21, w22",
        "mov x26, x23",
        "cfinv",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "add x21, x20, #0x2 (2)",
        "mov x11, x21",
        "b.eq #-0x44",
        "b #+0x4c",
        "mov x20, x5",
        "cbz x20, #+0x44",
        "mov x20, x11",
        "mov x21, x4",
        "ldrh w22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "lsl w0, w21, #16",
        "cmp w0, w22, lsl #16",
        "sub w23, w21, w22",
        "mov x26, x23",
        "cfinv",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "sub x21, x20, #0x2 (2)",
        "mov x11, x21",
        "b.eq #-0x44"
      ]
    },
    "repz scasd": {
      "ExpectedInstructionCount": 37,
      "Comment": "0xaf",
      "ExpectedArm64ASM": [
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x48",
        "mov x20, x5",
        "cbz x20, #+0x3c",
        "mov x20, x11",
        "mov x21, x4",
        "ldr w22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "subs w23, w21, w22",
        "mov x26, x23",
        "cfinv",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "add x21, x20, #0x4 (4)",
        "mov x11, x21",
        "b.eq #-0x3c",
        "b #+0x44",
        "mov x20, x5",
        "cbz x20, #+0x3c",
        "mov x20, x11",
        "mov x21, x4",
        "ldr w22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "subs w23, w21, w22",
        "mov x26, x23",
        "cfinv",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "sub x21, x20, #0x4 (4)",
        "mov x11, x21",
        "b.eq #-0x3c"
      ]
    },
    "repz scasq": {
      "ExpectedInstructionCount": 37,
      "Comment": "0xaf",
      "ExpectedArm64ASM": [
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x48",
        "mov x20, x5",
        "cbz x20, #+0x3c",
        "mov x20, x11",
        "mov x21, x4",
        "ldr x22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "subs x23, x21, x22",
        "mov x26, x23",
        "cfinv",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "add x21, x20, #0x8 (8)",
        "mov x11, x21",
        "b.eq #-0x3c",
        "b #+0x44",
        "mov x20, x5",
        "cbz x20, #+0x3c",
        "mov x20, x11",
        "mov x21, x4",
        "ldr x22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "subs x23, x21, x22",
        "mov x26, x23",
        "cfinv",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "sub x21, x20, #0x8 (8)",
        "mov x11, x21",
        "b.eq #-0x3c"
      ]
    },
    "repnz scasb": {
      "ExpectedInstructionCount": 41,
      "Comment": "0xae",
      "ExpectedArm64ASM": [
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x50",
        "mov x20, x5",
        "cbz x20, #+0x44",
        "mov x20, x11",
        "mov x21, x4",
        "ldrb w22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "lsl w0, w21, #24",
        "cmp w0, w22, lsl #24",
        "sub w23, w21, w22",
        "mov x26, x23",
        "cfinv",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "add x21, x20, #0x1 (1)",
        "mov x11, x21",
        "b.ne #-0x44",
        "b #+0x4c",
        "mov x20, x5",
        "cbz x20, #+0x44",
        "mov x20, x11",
        "mov x21, x4",
        "ldrb w22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "lsl w0, w21, #24",
        "cmp w0, w22, lsl #24",
        "sub w23, w21, w22",
        "mov x26, x23",
        "cfinv",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "sub x21, x20, #0x1 (1)",
        "mov x11, x21",
        "b.ne #-0x44"
      ]
    },
    "repnz scasw": {
      "ExpectedInstructionCount": 41,
      "Comment": "0xaf",
      "ExpectedArm64ASM": [
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x50",
        "mov x20, x5",
        "cbz x20, #+0x44",
        "mov x20, x11",
        "mov x21, x4",
        "ldrh w22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "lsl w0, w21, #16",
        "cmp w0, w22, lsl #16",
        "sub w23, w21, w22",
        "mov x26, x23",
        "cfinv",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "add x21, x20, #0x2 (2)",
        "mov x11, x21",
        "b.ne #-0x44",
        "b #+0x4c",
        "mov x20, x5",
        "cbz x20, #+0x44",
        "mov x20, x11",
        "mov x21, x4",
        "ldrh w22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "lsl w0, w21, #16",
        "cmp w0, w22, lsl #16",
        "sub w23, w21, w22",
        "mov x26, x23",
        "cfinv",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "sub x21, x20, #0x2 (2)",
        "mov x11, x21",
        "b.ne #-0x44"
      ]
    },
    "repnz scasd": {
      "ExpectedInstructionCount": 37,
      "Comment": "0xaf",
      "ExpectedArm64ASM": [
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x48",
        "mov x20, x5",
        "cbz x20, #+0x3c",
        "mov x20, x11",
        "mov x21, x4",
        "ldr w22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "subs w23, w21, w22",
        "mov x26, x23",
        "cfinv",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "add x21, x20, #0x4 (4)",
        "mov x11, x21",
        "b.ne #-0x3c",
        "b #+0x44",
        "mov x20, x5",
        "cbz x20, #+0x3c",
        "mov x20, x11",
        "mov x21, x4",
        "ldr w22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "subs w23, w21, w22",
        "mov x26, x23",
        "cfinv",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "sub x21, x20, #0x4 (4)",
        "mov x11, x21",
        "b.ne #-0x3c"
      ]
    },
    "repnz scasq": {
      "ExpectedInstructionCount": 37,
      "Comment": "0xaf",
      "ExpectedArm64ASM": [
        "ldrsb x20, [x28, #714]",
        "lsr x21, x20, #63",
        "cbz x21, #+0x8",
        "b #+0x48",
        "mov x20, x5",
        "cbz x20, #+0x3c",
        "mov x20, x11",
        "mov x21, x4",
        "ldr x22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "subs x23, x21, x22",
        "mov x26, x23",
        "cfinv",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "add x21, x20, #0x8 (8)",
        "mov x11, x21",
        "b.ne #-0x3c",
        "b #+0x44",
        "mov x20, x5",
        "cbz x20, #+0x3c",
        "mov x20, x11",
        "mov x21, x4",
        "ldr x22, [x20]",
        "eor w23, w21, w22",
        "mov x27, x23",
        "subs x23, x21, x22",
        "mov x26, x23",
        "cfinv",
        "mov x21, x5",
        "sub x22, x21, #0x1 (1)",
        "mov x5, x22",
        "sub x21, x20, #0x8 (8)",
        "mov x11, x21",
        "b.ne #-0x3c"
      ]
    },
    "cmc": {
      "ExpectedInstructionCount": 1,
      "Comment": "0xf5",
      "ExpectedArm64ASM": [
        "cfinv"
      ]
    },
    "clc": {
      "ExpectedInstructionCount": 1,
      "Comment": "0xf8",
      "ExpectedArm64ASM": [
        "rmif xzr, #63, #nzCv"
      ]
    },
    "stc": {
      "ExpectedInstructionCount": 2,
      "Comment": "0xf9",
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "rmif x20, #63, #nzCv"
      ]
    }
  }
}
