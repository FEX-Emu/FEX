{
  "Features": {
    "Bitness": 64,
    "EnabledHostFeatures": [
      "FLAGM",
      "FLAGM2"
    ],
    "DisabledHostFeatures": [
      "SVE128",
      "SVE256",
      "AFP"
    ]
  },
  "Instructions": {
    "The Witcher 3": {
      "ExpectedInstructionCount": 9,
      "x86Insts": [
        "mov eax, 0x1",
        "lock xadd qword [rcx], rax",
        "mov rdx, rax",
        "and edx, 0x1f",
        "inc rdx",
        "shl rdx, 0x6",
        "add rdx, rcx"
      ],
      "ExpectedArm64ASM": [
        "mov w4, #0x1",
        "ldaddal x4, x4, [x5]",
        "mov x6, x4",
        "and w6, w4, #0x1f",
        "add x6, x6, #0x1 (1)",
        "lsl x6, x6, #6",
        "eor w27, w6, w5",
        "adds x26, x6, x5",
        "mov x6, x26"
      ]
    },
    "FMOD scalar loop": {
      "ExpectedInstructionCount": 88,
      "x86Insts": [
        "mov     esi, ecx",
        "mov     rdx, rbp",
        "mov     rax, rbx",
        "movss   xmm2, dword [rdx]",
        "add     rax, 0x20",
        "mulss   xmm2, xmm0",
        "add     rdx, 0x20",
        "addss   xmm2, dword [rax-0x20]",
        "movss   dword [rax-0x20], xmm2",
        "movss   xmm2, dword [rdx-0x1c]",
        "mulss   xmm2, xmm1",
        "addss   xmm2, dword [rax-0x1c]",
        "movss   dword [rax-0x1c], xmm2",
        "movss   xmm2, dword [rdx-0x18]",
        "mulss   xmm2, xmm0",
        "addss   xmm2, dword [rax-0x18]",
        "movss   dword [rax-0x18], xmm2",
        "movss   xmm2, dword [rdx-0x14]",
        "mulss   xmm2, xmm1",
        "addss   xmm2, dword [rax-0x14]",
        "movss   dword [rax-0x14], xmm2",
        "movss   xmm2, dword [rdx-0x10]",
        "mulss   xmm2, xmm0",
        "addss   xmm2, dword [rax-0x10]",
        "movss   dword [rax-0x10], xmm2",
        "movss   xmm2, dword [rdx-0xc]",
        "mulss   xmm2, xmm1",
        "addss   xmm2, dword [rax-0xc]",
        "movss   dword [rax-0xc], xmm2",
        "movss   xmm2, dword [rdx-0x8]",
        "mulss   xmm2, xmm0",
        "addss   xmm2, dword [rax-0x8]",
        "movss   dword [rax-0x8], xmm2",
        "movss   xmm2, dword [rdx-0x4]",
        "mulss   xmm2, xmm1",
        "addss   xmm2, dword [rax-0x4]",
        "movss   dword [rax-0x4], xmm2",
        "sub     esi, 0x1"
      ],
      "ExpectedArm64ASM": [
        "mov w10, w5",
        "mov x6, x9",
        "mov x4, x7",
        "ldr s18, [x6]",
        "add x4, x4, #0x20 (32)",
        "fmul s0, s18, s16",
        "mov v18.s[0], v0.s[0]",
        "add x6, x6, #0x20 (32)",
        "sub x20, x4, #0x20 (32)",
        "ldr s2, [x20]",
        "fadd s0, s18, s2",
        "mov v18.s[0], v0.s[0]",
        "sub x20, x4, #0x20 (32)",
        "str s18, [x20]",
        "sub x20, x6, #0x1c (28)",
        "ldr s18, [x20]",
        "fmul s0, s18, s17",
        "mov v18.s[0], v0.s[0]",
        "sub x20, x4, #0x1c (28)",
        "ldr s2, [x20]",
        "fadd s0, s18, s2",
        "mov v18.s[0], v0.s[0]",
        "sub x20, x4, #0x1c (28)",
        "str s18, [x20]",
        "sub x20, x6, #0x18 (24)",
        "ldr s18, [x20]",
        "fmul s0, s18, s16",
        "mov v18.s[0], v0.s[0]",
        "sub x20, x4, #0x18 (24)",
        "ldr s2, [x20]",
        "fadd s0, s18, s2",
        "mov v18.s[0], v0.s[0]",
        "sub x20, x4, #0x18 (24)",
        "str s18, [x20]",
        "sub x20, x6, #0x14 (20)",
        "ldr s18, [x20]",
        "fmul s0, s18, s17",
        "mov v18.s[0], v0.s[0]",
        "sub x20, x4, #0x14 (20)",
        "ldr s2, [x20]",
        "fadd s0, s18, s2",
        "mov v18.s[0], v0.s[0]",
        "sub x20, x4, #0x14 (20)",
        "str s18, [x20]",
        "sub x20, x6, #0x10 (16)",
        "ldr s18, [x20]",
        "fmul s0, s18, s16",
        "mov v18.s[0], v0.s[0]",
        "sub x20, x4, #0x10 (16)",
        "ldr s2, [x20]",
        "fadd s0, s18, s2",
        "mov v18.s[0], v0.s[0]",
        "sub x20, x4, #0x10 (16)",
        "str s18, [x20]",
        "sub x20, x6, #0xc (12)",
        "ldr s18, [x20]",
        "fmul s0, s18, s17",
        "mov v18.s[0], v0.s[0]",
        "sub x20, x4, #0xc (12)",
        "ldr s2, [x20]",
        "fadd s0, s18, s2",
        "mov v18.s[0], v0.s[0]",
        "sub x20, x4, #0xc (12)",
        "str s18, [x20]",
        "sub x20, x6, #0x8 (8)",
        "ldr s18, [x20]",
        "fmul s0, s18, s16",
        "mov v18.s[0], v0.s[0]",
        "sub x20, x4, #0x8 (8)",
        "ldr s2, [x20]",
        "fadd s0, s18, s2",
        "mov v18.s[0], v0.s[0]",
        "sub x20, x4, #0x8 (8)",
        "str s18, [x20]",
        "sub x20, x6, #0x4 (4)",
        "ldr s18, [x20]",
        "fmul s0, s18, s17",
        "mov v18.s[0], v0.s[0]",
        "sub x20, x4, #0x4 (4)",
        "ldr s2, [x20]",
        "fadd s0, s18, s2",
        "mov v18.s[0], v0.s[0]",
        "sub x20, x4, #0x4 (4)",
        "str s18, [x20]",
        "mov x27, x10",
        "subs w26, w10, #0x1 (1)",
        "cfinv",
        "mov x10, x26"
      ]
    },
    "Scalar vector add loop": {
      "ExpectedInstructionCount": 7,
      "Comment": [
        "Saw this in bytemark"
      ],
      "x86Insts": [
        "movdqu  xmm0, [r12+rax]",
        "paddq   xmm0, xmm1",
        "movups  [r12+rax], xmm0",
        "add     rax, 0x10",
        "cmp     rsi, rax"
      ],
      "ExpectedArm64ASM": [
        "ldr q16, [x16, x4, sxtx]",
        "add v16.2d, v16.2d, v17.2d",
        "str q16, [x16, x4, sxtx]",
        "add x4, x4, #0x10 (16)",
        "eor w27, w10, w4",
        "subs x26, x10, x4",
        "cfinv"
      ]
    },
    "bytemark data xor loop": {
      "ExpectedInstructionCount": 16,
      "Comment": [
        "Saw this in bytemark"
      ],
      "x86Insts": [
        "mov     rdx, rax",
        "mov     rcx, rax",
        "mov     r14, rsi",
        "add     rax, 0x1",
        "shr     rdx, 0x6",
        "and     ecx, 0x3f",
        "shl     r14, cl",
        "xor     qword [rbx+rdx*8], r14",
        "cmp     rdi, rax"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x6, x20",
        "mov x5, x20",
        "mov x19, x10",
        "add x4, x20, #0x1 (1)",
        "lsr x6, x20, #6",
        "and w5, w20, #0x3f",
        "lsl x19, x19, x5",
        "add x20, x7, x6, lsl #3",
        "ldr x20, [x20]",
        "eor x20, x20, x19",
        "add x21, x7, x6, lsl #3",
        "str x20, [x21]",
        "eor w27, w11, w4",
        "subs x26, x11, x4",
        "cfinv"
      ]
    },
    "bytemark num sort": {
      "ExpectedInstructionCount": 9,
      "Comment": [
        "Saw this in bytemark"
      ],
      "x86Insts": [
        "mov    r13, qword [rsi+r9*8]",
        "mov    r11, r9",
        "or     r11, 0x1",
        "cmp    r13, qword [rsi+r11*8]"
      ],
      "ExpectedArm64ASM": [
        "add x20, x10, x13, lsl #3",
        "ldr x17, [x20]",
        "mov x15, x13",
        "orr x15, x13, #0x1",
        "add x20, x10, x15, lsl #3",
        "ldr x20, [x20]",
        "eor w27, w17, w20",
        "subs x26, x17, x20",
        "cfinv"
      ]
    },
    "bytemark nn": {
      "ExpectedInstructionCount": 179,
      "Comment": [
        "Saw this in bytemark"
      ],
      "x86Insts": [
        "movdqa xmm0,xmm1",
        "imul   rsi,rax,0xffffffff8646c299",
        "shr    rsi,0x20",
        "add    esi,eax",
        "psrad  xmm0,0x1f",
        "mov    edi,esi",
        "shr    edi,0x1f",
        "sar    esi,0x13",
        "pxor   xmm1,xmm0",
        "add    esi,edi",
        "imul   esi,esi,0xf408b",
        "sub    eax,esi",
        "psubd  xmm1,xmm0",
        "imul   esi,eax,0x3e322",
        "add    esi,edx",
        "movsxd rdx,esi",
        "punpckldq xmm1,xmm7",
        "imul   rsi,rdx,0xffffffff8646c299",
        "shr    rsi,0x20",
        "add    esi,edx",
        "por    xmm1,xmm10",
        "mov    edi,esi",
        "shr    edi,0x1f",
        "sar    esi,0x13",
        "subpd  xmm1,xmm10",
        "add    esi,edi",
        "imul   esi,esi,0xf408b",
        "sub    edx,esi",
        "divpd  xmm1,xmm11",
        "movd   xmm2,edx",
        "movd   xmm3,eax",
        "movdqa xmm0,xmm3",
        "punpckldq xmm0,xmm2",
        "pxor   xmm4,xmm4",
        "pcmpgtd xmm4,xmm0",
        "pshufd xmm2,xmm2,0x0",
        "pand   xmm4,xmm8",
        "pmuludq xmm2,xmm8",
        "pmuludq xmm3,xmm8",
        "pshufd xmm3,xmm3,0xed",
        "pshufd xmm2,xmm2,0xed",
        "punpckldq xmm3,xmm2",
        "psubd  xmm3,xmm4",
        "movdqa xmm2,xmm3",
        "psrld  xmm2,0x1f",
        "psrad  xmm3,0xd",
        "paddd  xmm3,xmm2",
        "pshufd xmm2,xmm3,0xf5",
        "addpd  xmm1,xmm12",
        "pmuludq xmm3,xmm9",
        "pshufd xmm3,xmm3,0xe8",
        "pmuludq xmm2,xmm9",
        "mulpd  xmm1,xmm13",
        "pshufd xmm2,xmm2,0xe8",
        "punpckldq xmm3,xmm2",
        "psubd  xmm0,xmm3",
        "movdqa xmm2,xmm0",
        "imul   eax,eax,0x8149a",
        "imul   esi,edx,0x3e322",
        "add    esi,eax",
        "psrad  xmm2,0x1f",
        "imul   edx,edx,0x8149a",
        "movsxd rax,esi",
        "imul   rsi,rax,0xffffffff8646c299",
        "pxor   xmm0,xmm2",
        "shr    rsi,0x20",
        "add    esi,eax",
        "mov    edi,esi",
        "psubd  xmm0,xmm2",
        "shr    edi,0x1f",
        "sar    esi,0x13",
        "add    esi,edi",
        "punpckldq xmm0,xmm7",
        "imul   esi,esi,0xf408b",
        "sub    eax,esi",
        "imul   esi,eax,0x3e322",
        "movapd oword [rcx+0x216ba0],xmm1",
        "add    esi,edx",
        "movsxd rdx,esi",
        "imul   rsi,rdx,0xffffffff8646c299",
        "por    xmm0,xmm10",
        "shr    rsi,0x20",
        "add    esi,edx",
        "mov    edi,esi",
        "subpd  xmm0,xmm10",
        "shr    edi,0x1f",
        "sar    esi,0x13",
        "add    esi,edi",
        "divpd  xmm0,xmm11",
        "imul   esi,esi,0xf408b",
        "sub    edx,esi",
        "movd   xmm2,eax",
        "movd   xmm3,edx",
        "movdqa xmm1,xmm2",
        "punpckldq xmm1,xmm3",
        "pxor   xmm4,xmm4",
        "pcmpgtd xmm4,xmm1",
        "pand   xmm4,xmm8",
        "pshufd xmm3,xmm3,0x0",
        "pmuludq xmm3,xmm8",
        "pshufd xmm3,xmm3,0xed",
        "pmuludq xmm2,xmm8",
        "pshufd xmm2,xmm2,0xed",
        "punpckldq xmm2,xmm3",
        "psubd  xmm2,xmm4",
        "movdqa xmm3,xmm2",
        "psrld  xmm3,0x1f",
        "psrad  xmm2,0xd",
        "paddd  xmm2,xmm3",
        "pshufd xmm3,xmm2,0xf5",
        "pmuludq xmm2,xmm9",
        "pshufd xmm2,xmm2,0xe8",
        "addpd  xmm0,xmm12",
        "pmuludq xmm3,xmm9",
        "imul   eax,eax,0x8149a",
        "imul   esi,edx,0x3e322",
        "pshufd xmm3,xmm3,0xe8",
        "add    esi,eax",
        "imul   eax,edx,0x8149a",
        "movsxd rdx,esi",
        "punpckldq xmm2,xmm3",
        "imul   rsi,rdx,0xffffffff8646c299",
        "shr    rsi,0x20",
        "add    esi,edx",
        "psubd  xmm1,xmm2",
        "mov    edi,esi",
        "shr    edi,0x1f",
        "sar    esi,0x13",
        "mulpd  xmm0,xmm13",
        "add    esi,edi",
        "imul   esi,esi,0xf408b"
      ],
      "ExpectedArm64ASM": [
        "mov v16.16b, v17.16b",
        "mov x20, #0xffffffffffffc299",
        "movk x20, #0x8646, lsl #16",
        "mul x10, x4, x20",
        "lsr x10, x10, #32",
        "add w10, w10, w4",
        "sshr v16.4s, v17.4s, #31",
        "mov w11, w10",
        "lsr w11, w11, #31",
        "mov w21, w10",
        "asr w10, w21, #19",
        "eor v17.16b, v17.16b, v16.16b",
        "add w10, w10, w11",
        "mov w21, #0x408b",
        "movk w21, #0xf, lsl #16",
        "mul w10, w10, w21",
        "sub w4, w4, w10",
        "sub v17.4s, v17.4s, v16.4s",
        "mov w22, #0xe322",
        "movk w22, #0x3, lsl #16",
        "mul w10, w4, w22",
        "add w10, w10, w6",
        "sxtw x6, w10",
        "zip1 v17.4s, v17.4s, v23.4s",
        "mul x10, x6, x20",
        "lsr x10, x10, #32",
        "add w10, w10, w6",
        "orr v17.16b, v17.16b, v26.16b",
        "mov w11, w10",
        "lsr w11, w11, #31",
        "mov w23, w10",
        "asr w10, w23, #19",
        "fsub v17.2d, v17.2d, v26.2d",
        "add w10, w10, w11",
        "mul w10, w10, w21",
        "sub w6, w6, w10",
        "fdiv v17.2d, v17.2d, v27.2d",
        "fmov s18, w6",
        "fmov s19, w4",
        "mov v16.16b, v19.16b",
        "zip1 v16.4s, v19.4s, v18.4s",
        "eor v20.16b, v20.16b, v20.16b",
        "cmgt v20.4s, v20.4s, v16.4s",
        "dup v18.4s, v18.s[0]",
        "and v20.16b, v20.16b, v24.16b",
        "uzp1 v2.4s, v18.4s, v18.4s",
        "uzp1 v3.4s, v24.4s, v24.4s",
        "umull v18.2d, v2.2s, v3.2s",
        "uzp1 v2.4s, v19.4s, v19.4s",
        "uzp1 v3.4s, v24.4s, v24.4s",
        "umull v19.2d, v2.2s, v3.2s",
        "ldr x0, [x28, #1760]",
        "ldr q2, [x0, #3792]",
        "tbl v19.16b, {v19.16b}, v2.16b",
        "tbl v18.16b, {v18.16b}, v2.16b",
        "zip1 v19.4s, v19.4s, v18.4s",
        "sub v19.4s, v19.4s, v20.4s",
        "mov v18.16b, v19.16b",
        "ushr v18.4s, v19.4s, #31",
        "sshr v19.4s, v19.4s, #13",
        "add v19.4s, v19.4s, v18.4s",
        "ldr x0, [x28, #1760]",
        "ldr q3, [x0, #3920]",
        "tbl v18.16b, {v19.16b}, v3.16b",
        "fadd v17.2d, v17.2d, v28.2d",
        "uzp1 v4.4s, v19.4s, v19.4s",
        "uzp1 v5.4s, v25.4s, v25.4s",
        "umull v19.2d, v4.2s, v5.2s",
        "ldr x0, [x28, #1760]",
        "ldr q4, [x0, #3712]",
        "tbl v19.16b, {v19.16b}, v4.16b",
        "uzp1 v5.4s, v18.4s, v18.4s",
        "uzp1 v6.4s, v25.4s, v25.4s",
        "umull v18.2d, v5.2s, v6.2s",
        "fmul v17.2d, v17.2d, v29.2d",
        "tbl v18.16b, {v18.16b}, v4.16b",
        "zip1 v19.4s, v19.4s, v18.4s",
        "sub v16.4s, v16.4s, v19.4s",
        "mov v18.16b, v16.16b",
        "mov w23, #0x149a",
        "movk w23, #0x8, lsl #16",
        "mul w4, w4, w23",
        "mul w10, w6, w22",
        "add w10, w10, w4",
        "sshr v18.4s, v16.4s, #31",
        "mul w6, w6, w23",
        "sxtw x4, w10",
        "mul x10, x4, x20",
        "eor v16.16b, v16.16b, v18.16b",
        "lsr x10, x10, #32",
        "add w10, w10, w4",
        "mov w11, w10",
        "sub v16.4s, v16.4s, v18.4s",
        "lsr w11, w11, #31",
        "mov w24, w10",
        "asr w10, w24, #19",
        "add w10, w10, w11",
        "zip1 v16.4s, v16.4s, v23.4s",
        "mul w10, w10, w21",
        "sub w4, w4, w10",
        "mul w10, w4, w22",
        "mov w22, #0x6ba0",
        "movk w22, #0x21, lsl #16",
        "str q17, [x5, x22, sxtx]",
        "add w10, w10, w6",
        "sxtw x6, w10",
        "mul x10, x6, x20",
        "orr v16.16b, v16.16b, v26.16b",
        "lsr x10, x10, #32",
        "add w10, w10, w6",
        "mov w11, w10",
        "fsub v16.2d, v16.2d, v26.2d",
        "lsr w11, w11, #31",
        "mov w20, w10",
        "asr w10, w20, #19",
        "add w10, w10, w11",
        "fdiv v16.2d, v16.2d, v27.2d",
        "mul w10, w10, w21",
        "sub w6, w6, w10",
        "fmov s18, w4",
        "fmov s19, w6",
        "mov v17.16b, v18.16b",
        "zip1 v17.4s, v18.4s, v19.4s",
        "eor v20.16b, v20.16b, v20.16b",
        "cmgt v20.4s, v20.4s, v17.4s",
        "and v20.16b, v20.16b, v24.16b",
        "dup v19.4s, v19.s[0]",
        "uzp1 v5.4s, v19.4s, v19.4s",
        "uzp1 v6.4s, v24.4s, v24.4s",
        "umull v19.2d, v5.2s, v6.2s",
        "tbl v19.16b, {v19.16b}, v2.16b",
        "uzp1 v5.4s, v18.4s, v18.4s",
        "uzp1 v6.4s, v24.4s, v24.4s",
        "umull v18.2d, v5.2s, v6.2s",
        "tbl v18.16b, {v18.16b}, v2.16b",
        "zip1 v18.4s, v18.4s, v19.4s",
        "sub v18.4s, v18.4s, v20.4s",
        "mov v19.16b, v18.16b",
        "ushr v19.4s, v18.4s, #31",
        "sshr v18.4s, v18.4s, #13",
        "add v18.4s, v18.4s, v19.4s",
        "tbl v19.16b, {v18.16b}, v3.16b",
        "uzp1 v2.4s, v18.4s, v18.4s",
        "uzp1 v3.4s, v25.4s, v25.4s",
        "umull v18.2d, v2.2s, v3.2s",
        "tbl v18.16b, {v18.16b}, v4.16b",
        "fadd v16.2d, v16.2d, v28.2d",
        "uzp1 v2.4s, v19.4s, v19.4s",
        "uzp1 v3.4s, v25.4s, v25.4s",
        "umull v19.2d, v2.2s, v3.2s",
        "mul w4, w4, w23",
        "mov w20, #0xe322",
        "movk w20, #0x3, lsl #16",
        "mul w10, w6, w20",
        "tbl v19.16b, {v19.16b}, v4.16b",
        "add w10, w10, w4",
        "mul w4, w6, w23",
        "sxtw x6, w10",
        "zip1 v18.4s, v18.4s, v19.4s",
        "mov x20, #0xffffffffffffc299",
        "movk x20, #0x8646, lsl #16",
        "mul x10, x6, x20",
        "lsr x10, x10, #32",
        "add w10, w10, w6",
        "sub v17.4s, v17.4s, v18.4s",
        "mov w11, w10",
        "lsr w11, w11, #31",
        "mov w20, w10",
        "asr w10, w20, #19",
        "fmul v16.2d, v16.2d, v29.2d",
        "add w10, w10, w11",
        "mov w20, #0x408b",
        "movk w20, #0xf, lsl #16",
        "smull x21, w10, w20",
        "asr x21, x21, #32",
        "mul w10, w10, w20",
        "sbfx x20, x10, #31, #1",
        "cmp x21, x20",
        "ccmn xzr, #0, #nzCV, eq"
      ]
    }
  }
}
