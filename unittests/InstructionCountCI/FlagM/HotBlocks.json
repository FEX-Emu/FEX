{
  "Features": {
    "Bitness": 64,
    "EnabledHostFeatures": [
      "FLAGM",
      "FLAGM2"
    ],
    "DisabledHostFeatures": [
      "SVE128",
      "SVE256",
      "AFP"
    ]
  },
  "Instructions": {
    "The Witcher 3": {
      "ExpectedInstructionCount": 8,
      "x86Insts": [
        "mov eax, 0x1",
        "lock xadd qword [rcx], rax",
        "mov rdx, rax",
        "and edx, 0x1f",
        "inc rdx",
        "shl rdx, 0x6",
        "add rdx, rcx"
      ],
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "ldaddal x20, x4, [x5]",
        "and w20, w4, #0x1f",
        "add x20, x20, #0x1 (1)",
        "lsl x20, x20, #6",
        "eor w27, w20, w5",
        "adds x26, x20, x5",
        "mov x6, x26"
      ]
    },
    "FMOD scalar loop": {
      "ExpectedInstructionCount": 63,
      "x86Insts": [
        "mov     esi, ecx",
        "mov     rdx, rbp",
        "mov     rax, rbx",
        "movss   xmm2, dword [rdx]",
        "add     rax, 0x20",
        "mulss   xmm2, xmm0",
        "add     rdx, 0x20",
        "addss   xmm2, dword [rax-0x20]",
        "movss   dword [rax-0x20], xmm2",
        "movss   xmm2, dword [rdx-0x1c]",
        "mulss   xmm2, xmm1",
        "addss   xmm2, dword [rax-0x1c]",
        "movss   dword [rax-0x1c], xmm2",
        "movss   xmm2, dword [rdx-0x18]",
        "mulss   xmm2, xmm0",
        "addss   xmm2, dword [rax-0x18]",
        "movss   dword [rax-0x18], xmm2",
        "movss   xmm2, dword [rdx-0x14]",
        "mulss   xmm2, xmm1",
        "addss   xmm2, dword [rax-0x14]",
        "movss   dword [rax-0x14], xmm2",
        "movss   xmm2, dword [rdx-0x10]",
        "mulss   xmm2, xmm0",
        "addss   xmm2, dword [rax-0x10]",
        "movss   dword [rax-0x10], xmm2",
        "movss   xmm2, dword [rdx-0xc]",
        "mulss   xmm2, xmm1",
        "addss   xmm2, dword [rax-0xc]",
        "movss   dword [rax-0xc], xmm2",
        "movss   xmm2, dword [rdx-0x8]",
        "mulss   xmm2, xmm0",
        "addss   xmm2, dword [rax-0x8]",
        "movss   dword [rax-0x8], xmm2",
        "movss   xmm2, dword [rdx-0x4]",
        "mulss   xmm2, xmm1",
        "addss   xmm2, dword [rax-0x4]",
        "movss   dword [rax-0x4], xmm2",
        "sub     esi, 0x1"
      ],
      "ExpectedArm64ASM": [
        "mov w27, w5",
        "ldr s2, [x9]",
        "add x4, x7, #0x20 (32)",
        "fmul s0, s2, s16",
        "mov v2.s[0], v0.s[0]",
        "add x6, x9, #0x20 (32)",
        "ldur s3, [x4, #-32]",
        "fadd s0, s2, s3",
        "mov v2.s[0], v0.s[0]",
        "stur s2, [x4, #-32]",
        "ldur s2, [x6, #-28]",
        "fmul s0, s2, s17",
        "mov v2.s[0], v0.s[0]",
        "ldur s3, [x4, #-28]",
        "fadd s0, s2, s3",
        "mov v2.s[0], v0.s[0]",
        "stur s2, [x4, #-28]",
        "ldur s2, [x6, #-24]",
        "fmul s0, s2, s16",
        "mov v2.s[0], v0.s[0]",
        "ldur s3, [x4, #-24]",
        "fadd s0, s2, s3",
        "mov v2.s[0], v0.s[0]",
        "stur s2, [x4, #-24]",
        "ldur s2, [x6, #-20]",
        "fmul s0, s2, s17",
        "mov v2.s[0], v0.s[0]",
        "ldur s3, [x4, #-20]",
        "fadd s0, s2, s3",
        "mov v2.s[0], v0.s[0]",
        "stur s2, [x4, #-20]",
        "ldur s2, [x6, #-16]",
        "fmul s0, s2, s16",
        "mov v2.s[0], v0.s[0]",
        "ldur s3, [x4, #-16]",
        "fadd s0, s2, s3",
        "mov v2.s[0], v0.s[0]",
        "stur s2, [x4, #-16]",
        "ldur s2, [x6, #-12]",
        "fmul s0, s2, s17",
        "mov v2.s[0], v0.s[0]",
        "ldur s3, [x4, #-12]",
        "fadd s0, s2, s3",
        "mov v2.s[0], v0.s[0]",
        "stur s2, [x4, #-12]",
        "ldur s2, [x6, #-8]",
        "fmul s0, s2, s16",
        "mov v2.s[0], v0.s[0]",
        "ldur s3, [x4, #-8]",
        "fadd s0, s2, s3",
        "mov v2.s[0], v0.s[0]",
        "stur s2, [x4, #-8]",
        "ldur s2, [x6, #-4]",
        "fmul s0, s2, s17",
        "mov v2.s[0], v0.s[0]",
        "ldur s3, [x4, #-4]",
        "mov v18.16b, v2.16b",
        "fadd s0, s2, s3",
        "mov v18.s[0], v0.s[0]",
        "stur s18, [x4, #-4]",
        "subs w26, w27, #0x1 (1)",
        "cfinv",
        "mov x10, x26"
      ]
    },
    "Scalar vector add loop": {
      "ExpectedInstructionCount": 7,
      "Comment": [
        "Saw this in bytemark"
      ],
      "x86Insts": [
        "movdqu  xmm0, [r12+rax]",
        "paddq   xmm0, xmm1",
        "movups  [r12+rax], xmm0",
        "add     rax, 0x10",
        "cmp     rsi, rax"
      ],
      "ExpectedArm64ASM": [
        "ldr q2, [x16, x4, sxtx]",
        "add v16.2d, v2.2d, v17.2d",
        "str q16, [x16, x4, sxtx]",
        "add x4, x4, #0x10 (16)",
        "eor w27, w10, w4",
        "subs x26, x10, x4",
        "cfinv"
      ]
    },
    "bytemark data xor loop": {
      "ExpectedInstructionCount": 11,
      "Comment": [
        "Saw this in bytemark"
      ],
      "x86Insts": [
        "mov     rdx, rax",
        "mov     rcx, rax",
        "mov     r14, rsi",
        "add     rax, 0x1",
        "shr     rdx, 0x6",
        "and     ecx, 0x3f",
        "shl     r14, cl",
        "xor     qword [rbx+rdx*8], r14",
        "cmp     rdi, rax"
      ],
      "ExpectedArm64ASM": [
        "add x20, x4, #0x1 (1)",
        "lsr x6, x4, #6",
        "and w5, w4, #0x3f",
        "lsl x19, x10, x5",
        "ldr x21, [x7, x6, sxtx #3]",
        "eor x21, x21, x19",
        "str x21, [x7, x6, sxtx #3]",
        "eor w27, w11, w20",
        "subs x26, x11, x20",
        "cfinv",
        "mov x4, x20"
      ]
    },
    "bytemark num sort": {
      "ExpectedInstructionCount": 6,
      "Comment": [
        "Saw this in bytemark"
      ],
      "x86Insts": [
        "mov    r13, qword [rsi+r9*8]",
        "mov    r11, r9",
        "or     r11, 0x1",
        "cmp    r13, qword [rsi+r11*8]"
      ],
      "ExpectedArm64ASM": [
        "ldr x17, [x10, x13, sxtx #3]",
        "orr x15, x13, #0x1",
        "ldr x20, [x10, x15, sxtx #3]",
        "eor w27, w17, w20",
        "subs x26, x17, x20",
        "cfinv"
      ]
    },
    "pcmpistri xmm0, xmm1, 0_0_00_11_01b": {
      "ExpectedInstructionCount": 40,
      "Comment": [
        "A Hat In Time spends at least 5% CPU time in this instruction",
        "Comes from vcruntime140.dll wcsstr"
      ],
      "ExpectedArm64ASM": [
        "mrs x0, nzcv",
        "str w0, [x28, #728]",
        "stp x4, x5, [x28, #8]",
        "stp x6, x7, [x28, #24]",
        "str x8, [x28, #40]",
        "stp x16, x17, [x28, #104]",
        "sub sp, sp, #0x70 (112)",
        "mov x0, sp",
        "st1 {v2.2d, v3.2d}, [x0], #32",
        "st1 {v4.2d, v5.2d, v6.2d, v7.2d}, [x0], #64",
        "str x30, [x0], #16",
        "mov x0, v16.d[0]",
        "mov x1, v16.d[1]",
        "mov x2, v17.d[0]",
        "mov x3, v17.d[1]",
        "mov w4, #0xd",
        "ldr x5, [x28, #1560]",
        "blr x5",
        "ldr w4, [x28, #728]",
        "msr nzcv, x4",
        "ldp x4, x5, [x28, #8]",
        "ldp x6, x7, [x28, #24]",
        "ldr x8, [x28, #40]",
        "ldp x16, x17, [x28, #104]",
        "ld1 {v2.2d, v3.2d}, [sp], #32",
        "ld1 {v4.2d, v5.2d, v6.2d, v7.2d}, [sp], #64",
        "ldr x30, [sp], #16",
        "mov w20, w0",
        "mov w27, #0x0",
        "uxth w21, w20",
        "mov w22, #0x8",
        "lsr w0, w21, #0",
        "cmp w0, #0x0 (0)",
        "rbit w0, w0",
        "clz w23, w0",
        "csinv w23, w23, wzr, ne",
        "cmp x21, #0x0 (0)",
        "csel x5, x22, x23, eq",
        "mov w26, #0x1",
        "msr nzcv, x20"
      ]
    }
  }
}
