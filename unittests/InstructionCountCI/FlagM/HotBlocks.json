{
  "Features": {
    "Bitness": 64,
    "EnabledHostFeatures": [
      "FLAGM",
      "FLAGM2"
    ],
    "DisabledHostFeatures": [
      "SVE128",
      "SVE256",
      "AFP"
    ]
  },
  "Instructions": {
    "The Witcher 3": {
      "ExpectedInstructionCount": 17,
      "x86Insts": [
        "mov eax, 0x1",
        "lock xadd qword [rcx], rax",
        "mov rdx, rax",
        "and edx, 0x1f",
        "inc rdx",
        "shl rdx, 0x6",
        "add rdx, rcx"
      ],
      "ExpectedArm64ASM": [
        "mov w20, #0x1",
        "mov x4, x20",
        "mov x21, x5",
        "ldaddal x20, x22, [x21]",
        "mov x4, x22",
        "mov x6, x22",
        "and w20, w22, #0x1f",
        "mov x6, x20",
        "add x22, x20, #0x1 (1)",
        "mov x6, x22",
        "lsl x20, x22, #6",
        "mov x6, x20",
        "eor w22, w20, w21",
        "mov x27, x22",
        "adds x22, x20, x21",
        "mov x26, x22",
        "mov x6, x22"
      ]
    },
    "FMOD scalar loop": {
      "ExpectedInstructionCount": 137,
      "x86Insts": [
        "mov     esi, ecx",
        "mov     rdx, rbp",
        "mov     rax, rbx",
        "movss   xmm2, dword [rdx]",
        "add     rax, 0x20",
        "mulss   xmm2, xmm0",
        "add     rdx, 0x20",
        "addss   xmm2, dword [rax-0x20]",
        "movss   dword [rax-0x20], xmm2",
        "movss   xmm2, dword [rdx-0x1c]",
        "mulss   xmm2, xmm1",
        "addss   xmm2, dword [rax-0x1c]",
        "movss   dword [rax-0x1c], xmm2",
        "movss   xmm2, dword [rdx-0x18]",
        "mulss   xmm2, xmm0",
        "addss   xmm2, dword [rax-0x18]",
        "movss   dword [rax-0x18], xmm2",
        "movss   xmm2, dword [rdx-0x14]",
        "mulss   xmm2, xmm1",
        "addss   xmm2, dword [rax-0x14]",
        "movss   dword [rax-0x14], xmm2",
        "movss   xmm2, dword [rdx-0x10]",
        "mulss   xmm2, xmm0",
        "addss   xmm2, dword [rax-0x10]",
        "movss   dword [rax-0x10], xmm2",
        "movss   xmm2, dword [rdx-0xc]",
        "mulss   xmm2, xmm1",
        "addss   xmm2, dword [rax-0xc]",
        "movss   dword [rax-0xc], xmm2",
        "movss   xmm2, dword [rdx-0x8]",
        "mulss   xmm2, xmm0",
        "addss   xmm2, dword [rax-0x8]",
        "movss   dword [rax-0x8], xmm2",
        "movss   xmm2, dword [rdx-0x4]",
        "mulss   xmm2, xmm1",
        "addss   xmm2, dword [rax-0x4]",
        "movss   dword [rax-0x4], xmm2",
        "sub     esi, 0x1"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x5",
        "mov w21, w20",
        "mov x10, x21",
        "mov x20, x9",
        "mov x6, x20",
        "mov x22, x7",
        "mov x4, x22",
        "ldr s2, [x20]",
        "mov v18.16b, v2.16b",
        "add x23, x22, #0x20 (32)",
        "mov x4, x23",
        "mov v3.16b, v16.16b",
        "mov v4.16b, v2.16b",
        "fmul s0, s2, s3",
        "mov v4.s[0], v0.s[0]",
        "mov v18.16b, v4.16b",
        "add x22, x20, #0x20 (32)",
        "mov x6, x22",
        "sub x20, x23, #0x20 (32)",
        "ldr s2, [x20]",
        "mov v5.16b, v4.16b",
        "fadd s0, s4, s2",
        "mov v5.s[0], v0.s[0]",
        "mov v18.16b, v5.16b",
        "sub x20, x23, #0x20 (32)",
        "str s5, [x20]",
        "sub x20, x22, #0x1c (28)",
        "ldr s2, [x20]",
        "mov v18.16b, v2.16b",
        "mov v4.16b, v17.16b",
        "mov v5.16b, v2.16b",
        "fmul s0, s2, s4",
        "mov v5.s[0], v0.s[0]",
        "mov v18.16b, v5.16b",
        "sub x20, x23, #0x1c (28)",
        "ldr s2, [x20]",
        "mov v6.16b, v5.16b",
        "fadd s0, s5, s2",
        "mov v6.s[0], v0.s[0]",
        "mov v18.16b, v6.16b",
        "sub x20, x23, #0x1c (28)",
        "str s6, [x20]",
        "sub x20, x22, #0x18 (24)",
        "ldr s2, [x20]",
        "mov v18.16b, v2.16b",
        "mov v5.16b, v2.16b",
        "fmul s0, s2, s3",
        "mov v5.s[0], v0.s[0]",
        "mov v18.16b, v5.16b",
        "sub x20, x23, #0x18 (24)",
        "ldr s2, [x20]",
        "mov v6.16b, v5.16b",
        "fadd s0, s5, s2",
        "mov v6.s[0], v0.s[0]",
        "mov v18.16b, v6.16b",
        "sub x20, x23, #0x18 (24)",
        "str s6, [x20]",
        "sub x20, x22, #0x14 (20)",
        "ldr s2, [x20]",
        "mov v18.16b, v2.16b",
        "mov v5.16b, v2.16b",
        "fmul s0, s2, s4",
        "mov v5.s[0], v0.s[0]",
        "mov v18.16b, v5.16b",
        "sub x20, x23, #0x14 (20)",
        "ldr s2, [x20]",
        "mov v6.16b, v5.16b",
        "fadd s0, s5, s2",
        "mov v6.s[0], v0.s[0]",
        "mov v18.16b, v6.16b",
        "sub x20, x23, #0x14 (20)",
        "str s6, [x20]",
        "sub x20, x22, #0x10 (16)",
        "ldr s2, [x20]",
        "mov v18.16b, v2.16b",
        "mov v5.16b, v2.16b",
        "fmul s0, s2, s3",
        "mov v5.s[0], v0.s[0]",
        "mov v18.16b, v5.16b",
        "sub x20, x23, #0x10 (16)",
        "ldr s2, [x20]",
        "mov v6.16b, v5.16b",
        "fadd s0, s5, s2",
        "mov v6.s[0], v0.s[0]",
        "mov v18.16b, v6.16b",
        "sub x20, x23, #0x10 (16)",
        "str s6, [x20]",
        "sub x20, x22, #0xc (12)",
        "ldr s2, [x20]",
        "mov v18.16b, v2.16b",
        "mov v5.16b, v2.16b",
        "fmul s0, s2, s4",
        "mov v5.s[0], v0.s[0]",
        "mov v18.16b, v5.16b",
        "sub x20, x23, #0xc (12)",
        "ldr s2, [x20]",
        "mov v6.16b, v5.16b",
        "fadd s0, s5, s2",
        "mov v6.s[0], v0.s[0]",
        "mov v18.16b, v6.16b",
        "sub x20, x23, #0xc (12)",
        "str s6, [x20]",
        "sub x20, x22, #0x8 (8)",
        "ldr s2, [x20]",
        "mov v18.16b, v2.16b",
        "mov v5.16b, v2.16b",
        "fmul s0, s2, s3",
        "mov v5.s[0], v0.s[0]",
        "mov v18.16b, v5.16b",
        "sub x20, x23, #0x8 (8)",
        "ldr s2, [x20]",
        "mov v3.16b, v5.16b",
        "fadd s0, s5, s2",
        "mov v3.s[0], v0.s[0]",
        "mov v18.16b, v3.16b",
        "sub x20, x23, #0x8 (8)",
        "str s3, [x20]",
        "sub x20, x22, #0x4 (4)",
        "ldr s2, [x20]",
        "mov v18.16b, v2.16b",
        "mov v3.16b, v2.16b",
        "fmul s0, s2, s4",
        "mov v3.s[0], v0.s[0]",
        "mov v18.16b, v3.16b",
        "sub x20, x23, #0x4 (4)",
        "ldr s2, [x20]",
        "mov v4.16b, v3.16b",
        "fadd s0, s3, s2",
        "mov v4.s[0], v0.s[0]",
        "mov v18.16b, v4.16b",
        "sub x20, x23, #0x4 (4)",
        "str s4, [x20]",
        "mov x27, x21",
        "subs w20, w21, #0x1 (1)",
        "mov x26, x20",
        "cfinv",
        "mov x10, x20"
      ]
    },
    "Scalar vector add loop": {
      "ExpectedInstructionCount": 16,
      "Comment": [
        "Saw this in bytemark"
      ],
      "x86Insts": [
        "movdqu  xmm0, [r12+rax]",
        "paddq   xmm0, xmm1",
        "movups  [r12+rax], xmm0",
        "add     rax, 0x10",
        "cmp     rsi, rax"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x16",
        "mov x21, x4",
        "ldr q2, [x20, x21, sxtx]",
        "mov v16.16b, v2.16b",
        "mov v3.16b, v17.16b",
        "add v4.2d, v2.2d, v3.2d",
        "mov v16.16b, v4.16b",
        "str q4, [x20, x21, sxtx]",
        "add x20, x21, #0x10 (16)",
        "mov x4, x20",
        "mov x21, x10",
        "eor w22, w21, w20",
        "mov x27, x22",
        "subs x22, x21, x20",
        "mov x26, x22",
        "cfinv"
      ]
    },
    "bytemark data xor loop": {
      "ExpectedInstructionCount": 25,
      "Comment": [
        "Saw this in bytemark"
      ],
      "x86Insts": [
        "mov     rdx, rax",
        "mov     rcx, rax",
        "mov     r14, rsi",
        "add     rax, 0x1",
        "shr     rdx, 0x6",
        "and     ecx, 0x3f",
        "shl     r14, cl",
        "xor     qword [rbx+rdx*8], r14",
        "cmp     rdi, rax"
      ],
      "ExpectedArm64ASM": [
        "mov x20, x4",
        "mov x6, x20",
        "mov x5, x20",
        "mov x21, x10",
        "mov x19, x21",
        "add x22, x20, #0x1 (1)",
        "mov x4, x22",
        "lsr x23, x20, #6",
        "mov x6, x23",
        "and w24, w20, #0x3f",
        "mov x5, x24",
        "lsl x20, x21, x24",
        "mov x19, x20",
        "mov x21, x7",
        "add x24, x21, x23, lsl #3",
        "ldr x25, [x24]",
        "eor x24, x25, x20",
        "add x20, x21, x23, lsl #3",
        "str x24, [x20]",
        "mov x20, x11",
        "eor w21, w20, w22",
        "mov x27, x21",
        "subs x21, x20, x22",
        "mov x26, x21",
        "cfinv"
      ]
    }
  }
}
