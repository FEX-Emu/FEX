{
  "Features": {
    "EnabledHostFeatures": [
      "FLAGM",
      "FLAGM2"
    ],
    "DisabledHostFeatures": [
      "SVE128",
      "SVE256",
      "AFP"
    ]
  },
  "Instructions": {
    "Chained add": {
      "ExpectedInstructionCount": 4,
      "x86Insts": [
        "add rax, rbx",
        "adc rcx, rcx"
      ],
      "ExpectedArm64ASM": [
        "adds x4, x4, x7",
        "mov w27, #0x0",
        "adcs x26, x5, x5",
        "mov x5, x26"
      ]
    },
    "Chained sub": {
      "ExpectedInstructionCount": 7,
      "x86Insts": [
        "sub rax, rbx",
        "sbb rcx, rdx"
      ],
      "ExpectedArm64ASM": [
        "subs x4, x4, x7",
        "cfinv",
        "eor w27, w5, w6",
        "cfinv",
        "sbcs x26, x5, x6",
        "cfinv",
        "mov x5, x26"
      ]
    },
    "Inverted add": {
      "ExpectedInstructionCount": 5,
      "x86Insts": [
        "add rax, rbx",
        "adc rcx, rdx",
        "cmc"
      ],
      "ExpectedArm64ASM": [
        "adds x4, x4, x7",
        "eor w27, w5, w6",
        "adcs x26, x5, x6",
        "mov x5, x26",
        "cfinv"
      ]
    },
    "Inverted sub": {
      "ExpectedInstructionCount": 8,
      "x86Insts": [
        "sub rax, rbx",
        "sbb rcx, rcx",
        "cmc"
      ],
      "ExpectedArm64ASM": [
        "subs x4, x4, x7",
        "cfinv",
        "mov w27, #0x0",
        "cfinv",
        "sbcs x26, x5, x5",
        "cfinv",
        "mov x5, x26",
        "cfinv"
      ]
    },
    "ADC dead": {
      "ExpectedInstructionCount": 3,
      "x86Insts": [
        "add rax, rbx",
        "adc rcx, rcx",
        "test rcx, rcx"
      ],
      "ExpectedArm64ASM": [
        "adds x4, x4, x7",
        "adc x5, x5, x5",
        "ands x26, x5, x5"
      ]
    },
    "INC consumed": {
      "ExpectedInstructionCount": 6,
      "x86Insts": [
        "add rax, rbx",
        "inc rax"
      ],
      "ExpectedArm64ASM": [
        "adds x4, x4, x7",
        "cset w20, hs",
        "adds x26, x4, #0x1 (1)",
        "rmif x20, #63, #nzCv",
        "mov x27, x4",
        "mov x4, x26"
      ]
    },
    "INC dead": {
      "ExpectedInstructionCount": 3,
      "x86Insts": [
        "add rax, rbx",
        "inc rax",
        "test rax, rdx"
      ],
      "ExpectedArm64ASM": [
        "add x4, x4, x7",
        "add x4, x4, #0x1 (1)",
        "ands x26, x4, x6"
      ]
    },
    "DEC consumed": {
      "ExpectedInstructionCount": 7,
      "x86Insts": [
        "sub rax, rbx",
        "dec rax"
      ],
      "ExpectedArm64ASM": [
        "subs x4, x4, x7",
        "cfinv",
        "cset w20, hs",
        "subs x26, x4, #0x1 (1)",
        "rmif x20, #63, #nzCv",
        "mov x27, x4",
        "mov x4, x26"
      ]
    },
    "DEC dead": {
      "ExpectedInstructionCount": 3,
      "x86Insts": [
        "sub rax, rbx",
        "dec rax",
        "test rax, rcx"
      ],
      "ExpectedArm64ASM": [
        "sub x4, x4, x7",
        "sub x4, x4, #0x1 (1)",
        "ands x26, x4, x5"
      ]
    },
    "8-bit DEC consumed": {
      "ExpectedInstructionCount": 12,
      "x86Insts": [
        "sub al, ah",
        "dec al"
      ],
      "ExpectedArm64ASM": [
        "lsr w20, w4, #8",
        "lsl w0, w4, #24",
        "cmp w0, w20, lsl #24",
        "sub w20, w4, w20",
        "cfinv",
        "bfxil x4, x20, #0, #8",
        "uxtb w27, w4",
        "sub w26, w27, #0x1 (1)",
        "setf8 w26",
        "bic w20, w27, w26",
        "rmif x20, #7, #nzcV",
        "bfxil x4, x26, #0, #8"
      ]
    },
    "8-bit DEC dead": {
      "ExpectedInstructionCount": 8,
      "x86Insts": [
        "sub al, ah",
        "dec al",
        "test al, al"
      ],
      "ExpectedArm64ASM": [
        "lsr w20, w4, #8",
        "sub w20, w4, w20",
        "bfxil x4, x20, #0, #8",
        "uxtb w20, w4",
        "sub w20, w20, #0x1 (1)",
        "bfxil x4, x20, #0, #8",
        "mov x26, x4",
        "cmn wzr, w26, lsl #24"
      ]
    },
    "Variable shift dead": {
      "ExpectedInstructionCount": 2,
      "x86Insts": [
        "sar rax, cl",
        "test rax, rdx"
      ],
      "ExpectedArm64ASM": [
        "asr x4, x4, x5",
        "ands x26, x4, x6"
      ]
    },
    "Variable rotate-through-carry dead": {
      "ExpectedInstructionCount": 15,
      "x86Insts": [
        "rcr rax, cl",
        "test rax, rdx"
      ],
      "ExpectedArm64ASM": [
        "and x20, x5, #0x3f",
        "cbz x20, #+0x34",
        "lsr x20, x4, x5",
        "cset w21, hs",
        "neg x22, x5",
        "lsl x23, x4, x22",
        "orr x20, x20, x23, lsl #1",
        "sub x23, x5, #0x1 (1)",
        "lsr x23, x4, x23",
        "rmif x23, #63, #nzCv",
        "lsl x21, x21, x22",
        "orr x4, x20, x21",
        "eor x20, x4, x4, lsr #1",
        "rmif x20, #62, #nzcV",
        "ands x26, x4, x6"
      ]
    },
    "Partial NZCV select (cmp)": {
      "ExpectedInstructionCount": 5,
      "x86Insts": [
        "cmp rax, rbx",
        "setz cl",
        "test cl, cl"
      ],
      "ExpectedArm64ASM": [
        "subs x20, x4, x7",
        "cset x21, eq",
        "bfxil x5, x21, #0, #8",
        "mov x26, x5",
        "cmn wzr, w26, lsl #24"
      ]
    },
    "Partial NZCV select (add)": {
      "ExpectedInstructionCount": 5,
      "x86Insts": [
        "add rax, rbx",
        "setz cl",
        "test cl, cl"
      ],
      "ExpectedArm64ASM": [
        "adds x4, x4, x7",
        "cset x20, eq",
        "bfxil x5, x20, #0, #8",
        "mov x26, x5",
        "cmn wzr, w26, lsl #24"
      ]
    },
    "AND use only ZF": {
      "ExpectedInstructionCount": 5,
      "x86Insts": [
        "and eax, ebx",
        "setz cl",
        "test cl, cl"
      ],
      "ExpectedArm64ASM": [
        "ands w4, w4, w7",
        "cset x20, eq",
        "bfxil x5, x20, #0, #8",
        "mov x26, x5",
        "cmn wzr, w26, lsl #24"
      ]
    },
    "AND use only PF": {
      "ExpectedInstructionCount": 9,
      "x86Insts": [
        "and eax, ebx",
        "setp cl",
        "test cl, cl"
      ],
      "ExpectedArm64ASM": [
        "and w26, w4, w7",
        "mov x4, x26",
        "eor w20, w26, w26, lsr #4",
        "eor w20, w20, w20, lsr #2",
        "eon w20, w20, w20, lsr #1",
        "and x20, x20, #0x1",
        "bfxil x5, x20, #0, #8",
        "mov x26, x5",
        "cmn wzr, w26, lsl #24"
      ]
    },
    "Dead cmpxchg flags": {
      "ExpectedInstructionCount": 22,
      "x86Insts": [
        "cmpxchg8b [rbp]",
        "test rax, rax"
      ],
      "ExpectedArm64ASM": [
        "mov w20, w4",
        "mov w21, w6",
        "mov w20, w20",
        "mov w21, w21",
        "mov w22, w7",
        "mov w23, w5",
        "mov w22, w22",
        "mov w23, w23",
        "mov w2, w20",
        "mov w3, w21",
        "caspal w2, w3, w22, w23, [x9]",
        "mov w22, w2",
        "mov w23, w3",
        "mrs x0, nzcv",
        "cmp w22, w20",
        "ccmp w23, w21, #nzcv, eq",
        "rmif x0, #0, #NzCV",
        "mov w20, w23",
        "mov w21, w22",
        "csel x4, x21, x4, ne",
        "csel x6, x20, x6, ne",
        "ands x26, x4, x4"
      ]
    }
  }
}
